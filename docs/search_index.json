[["index.html", "Single Cell Sequencing Analysis Chapter 1 Content", " Single Cell Sequencing Analysis Zhilong Jia 2021-05-15 Chapter 1 Content 课程内容目录 "],["intro.html", "Chapter 2 Introduction 2.1 Read data Library packages 2.2 DimPlot : cell or cluster 2.3 单细胞可视化 2.4 dimplot1 2.5 比例 2.6 数据转化 2.7 sessionInfo", " Chapter 2 Introduction Based on singleronSC1.html 2.1 Read data Library packages library(Seurat) library(SeuratData) library(tidyverse) pbmc &lt;- pbmc3k.final head(pbmc@meta.data) ## orig.ident nCount_RNA nFeature_RNA seurat_annotations percent.mt ## AAACATACAACCAC pbmc3k 2419 779 Memory CD4 T 3.0177759 ## AAACATTGAGCTAC pbmc3k 4903 1352 B 3.7935958 ## AAACATTGATCAGC pbmc3k 3147 1129 Memory CD4 T 0.8897363 ## AAACCGTGCTTCCG pbmc3k 2639 960 CD14+ Mono 1.7430845 ## AAACCGTGTATGCG pbmc3k 980 521 NK 1.2244898 ## AAACGCACTGGTAC pbmc3k 2163 781 Memory CD4 T 1.6643551 ## RNA_snn_res.0.5 seurat_clusters ## AAACATACAACCAC 1 1 ## AAACATTGAGCTAC 3 3 ## AAACATTGATCAGC 1 1 ## AAACCGTGCTTCCG 2 2 ## AAACCGTGTATGCG 6 6 ## AAACGCACTGGTAC 1 1 pbmc@commands$FindClusters ## Command: FindClusters(pbmc3k.final, resolution = 0.5) ## Time: 2020-04-30 12:54:53 ## graph.name : RNA_snn ## modularity.fxn : 1 ## resolution : 0.5 ## method : matrix ## algorithm : 1 ## n.start : 10 ## n.iter : 10 ## random.seed : 0 ## group.singletons : TRUE ## verbose : TRUE 2.2 DimPlot : cell or cluster plot1&lt;-DimPlot(pbmc, reduction = &quot;umap&quot;) plot2&lt;-DimPlot(pbmc, reduction = &quot;umap&quot;,label = T) CombinePlots(plots = list(plot1, plot2),legend=&quot;bottom&quot;) ## Warning: CombinePlots is being deprecated. Plots should now be combined using ## the patchwork system. 2.3 单细胞可视化 2.4 dimplot1 library(ggplot2) DimPlot(pbmc3k.final)+ ggtitle(&#39;Zhilong&#39;) ## umap1 library(Seurat) library(SeuratData) library(tidyverse) p1&lt;- DimPlot(pbmc3k.final) head(DimPlot(pbmc3k.final)$data) ## UMAP_1 UMAP_2 ident ## AAACATACAACCAC -4.232792 -4.152139 Memory CD4 T ## AAACATTGAGCTAC -4.892886 10.985685 B ## AAACATTGATCAGC -5.508639 -7.211088 Memory CD4 T ## AAACCGTGCTTCCG 11.332233 3.161727 CD14+ Mono ## AAACCGTGTATGCG -7.450703 1.092022 NK ## AAACGCACTGGTAC -3.509504 -6.087042 Memory CD4 T p2&lt;- ggplot(DimPlot(pbmc3k.final)$data, aes(UMAP_1, UMAP_2, fill=ident)) + geom_point(shape=21,colour=&quot;black&quot;, stroke=0.25, alpha=0.8) + DimPlot(pbmc3k.final, label = T)$theme + theme_bw()+ NoLegend() p2+ p1 ## umap2 pbmc&lt;- pbmc3k.final pbmc&lt;-AddMetaData(pbmc,pbmc@reductions$umap@cell.embeddings,col.name = colnames(pbmc@reductions$umap@cell.embeddings)) head(pbmc@meta.data) ## orig.ident nCount_RNA nFeature_RNA seurat_annotations percent.mt ## AAACATACAACCAC pbmc3k 2419 779 Memory CD4 T 3.0177759 ## AAACATTGAGCTAC pbmc3k 4903 1352 B 3.7935958 ## AAACATTGATCAGC pbmc3k 3147 1129 Memory CD4 T 0.8897363 ## AAACCGTGCTTCCG pbmc3k 2639 960 CD14+ Mono 1.7430845 ## AAACCGTGTATGCG pbmc3k 980 521 NK 1.2244898 ## AAACGCACTGGTAC pbmc3k 2163 781 Memory CD4 T 1.6643551 ## RNA_snn_res.0.5 seurat_clusters UMAP_1 UMAP_2 ## AAACATACAACCAC 1 1 -4.232792 -4.152139 ## AAACATTGAGCTAC 3 3 -4.892886 10.985685 ## AAACATTGATCAGC 1 1 -5.508639 -7.211088 ## AAACCGTGCTTCCG 2 2 11.332233 3.161727 ## AAACCGTGTATGCG 6 6 -7.450703 1.092022 ## AAACGCACTGGTAC 1 1 -3.509504 -6.087042 library(dplyr) class_avg &lt;- pbmc@meta.data %&gt;% group_by(seurat_annotations) %&gt;% summarise( UMAP_1 = median(UMAP_1), UMAP_2 = median(UMAP_2) ) allcolour=c(&quot;#DC143C&quot;,&quot;#0000FF&quot;,&quot;#20B2AA&quot;,&quot;#FFA500&quot;,&quot;#9370DB&quot;,&quot;#98FB98&quot;,&quot;#F08080&quot;,&quot;#1E90FF&quot;,&quot;#7CFC00&quot;,&quot;#FFFF00&quot;, &quot;#808000&quot;,&quot;#FF00FF&quot;,&quot;#FA8072&quot;,&quot;#7B68EE&quot;,&quot;#9400D3&quot;,&quot;#800080&quot;,&quot;#A0522D&quot;,&quot;#D2B48C&quot;,&quot;#D2691E&quot;,&quot;#87CEEB&quot;,&quot;#40E0D0&quot;,&quot;#5F9EA0&quot;, &quot;#FF1493&quot;,&quot;#0000CD&quot;,&quot;#008B8B&quot;,&quot;#FFE4B5&quot;,&quot;#8A2BE2&quot;,&quot;#228B22&quot;,&quot;#E9967A&quot;,&quot;#4682B4&quot;,&quot;#32CD32&quot;,&quot;#F0E68C&quot;,&quot;#FFFFE0&quot;,&quot;#EE82EE&quot;, &quot;#FF6347&quot;,&quot;#6A5ACD&quot;,&quot;#9932CC&quot;,&quot;#8B008B&quot;,&quot;#8B4513&quot;,&quot;#DEB887&quot;) umap &lt;- ggplot(pbmc@meta.data ,aes(x=UMAP_1,y=UMAP_2))+ geom_point(aes(color=seurat_annotations))+ scale_color_manual(values = allcolour)+ geom_text(aes(label = seurat_annotations), data = class_avg)+ theme(text=element_text(family=&quot;Arial&quot;,size=18)) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;), panel.grid=element_blank(), axis.title = element_text(color=&#39;black&#39;, family=&quot;Arial&quot;,size=18),axis.ticks.length = unit(0.4,&quot;lines&quot;), axis.ticks = element_line(color=&#39;black&#39;), axis.ticks.margin = unit(0.6,&quot;lines&quot;), axis.line = element_line(colour = &quot;black&quot;), axis.title.x=element_text(colour=&#39;black&#39;, size=18), axis.title.y=element_text(colour=&#39;black&#39;, size=18), axis.text=element_text(colour=&#39;black&#39;,size=18), legend.title=element_blank(), legend.text=element_text(family=&quot;Arial&quot;, size=18), legend.key=element_blank())+ theme(plot.title = element_text(size=22,colour = &quot;black&quot;,face = &quot;bold&quot;)) + guides(colour = guide_legend(override.aes = list(size=5))) ## Warning: `axis.ticks.margin` is deprecated. Please set `margin` property of ## `axis.text` instead umap set.seed(42)#可重复性的 pbmc$replicate &lt;- sample(c(&quot;rep1&quot;, &quot;rep2&quot;), size = ncol(pbmc), replace = TRUE) head(pbmc@meta.data) ## orig.ident nCount_RNA nFeature_RNA seurat_annotations percent.mt ## AAACATACAACCAC pbmc3k 2419 779 Memory CD4 T 3.0177759 ## AAACATTGAGCTAC pbmc3k 4903 1352 B 3.7935958 ## AAACATTGATCAGC pbmc3k 3147 1129 Memory CD4 T 0.8897363 ## AAACCGTGCTTCCG pbmc3k 2639 960 CD14+ Mono 1.7430845 ## AAACCGTGTATGCG pbmc3k 980 521 NK 1.2244898 ## AAACGCACTGGTAC pbmc3k 2163 781 Memory CD4 T 1.6643551 ## RNA_snn_res.0.5 seurat_clusters UMAP_1 UMAP_2 replicate ## AAACATACAACCAC 1 1 -4.232792 -4.152139 rep1 ## AAACATTGAGCTAC 3 3 -4.892886 10.985685 rep1 ## AAACATTGATCAGC 1 1 -5.508639 -7.211088 rep1 ## AAACCGTGCTTCCG 2 2 11.332233 3.161727 rep1 ## AAACCGTGTATGCG 6 6 -7.450703 1.092022 rep2 ## AAACGCACTGGTAC 1 1 -3.509504 -6.087042 rep2 as.data.frame(prop.table(table(Idents(pbmc), pbmc@meta.data[,&quot;replicate&quot;]), margin = 2))-&gt; pdf -&gt; td library(tidyverse) allcolour=c(&quot;#DC143C&quot;,&quot;#0000FF&quot;,&quot;#20B2AA&quot;,&quot;#FFA500&quot;,&quot;#9370DB&quot;,&quot;#98FB98&quot;,&quot;#F08080&quot;,&quot;#1E90FF&quot;,&quot;#7CFC00&quot;,&quot;#FFFF00&quot;,&quot;#808000&quot;,&quot;#FF00FF&quot;,&quot;#FA8072&quot;,&quot;#7B68EE&quot;,&quot;#9400D3&quot;,&quot;#800080&quot;,&quot;#A0522D&quot;,&quot;#D2B48C&quot;,&quot;#D2691E&quot;,&quot;#87CEEB&quot;,&quot;#40E0D0&quot;,&quot;#5F9EA0&quot;,&quot;#FF1493&quot;,&quot;#0000CD&quot;,&quot;#008B8B&quot;,&quot;#FFE4B5&quot;,&quot;#8A2BE2&quot;,&quot;#228B22&quot;,&quot;#E9967A&quot;,&quot;#4682B4&quot;,&quot;#32CD32&quot;,&quot;#F0E68C&quot;,&quot;#FFFFE0&quot;,&quot;#EE82EE&quot;,&quot;#FF6347&quot;,&quot;#6A5ACD&quot;,&quot;#9932CC&quot;,&quot;#8B008B&quot;,&quot;#8B4513&quot;,&quot;#DEB887&quot;) allcolour -&gt; colour1 plt&lt;- ggplot(td,aes(x=td[,2],y=td[,3],fill=td[,1]))+ geom_bar(position = &#39;stack&#39;,stat=&quot;identity&quot;)+ labs(x=&quot;replicate&quot;,y=&quot;Cells Ratio&quot;)+ theme(panel.background=element_rect(fill=&#39;transparent&#39;, color=&#39;black&#39;), legend.key=element_rect(fill=&#39;transparent&#39;, color=&#39;transparent&#39;),axis.text = element_text(color=&quot;black&quot;))+ scale_y_continuous(expand=c(0.001,0.001))+ scale_fill_manual(values=colour1)+ guides(fill = guide_legend(keywidth = 1, keyheight = 1,ncol=1,title = &#39;Cluster&#39;)) plt 2.5 比例 col &lt;- c(&#39;red&#39;,&#39;blue&#39;,&#39;cyan4&#39;,&#39;yellow&#39;,&#39;skyblue&#39;,&#39;purple&#39;, &#39;olivedrab3&#39;,&#39;springgreen&#39;,&#39;olivedrab1&#39;,&#39;forestgreen&#39;,&#39;darkslateblue&#39;) p3&lt;- ggplot(td,aes(x=td[,2],y=td[,3],fill=td[,1])) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;)+ scale_fill_manual(values=col) +coord_flip() p4&lt;- ggplot(td,aes(x=td[,2],y=td[,3],fill=td[,1])) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;)+ scale_fill_manual(values=col) +facet_wrap(~ td[,2], scales = &#39;free&#39;) p5&lt;- ggplot(td,aes(x=td[,2],y=td[,3],fill=td[,1])) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;)+ scale_fill_manual(values=col) +coord_polar(theta = &#39;y&#39;) p5 2.6 数据转化 library(tidyr) head( pbmc@meta.data) ## orig.ident nCount_RNA nFeature_RNA seurat_annotations percent.mt ## AAACATACAACCAC pbmc3k 2419 779 Memory CD4 T 3.0177759 ## AAACATTGAGCTAC pbmc3k 4903 1352 B 3.7935958 ## AAACATTGATCAGC pbmc3k 3147 1129 Memory CD4 T 0.8897363 ## AAACCGTGCTTCCG pbmc3k 2639 960 CD14+ Mono 1.7430845 ## AAACCGTGTATGCG pbmc3k 980 521 NK 1.2244898 ## AAACGCACTGGTAC pbmc3k 2163 781 Memory CD4 T 1.6643551 ## RNA_snn_res.0.5 seurat_clusters UMAP_1 UMAP_2 replicate ## AAACATACAACCAC 1 1 -4.232792 -4.152139 rep1 ## AAACATTGAGCTAC 3 3 -4.892886 10.985685 rep1 ## AAACATTGATCAGC 1 1 -5.508639 -7.211088 rep1 ## AAACCGTGCTTCCG 2 2 11.332233 3.161727 rep1 ## AAACCGTGTATGCG 6 6 -7.450703 1.092022 rep2 ## AAACGCACTGGTAC 1 1 -3.509504 -6.087042 rep2 td_tidy&lt;-spread(data = td, key = &quot;Var1&quot;, value = &quot;Freq&quot;) head(td_tidy) ## Var2 Naive CD4 T Memory CD4 T CD14+ Mono B CD8 T FCGR3A+ Mono ## 1 rep1 0.2626113 0.1847181 0.1721068 0.1283383 0.11424332 0.06008902 ## 2 rep2 0.2658915 0.1813953 0.1922481 0.1325581 0.09069767 0.06279070 ## NK DC Platelet ## 1 0.06008902 0.01335312 0.004451039 ## 2 0.05736434 0.01085271 0.006201550 td_tidy2 &lt;- gather(data = td_tidy,key = &quot;Var1&quot;, value = &quot;Freq&quot;, -Var2) head(td_tidy2) ## Var2 Var1 Freq ## 1 rep1 Naive CD4 T 0.2626113 ## 2 rep2 Naive CD4 T 0.2658915 ## 3 rep1 Memory CD4 T 0.1847181 ## 4 rep2 Memory CD4 T 0.1813953 ## 5 rep1 CD14+ Mono 0.1721068 ## 6 rep2 CD14+ Mono 0.1922481 2.7 sessionInfo sessionInfo() ## R version 4.0.4 (2021-02-15) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 20.10 ## ## Matrix products: default ## BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 ## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 ## ## locale: ## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ## [3] LC_TIME=en_GB.UTF-8 LC_COLLATE=en_US.UTF-8 ## [5] LC_MONETARY=en_GB.UTF-8 LC_MESSAGES=en_US.UTF-8 ## [7] LC_PAPER=en_GB.UTF-8 LC_NAME=C ## [9] LC_ADDRESS=C LC_TELEPHONE=C ## [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] forcats_0.5.1 stringr_1.4.0 dplyr_1.0.5 ## [4] purrr_0.3.4 readr_1.4.0 tidyr_1.1.3 ## [7] tibble_3.1.1 ggplot2_3.3.3 tidyverse_1.3.1 ## [10] pbmc3k.SeuratData_3.1.4 SeuratData_0.2.1 SeuratObject_4.0.0 ## [13] Seurat_4.0.1 ## ## loaded via a namespace (and not attached): ## [1] readxl_1.3.1 backports_1.2.1 plyr_1.8.6 ## [4] igraph_1.2.6 lazyeval_0.2.2 splines_4.0.4 ## [7] listenv_0.8.0 scattermore_0.7 digest_0.6.27 ## [10] htmltools_0.5.1.1 fansi_0.4.2 magrittr_2.0.1 ## [13] tensor_1.5 cluster_2.1.2 ROCR_1.0-11 ## [16] globals_0.14.0 modelr_0.1.8 matrixStats_0.58.0 ## [19] spatstat.sparse_2.0-0 colorspace_2.0-0 rvest_1.0.0 ## [22] rappdirs_0.3.3 ggrepel_0.9.1 haven_2.4.0 ## [25] xfun_0.22 crayon_1.4.1 jsonlite_1.7.2 ## [28] spatstat.data_2.1-0 survival_3.2-10 zoo_1.8-9 ## [31] glue_1.4.2 polyclip_1.10-0 gtable_0.3.0 ## [34] leiden_0.3.7 future.apply_1.7.0 abind_1.4-5 ## [37] scales_1.1.1 DBI_1.1.1 miniUI_0.1.1.1 ## [40] Rcpp_1.0.6 viridisLite_0.4.0 xtable_1.8-4 ## [43] reticulate_1.18 spatstat.core_2.1-2 htmlwidgets_1.5.3 ## [46] httr_1.4.2 RColorBrewer_1.1-2 ellipsis_0.3.1 ## [49] ica_1.0-2 pkgconfig_2.0.3 farver_2.1.0 ## [52] sass_0.3.1 uwot_0.1.10 dbplyr_2.1.1 ## [55] deldir_0.2-10 utf8_1.2.1 tidyselect_1.1.0 ## [58] labeling_0.4.2 rlang_0.4.10 reshape2_1.4.4 ## [61] later_1.1.0.1 munsell_0.5.0 cellranger_1.1.0 ## [64] tools_4.0.4 cli_2.4.0 generics_0.1.0 ## [67] broom_0.7.6 ggridges_0.5.3 evaluate_0.14 ## [70] fastmap_1.1.0 yaml_2.2.1 goftest_1.2-2 ## [73] knitr_1.32 fs_1.5.0 fitdistrplus_1.1-3 ## [76] RANN_2.6.1 pbapply_1.4-3 future_1.21.0 ## [79] nlme_3.1-152 mime_0.10 xml2_1.3.2 ## [82] compiler_4.0.4 rstudioapi_0.13 plotly_4.9.3 ## [85] png_0.1-7 spatstat.utils_2.1-0 reprex_2.0.0 ## [88] bslib_0.2.4 stringi_1.5.3 highr_0.9 ## [91] lattice_0.20-41 Matrix_1.3-2 vctrs_0.3.7 ## [94] pillar_1.6.0 lifecycle_1.0.0 spatstat.geom_2.1-0 ## [97] lmtest_0.9-38 jquerylib_0.1.3 RcppAnnoy_0.0.18 ## [100] data.table_1.14.0 cowplot_1.1.1 irlba_2.3.3 ## [103] httpuv_1.5.5 patchwork_1.1.1 R6_2.5.0 ## [106] bookdown_0.21 promises_1.2.0.1 KernSmooth_2.23-18 ## [109] gridExtra_2.3 parallelly_1.24.0 codetools_0.2-18 ## [112] MASS_7.3-53.1 assertthat_0.2.1 withr_2.4.2 ## [115] sctransform_0.3.2 mgcv_1.8-35 parallel_4.0.4 ## [118] hms_1.0.0 grid_4.0.4 rpart_4.1-15 ## [121] rmarkdown_2.7 Rtsne_0.15 shiny_1.6.0 ## [124] lubridate_1.7.10 "],["a-introduction-to-single-cell-sequening.html", "Chapter 3 A introduction to Single Cell Sequening 3.1 data format of Seurat 3.2 Data Access 3.3 Methods 3.4 test read h5 file. 3.5 reproduce UMAP fig 1a 3.6 sessionInfo", " Chapter 3 A introduction to Single Cell Sequening Based on singleron02.html 3.1 data format of Seurat Bioconductor主导的SingleCellExperiment数据格式：例如scran、scater、monocle（尽管它的对象不直接使用SingleCellExperiment，但灵感来源于SingleCellExperiment，并且操作也是类似的） Seurat：SeuratObject格式 scanpy：AnnData格式 ref: https://github.com/satijalab/seurat/wiki/Seurat https://www.jianshu.com/p/50e289a694d2 Seurat对象 3.2 Data Access Summary information about Seurat objects can be had quickly and easily using standard R functions. Object shape/dimensions can be found using the dim, ncol, and nrow functions; cell and feature names can be found using the colnames and rownames functions, respectively, or the dimnames function. A vector of names of Assay, DimReduc, and Graph objects contained in a Seurat object can be had by using names. Pulling specific Assay, DimReduc, or Graph objects can be done with the double [[ extract operator. Adding new objects to a Seurat object is also done with the double [[ extract operator; Seurat will figure out where in the Seurat object a new associated object belongs. Accessing data from an Seurat object is done with the GetAssayData function. Adding expression data to either the counts, data, or scale.data slots can be done with SetAssayData. New data must have the same cells in the same order as the current expression data. Data added to counts or data must have the same features as the current expression data. Cell-level meta data can be accessed with the single [[ extract operator or using the $ sigil. Pulling with the $ sigil means only one bit of meta data can be pulled at a time, though tab-autocompletion has been enabled for it, making it ideal for interactive use. Adding cell-level meta data can be set using the single [[ extract operator as well, or by using AddMetaData. The HVFInfo function pulls feature mean and dispersion from an Assay object. The vector of variable features can be pulled with the VariableFeatures function. VariableFeatures can also set the vector of variable features. A vector of standard deviations for a DimReduc stored within the Seurat object can be found with Stdev. 3.3 Methods library(Seurat) utils::methods(class = &#39;Seurat&#39;) ## [1] [ [[ ## [3] [[&lt;- $ ## [5] $&lt;- AddMetaData ## [7] as.CellDataSet as.SingleCellExperiment ## [9] colMeans colSums ## [11] Command DefaultAssay ## [13] DefaultAssay&lt;- dim ## [15] dimnames droplevels ## [17] Embeddings FindClusters ## [19] FindMarkers FindNeighbors ## [21] FindSpatiallyVariableFeatures FindVariableFeatures ## [23] FoldChange GetAssay ## [25] GetAssayData GetImage ## [27] GetTissueCoordinates HVFInfo ## [29] Idents Idents&lt;- ## [31] Key levels ## [33] levels&lt;- Loadings ## [35] merge Misc ## [37] Misc&lt;- names ## [39] NormalizeData Project ## [41] Project&lt;- ProjectUMAP ## [43] RenameCells RenameIdents ## [45] ReorderIdent rowMeans ## [47] rowSums RunCCA ## [49] RunICA RunLDA ## [51] RunPCA RunSPCA ## [53] RunTSNE RunUMAP ## [55] ScaleData ScoreJackStraw ## [57] SCTResults SetAssayData ## [59] SetIdent show ## [61] SpatiallyVariableFeatures StashIdent ## [63] Stdev subset ## [65] SVFInfo Tool ## [67] Tool&lt;- VariableFeatures ## [69] VariableFeatures&lt;- WhichCells ## see &#39;?methods&#39; for accessing help and source code 单细胞分析流程 3.4 test read h5 file. library(&quot;Seurat&quot;) tmp &lt;- Read10X_h5(&quot;../covid_balf/GSM4339769_C141_filtered_feature_bc_matrix.h5&quot;) ## Warning in sparseMatrix(i = indices[] + 1, p = indptr[], x = as.numeric(x = ## counts[]), : &#39;giveCsparse&#39; has been deprecated; setting &#39;repr = &quot;T&quot;&#39; for you 3.5 reproduce UMAP fig 1a paper “Single-cell landscape of bronchoalveolar immune cells in patients with COVID-19” bm &lt;- readRDS(&quot;../covid_balf/nCoV.rds&quot;) p1 &lt;- DimPlot(bm, reduction=&quot;umap&quot;, label = TRUE, repel = TRUE, label.size = 2.5) + NoLegend() p2 &lt;- DimPlot(bm, group.by = &#39;group&#39;, label = TRUE, repel = TRUE, label.size = 2.5) p1 + p2 3.6 sessionInfo sessionInfo() ## R version 4.0.4 (2021-02-15) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 20.10 ## ## Matrix products: default ## BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 ## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 ## ## locale: ## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ## [3] LC_TIME=en_GB.UTF-8 LC_COLLATE=en_US.UTF-8 ## [5] LC_MONETARY=en_GB.UTF-8 LC_MESSAGES=en_US.UTF-8 ## [7] LC_PAPER=en_GB.UTF-8 LC_NAME=C ## [9] LC_ADDRESS=C LC_TELEPHONE=C ## [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] forcats_0.5.1 stringr_1.4.0 dplyr_1.0.5 ## [4] purrr_0.3.4 readr_1.4.0 tidyr_1.1.3 ## [7] tibble_3.1.1 ggplot2_3.3.3 tidyverse_1.3.1 ## [10] pbmc3k.SeuratData_3.1.4 SeuratData_0.2.1 SeuratObject_4.0.0 ## [13] Seurat_4.0.1 ## ## loaded via a namespace (and not attached): ## [1] readxl_1.3.1 backports_1.2.1 plyr_1.8.6 ## [4] igraph_1.2.6 lazyeval_0.2.2 splines_4.0.4 ## [7] listenv_0.8.0 scattermore_0.7 digest_0.6.27 ## [10] htmltools_0.5.1.1 fansi_0.4.2 magrittr_2.0.1 ## [13] tensor_1.5 cluster_2.1.2 ROCR_1.0-11 ## [16] globals_0.14.0 modelr_0.1.8 matrixStats_0.58.0 ## [19] spatstat.sparse_2.0-0 colorspace_2.0-0 rvest_1.0.0 ## [22] rappdirs_0.3.3 ggrepel_0.9.1 haven_2.4.0 ## [25] xfun_0.22 crayon_1.4.1 jsonlite_1.7.2 ## [28] spatstat.data_2.1-0 survival_3.2-10 zoo_1.8-9 ## [31] glue_1.4.2 polyclip_1.10-0 gtable_0.3.0 ## [34] leiden_0.3.7 future.apply_1.7.0 abind_1.4-5 ## [37] scales_1.1.1 DBI_1.1.1 miniUI_0.1.1.1 ## [40] Rcpp_1.0.6 viridisLite_0.4.0 xtable_1.8-4 ## [43] reticulate_1.18 spatstat.core_2.1-2 bit_4.0.4 ## [46] htmlwidgets_1.5.3 httr_1.4.2 RColorBrewer_1.1-2 ## [49] ellipsis_0.3.1 ica_1.0-2 pkgconfig_2.0.3 ## [52] farver_2.1.0 sass_0.3.1 uwot_0.1.10 ## [55] dbplyr_2.1.1 deldir_0.2-10 utf8_1.2.1 ## [58] tidyselect_1.1.0 labeling_0.4.2 rlang_0.4.10 ## [61] reshape2_1.4.4 later_1.1.0.1 munsell_0.5.0 ## [64] cellranger_1.1.0 tools_4.0.4 cli_2.4.0 ## [67] generics_0.1.0 broom_0.7.6 ggridges_0.5.3 ## [70] evaluate_0.14 fastmap_1.1.0 yaml_2.2.1 ## [73] goftest_1.2-2 bit64_4.0.5 knitr_1.32 ## [76] fs_1.5.0 fitdistrplus_1.1-3 RANN_2.6.1 ## [79] pbapply_1.4-3 future_1.21.0 nlme_3.1-152 ## [82] mime_0.10 xml2_1.3.2 hdf5r_1.3.3 ## [85] compiler_4.0.4 rstudioapi_0.13 plotly_4.9.3 ## [88] png_0.1-7 spatstat.utils_2.1-0 reprex_2.0.0 ## [91] bslib_0.2.4 stringi_1.5.3 highr_0.9 ## [94] lattice_0.20-41 Matrix_1.3-2 vctrs_0.3.7 ## [97] pillar_1.6.0 lifecycle_1.0.0 spatstat.geom_2.1-0 ## [100] lmtest_0.9-38 jquerylib_0.1.3 RcppAnnoy_0.0.18 ## [103] data.table_1.14.0 cowplot_1.1.1 irlba_2.3.3 ## [106] httpuv_1.5.5 patchwork_1.1.1 R6_2.5.0 ## [109] bookdown_0.21 promises_1.2.0.1 KernSmooth_2.23-18 ## [112] gridExtra_2.3 parallelly_1.24.0 codetools_0.2-18 ## [115] MASS_7.3-53.1 assertthat_0.2.1 withr_2.4.2 ## [118] sctransform_0.3.2 mgcv_1.8-35 parallel_4.0.4 ## [121] hms_1.0.0 grid_4.0.4 rpart_4.1-15 ## [124] rmarkdown_2.7 Rtsne_0.15 shiny_1.6.0 ## [127] lubridate_1.7.10 "],["pipeline.html", "Chapter 4 Pipeline 4.1 数据准备 4.2 数据预处理 4.3 单细胞聚类 4.4 单细胞聚类簇类型鉴定(Differential expression analysis) 4.5 sessionInfo", " Chapter 4 Pipeline 本次课程主要以测试数据为例，实际展示和操作基于Seurat的单细胞测序数据的基本分析流程。 Based on sc_basic.html REF: https://satijalab.org/seurat/articles/pbmc3k_tutorial.html 4.1 数据准备 4.1.1 下载测试数据 本教程分析数据10X单细胞2700个细胞的PBMC数据，下载地址： https://cf.10xgenomics.com/samples/cell/pbmc3k/pbmc3k_filtered_gene_bc_matrices.tar.gz dir_10x &lt;- &#39;./data/pbmc3k_filtered_gene_bc_matrices/filtered_gene_bc_matrices/hg19/&#39; list.files(dir_10x) ## [1] &quot;barcodes.tsv&quot; &quot;genes.tsv&quot; &quot;matrix.mtx&quot; 4.1.2 载入表达矩阵 library(Seurat) library(ggplot2) ## 直接读取表达矩阵文件 mat &lt;- Read10X(dir_10x) # mat &lt;- read.table(&#39;../pbmc3k_filtered_gene_bc_matrices/filtered_gene_bc_matrices/SingleCell_matrix.tsv&#39;, header=T, row.names=1, sep=&#39;\\t&#39;, check.names=F ) mat[1:5, 1:3] ## 5 x 3 sparse Matrix of class &quot;dgCMatrix&quot; ## AAACATACAACCAC-1 AAACATTGAGCTAC-1 AAACATTGATCAGC-1 ## MIR1302-10 . . . ## FAM138A . . . ## OR4F5 . . . ## RP11-34P13.7 . . . ## RP11-34P13.8 . . . #sparse-matrix saves memory and speed. dense.size &lt;- object.size(as.matrix(mat)) dense.size ## 709591472 bytes sparse.size &lt;- object.size(mat) sparse.size ## 29905192 bytes 4.2 数据预处理 数据预处理过程主要包括： 基于QC指标的细胞和基因过滤 数据标准化 数据归一化 高变基因选择 数据降维 4.2.1 构建Seurat数据对象 PRO &lt;- CreateSeuratObject(count = mat, project = &#39;PBMC&#39;) ## Warning: Feature names cannot have underscores (&#39;_&#39;), replacing with dashes ## (&#39;-&#39;) PRO ## An object of class Seurat ## 32738 features across 2700 samples within 1 assay ## Active assay: RNA (32738 features, 0 variable features) # 每个基因至少在5个细胞中表达 # 每个细胞至少检测到300个基因 PRO1 &lt;- CreateSeuratObject(count = mat, project = &#39;PBMC&#39;, min.cells = 5, min.features = 300 ) ## Warning: Feature names cannot have underscores (&#39;_&#39;), replacing with dashes ## (&#39;-&#39;) PRO1 ## An object of class Seurat ## 12565 features across 2685 samples within 1 assay ## Active assay: RNA (12565 features, 0 variable features) PRO &lt;- RenameCells(PRO, add.cell.id=&#39;PBMC&#39;) head(PRO@meta.data) ## orig.ident nCount_RNA nFeature_RNA ## PBMC_AAACATACAACCAC-1 PBMC 2421 781 ## PBMC_AAACATTGAGCTAC-1 PBMC 4903 1352 ## PBMC_AAACATTGATCAGC-1 PBMC 3149 1131 ## PBMC_AAACCGTGCTTCCG-1 PBMC 2639 960 ## PBMC_AAACCGTGTATGCG-1 PBMC 981 522 ## PBMC_AAACGCACTGGTAC-1 PBMC 2164 782 4.2.2 多个单细胞矩阵合并 当有多个单细胞样本需要合并分析时，可基于单个样本构建的Seurat数据对象进行合并。 # Only for test. # paths = c(path1, path2, path3, ... ) # mats = c(dir_10x, dir_10x, dir_10x) # sc_list &lt;- list() # for ( i in 1:length(mats) ){ # name &lt;- paste0(&#39;sample_&#39;,i) # mat_i &lt;- Read10X( mats[i] ) # PRO_i &lt;- CreateSeuratObject(mat_i, project= name, min.cells = 5, min.features = 200 ) # PRO_i &lt;- RenameCells(PRO_i, add.cell.id= name ) # sc_list &lt;- c(sc_list, PRO_i) # } # sc_list # # PRO_merge &lt;- Reduce(merge, sc_list) # PRO_merge # rm(list=c(&#39;PRO_merge&#39;,&#39;sc_list&#39;,&#39;PRO_i&#39;,&#39;mat_i&#39;,&#39;mat&#39;)) 4.2.3 单细胞表达矩阵质控 单细胞分析之前，需要筛选得到高质量，高可靠性的细胞，保证后续分析结果的准确性。 常用的过滤条件包括三个： 单个细胞的UMI数 单个细胞中检测到的gene数 低质量细胞或者空的droplet液滴含有的少量基因 doublets双胞体或多胞体含有很高的gene counts 线粒体基因含量比例 低质量或者死亡细胞含有很高的线粒体基因 不同组织正常线粒体含量范围有差异 4.2.3.1 通过单个细胞count数和feature数分布的可视化帮助确定过滤条件的阈值 head(PRO@meta.data) ## orig.ident nCount_RNA nFeature_RNA ## PBMC_AAACATACAACCAC-1 PBMC 2421 781 ## PBMC_AAACATTGAGCTAC-1 PBMC 4903 1352 ## PBMC_AAACATTGATCAGC-1 PBMC 3149 1131 ## PBMC_AAACCGTGCTTCCG-1 PBMC 2639 960 ## PBMC_AAACCGTGTATGCG-1 PBMC 981 522 ## PBMC_AAACGCACTGGTAC-1 PBMC 2164 782 VlnPlot(PRO, features=c(&#39;nCount_RNA&#39;,&#39;nFeature_RNA&#39;) , pt.size=0.1 ) 4.2.3.2 单个细胞线粒体基因和核糖体基因含量统计 ## 在人类基因组中，线粒体基因命名规则是以&quot;MT-&quot;为开头 # mt.genes &lt;- rownames(PRO)[grep(&quot;^MT-&quot;,rownames(PRO), ignore.case = TRUE)] # PRO$percent.mt &lt;- PercentageFeatureSet(PRO, features = mt.genes ) # The [[ operator can add columns to object metadata. This is a great place to stash QC stats PRO[[&quot;percent.mt&quot;]] &lt;- PercentageFeatureSet(PRO, pattern = &quot;^MT-&quot;) head(PRO@meta.data, 5) ## orig.ident nCount_RNA nFeature_RNA percent.mt ## PBMC_AAACATACAACCAC-1 PBMC 2421 781 3.0152829 ## PBMC_AAACATTGAGCTAC-1 PBMC 4903 1352 3.7935958 ## PBMC_AAACATTGATCAGC-1 PBMC 3149 1131 0.8891712 ## PBMC_AAACCGTGCTTCCG-1 PBMC 2639 960 1.7430845 ## PBMC_AAACCGTGTATGCG-1 PBMC 981 522 1.2232416 ## 统计核糖体基因含量，同样需要知道核糖体基因的名字规则&quot;RPS&quot;或&quot;RPL&quot; rb.genes &lt;- rownames(PRO)[grep(&quot;^RP[SL]&quot;,rownames(PRO), ignore.case = TRUE)] PRO$percent.rb &lt;- PercentageFeatureSet(PRO, features = rb.genes ) PRO[[&quot;percent.rb&quot;]] &lt;- PercentageFeatureSet(PRO, pattern = &quot;^RP[SL]&quot;) head(PRO@meta.data) ## orig.ident nCount_RNA nFeature_RNA percent.mt percent.rb ## PBMC_AAACATACAACCAC-1 PBMC 2421 781 3.0152829 43.65964 ## PBMC_AAACATTGAGCTAC-1 PBMC 4903 1352 3.7935958 42.40261 ## PBMC_AAACATTGATCAGC-1 PBMC 3149 1131 0.8891712 31.66084 ## PBMC_AAACCGTGCTTCCG-1 PBMC 2639 960 1.7430845 24.25161 ## PBMC_AAACCGTGTATGCG-1 PBMC 981 522 1.2232416 14.88277 ## PBMC_AAACGCACTGGTAC-1 PBMC 2164 782 1.6635860 36.18299 VlnPlot(PRO, features=c(&#39;percent.mt&#39;,&#39;percent.rb&#39;) , pt.size=0.1 ) 4.2.3.3 质控条件之间的相关性展示 p1 = FeatureScatter(PRO, feature1 = &quot;nCount_RNA&quot;, feature2 = &quot;nFeature_RNA&quot;) p2 = FeatureScatter(PRO, feature1 = &quot;nCount_RNA&quot;, feature2 = &quot;percent.mt&quot;) p1 + p2 4.2.3.4 低质量细胞过滤 基于上面的单细胞质量可视化结果，当存在质量较差的细胞时，为避免低质量细胞对下游分析的影响，需要在表达矩阵中去除这些细胞 使用subset函数用于seurat对象过滤. PRO &lt;- subset(PRO, subset= nCount_RNA&gt; 300 &amp; nCount_RNA&lt; 10000 &amp; nFeature_RNA&gt; 200 &amp; nFeature_RNA&lt; 2500 &amp; percent.mt&lt; 5 ) PRO ## An object of class Seurat ## 32738 features across 2638 samples within 1 assay ## Active assay: RNA (32738 features, 0 variable features) 也可根据细胞表达count百分位数，feature百分位数进行过滤 ncount &lt;- quantile(PRO$nCount_RNA, 0.98) nfeature &lt;- quantile(PRO$nFeature_RNA, 0.98) PRO1 &lt;- subset(PRO, subset= nCount_RNA&gt;200 &amp; nCount_RNA&lt; ncount &amp; nFeature_RNA&gt; 300 &amp; nFeature_RNA&lt; nfeature &amp; percent.mt&lt; 10 ) PRO1 ## An object of class Seurat ## 32738 features across 2567 samples within 1 assay ## Active assay: RNA (32738 features, 0 variable features) VlnPlot(PRO, features=c(&#39;nCount_RNA&#39;,&#39;nFeature_RNA&#39;,&#39;percent.mt&#39;) , pt.size=0.1 ) Compare two seurat objects. After filter VlnPlot(PRO1, features=c(&#39;nCount_RNA&#39;,&#39;nFeature_RNA&#39;,&#39;percent.mt&#39;) , pt.size=0.1 ) 4.2.4 单细胞数据标准化和均一化 由于实验和测序步骤都具有随机性，即便是同一细胞在两次捕获测序中得到的深度也不一定相同，因此直接比较原始表达计数得到的差异可能是由于技术偏差造成。 表达矩阵标准化通过对count数进行调整，使获得具有可比性的相对表达丰度。 数据处理的目的： 使细胞间表达具有可比性 使表达量分布符合统计学分布 4.2.4.1 数据标准化 最常用的方法是针对测序深度进行标准化，使每个细胞具有相同的reads数据量 Seurat默认的标准化方法为 LogNormalize ： 以e为底数，log（每个细胞中基因的nCount_RNA /该细胞内总Count*10000 + 1） ## 默认标准化算法： ## LogNormalize: Feature counts for each cell are divided by the total counts for that cell and multiplied by the scale.factor 10000. This is then natural-log transformed using log1p PRO &lt;- NormalizeData(object=PRO, normalization.method= &#39;LogNormalize&#39;, scale.factor=10000 ) PRO@assays$RNA@data[40:45,30:32] ## 6 x 3 sparse Matrix of class &quot;dgCMatrix&quot; ## PBMC_AAATCATGACCACA-1 PBMC_AAATCCCTCCACAA-1 PBMC_AAATCCCTGCTATG-1 ## RP11-54O7.17 . . . ## HES4 1.765580 . . ## RP11-54O7.11 . . . ## ISG15 2.369301 . . ## AGRN . . . ## RP11-54O7.18 . . . 4.2.4.2 筛选高变基因 人单细胞RNA-seq数据集可包含多达20000+个基因的表达值。对于一个给定的单细胞数据集，其中有许多基因都不能提供有用信息，并且大多只包含零计数。即使在QC步骤中滤除了这些零计数基因后，单细胞数据集也可能超过15,000个基因； 为了减轻下游分析工具的计算负担、减少数据中的噪声并方便数据可视化，可对数据集基因进行过滤仅保留对数据的变异性具有信息贡献的基因（变化程度大）； 高变基因：在表达矩阵中表达变化大的基因，即在一些细胞中高表达，在另外一些细胞中低表达； 一般使用均值与方差之间的关系来挑选高变基因： vst（默认）：首先利用loess回归对log(variance)和log(mean)拟合一条直线，然后利用观测均值和期望方差对基因表达量进行标准化，最后根据标准化后的表达量计算方差； mean.var.plot（mvp）: 首先分别计算每个基因的平均表达量和离散情况，然后根据平均表达量将基因们分散到一定数量（默认是20个）的小区间（bin）中，并且计算每个区间的z-score； dispersion (disp): 挑选离差值最高的基因 PRO &lt;- FindVariableFeatures(PRO, selection.method = &quot;vst&quot;, nfeatures = 2000) head(VariableFeatures(PRO)) ## [1] &quot;PPBP&quot; &quot;LYZ&quot; &quot;S100A9&quot; &quot;IGLL5&quot; &quot;FTL&quot; &quot;GNLY&quot; LabelPoints(VariableFeaturePlot(PRO), points = head(VariableFeatures(PRO),10) , repel=TRUE) ## When using repel, set xnudge and ynudge to 0 for optimal results ## Warning: Transformation introduced infinite values in continuous x-axis #### 数据归一化 对表达矩阵进行scale处理，scale之后的矩阵每个基因表达均值为0 经过scale之后，所有基因的表达分布基本一致，有助于后续的降维聚类 ScaleData use 2000 HVG default, if not defined by features. Your PCA and clustering results will be unaffected. However, Seurat heatmaps (produced as shown below with DoHeatmap()) require genes in the heatmap to be scaled, to make sure highly-expressed genes don’t dominate the heatmap. To make sure we don’t leave any genes out of the heatmap later, we are scaling all genes in this tutorial. all.genes &lt;- rownames(PRO) PRO &lt;- ScaleData(PRO, features = all.genes) ## Centering and scaling data matrix # the results will be PRO@assays$RNA@scale.data # the default in ScaleData() is only to perform scaling on the previously identified variable features (2,000 by default). # PRO &lt;- ScaleData(PRO) PRO@assays$RNA@scale.data[40:45,30:32] ## PBMC_AAATCATGACCACA-1 PBMC_AAATCCCTCCACAA-1 PBMC_AAATCCCTGCTATG-1 ## RP11-54O7.17 -0.03308737 -0.03308737 -0.03308737 ## HES4 4.41534554 -0.23376378 -0.23376378 ## RP11-54O7.11 -0.03768818 -0.03768818 -0.03768818 ## ISG15 1.19939542 -0.83527614 -0.83527614 ## AGRN -0.05316637 -0.05316637 -0.05316637 ## RP11-54O7.18 0.00000000 0.00000000 0.00000000 移除细胞周期等影响因素 # s.genes &lt;- cc.genes$s.genes # g2m.genes &lt;- cc.genes$g2m.genes # PRO &lt;- CellCycleScoring(PRO, # s.features = s.genes, # g2m.features = g2m.genes ) # head(PRO@meta.data) # # # check vars.to.regress # PRO_cc &lt;- ScaleData(PRO, features = all.genes[1:1000], vars.to.regress = c(&quot;S.Score&quot;, &quot;G2M.Score&quot;) ) ## 耗时较长, 只用了1000个基因用于展示 4.2.5 数据降维 降维是通过算法最优地保留原始数据的一些关键属性来将数据投影到更低的维度空间中，便于可视化和后续分析 4.2.5.1 PCA降维 Seurat provides several useful ways of visualizing both cells and features that define the PCA, including VizDimReduction(), DimPlot(), and DimHeatmap() hvg &lt;- VariableFeatures(object = PRO) PRO &lt;- RunPCA(PRO, features = hvg ) ## PC_ 1 ## Positive: CST3, TYROBP, LST1, AIF1, FTL, FTH1, LYZ, FCN1, S100A9, TYMP ## FCER1G, CFD, LGALS1, CTSS, S100A8, LGALS2, SERPINA1, IFITM3, SPI1, CFP ## PSAP, IFI30, SAT1, COTL1, S100A11, NPC2, LGALS3, GSTP1, PYCARD, NCF2 ## Negative: MALAT1, LTB, IL32, IL7R, CD2, B2M, ACAP1, STK17A, CTSW, CD247 ## GIMAP5, AQP3, CCL5, TRAF3IP3, GZMA, CST7, MAL, ITM2A, HOPX, MYC ## GIMAP7, BEX2, LDLRAP1, GZMK, ETS1, ZAP70, TNFAIP8, RIC3, LYAR, SAMD3 ## PC_ 2 ## Positive: CD79A, MS4A1, TCL1A, HLA-DQA1, HLA-DQB1, HLA-DRA, LINC00926, CD79B, HLA-DRB1, CD74 ## HLA-DMA, HLA-DPB1, HLA-DQA2, HLA-DRB5, HLA-DPA1, HLA-DMB, FCRLA, HVCN1, LTB, BLNK ## P2RX5, IGLL5, IRF8, SWAP70, ARHGAP24, SMIM14, PPP1R14A, C16orf74, MZB1, RP11-428G5.5 ## Negative: NKG7, PRF1, CST7, GZMB, GZMA, FGFBP2, CTSW, GNLY, B2M, SPON2 ## GZMH, CCL4, FCGR3A, CCL5, CD247, XCL2, CLIC3, AKR1C3, SRGN, HOPX ## TTC38, CTSC, S100A4, IGFBP7, ANXA1, ID2, IL32, XCL1, ACTB, APOBEC3G ## PC_ 3 ## Positive: HLA-DQA1, CD79A, CD79B, HLA-DQB1, HLA-DPA1, HLA-DPB1, CD74, MS4A1, HLA-DRB1, HLA-DRA ## HLA-DRB5, HLA-DQA2, TCL1A, LINC00926, HLA-DMB, HLA-DMA, HVCN1, MALAT1, FCRLA, IRF8 ## PLAC8, BLNK, SMIM14, PLD4, P2RX5, LAT2, IGLL5, SWAP70, ARHGAP24, FGFBP2 ## Negative: PPBP, PF4, SDPR, SPARC, GNG11, NRGN, GP9, RGS18, TUBB1, HIST1H2AC ## CLU, AP001189.4, ITGA2B, CD9, TMEM40, PTCRA, CA2, ACRBP, MMD, TREML1 ## F13A1, NGFRAP1, SEPT5, RUFY1, TSC22D1, MPP1, CMTM5, MYL9, RP11-367G6.3, GP1BA ## PC_ 4 ## Positive: HLA-DQA1, CD79A, CD79B, HLA-DQB1, MS4A1, CD74, HLA-DPB1, HLA-DPA1, HLA-DRB1, TCL1A ## HLA-DQA2, HLA-DRA, LINC00926, HLA-DRB5, GZMB, HIST1H2AC, HLA-DMA, HVCN1, HLA-DMB, FCRLA ## PF4, SDPR, FGFBP2, FCGR3A, PPBP, GNG11, PRF1, NKG7, PLAC8, GNLY ## Negative: VIM, IL7R, S100A6, S100A8, IL32, S100A4, GIMAP7, S100A9, S100A10, MAL ## AQP3, FYB, CD2, CD14, GIMAP4, LGALS2, ANXA1, RBP7, FCN1, S100A12 ## LYZ, TMSB4X, GIMAP5, S100A11, MS4A6A, FOLR3, TRABD2A, AIF1, IL8, NELL2 ## PC_ 5 ## Positive: GZMB, FGFBP2, NKG7, S100A8, GNLY, CCL4, CST7, PRF1, GZMA, SPON2 ## GZMH, S100A9, CCL3, LGALS2, CTSW, XCL2, CLIC3, S100A12, CCL5, RBP7 ## CD14, MS4A6A, GSTP1, AKR1C3, IGFBP7, TYROBP, TTC38, FOLR3, XCL1, HOPX ## Negative: LTB, IL7R, VIM, CKB, AQP3, MS4A7, CYTIP, RP11-290F20.3, SIGLEC10, HMOX1 ## PTGES3, MAL, HN1, CD2, LILRB2, GDI2, CORO1B, ANXA5, TUBA1B, FAM110A ## PPA1, TRADD, ATP1A1, ABRACL, IL32, FYB, WARS, CTD-2006K23.1, TRAF3IP3, GPR183 # print(PRO@reductions$pca) print(PRO[[&quot;pca&quot;]], dims = 1:3, nfeatures = 5) ## PC_ 1 ## Positive: CST3, TYROBP, LST1, AIF1, FTL ## Negative: MALAT1, LTB, IL32, IL7R, CD2 ## PC_ 2 ## Positive: CD79A, MS4A1, TCL1A, HLA-DQA1, HLA-DQB1 ## Negative: NKG7, PRF1, CST7, GZMB, GZMA ## PC_ 3 ## Positive: HLA-DQA1, CD79A, CD79B, HLA-DQB1, HLA-DPA1 ## Negative: PPBP, PF4, SDPR, SPARC, GNG11 VizDimLoadings(PRO, dims = 1:2, reduction = &quot;pca&quot;) In particular DimHeatmap() allows for easy exploration of the primary sources of heterogeneity in a dataset, and can be useful when trying to decide which PCs to include for further downstream analyses. Both cells and features are ordered according to their PCA scores. Setting cells to a number plots the ‘extreme’ cells on both ends of the spectrum, which dramatically speeds plotting for large datasets. Though clearly a supervised analysis, we find this to be a valuable tool for exploring correlated feature sets. DimHeatmap(PRO, dims = 1:6, cells = 500, balanced = TRUE) DimPlot(PRO, reduction = &quot;pca&quot;) 4.2.5.2 选择维度 维度的选择标准是再保证足够的信息同时减少噪音. Dendritic cell and NK aficionados may recognize that genes strongly associated with PCs 12 and 13 define rare immune subsets (i.e. MZB1 is a marker for plasmacytoid DCs). However, these groups are so rare, they are difficult to distinguish from background noise for a dataset of this size without prior knowledge. We encourage users to repeat downstream analyses with a different number of PCs (10, 15, or even 50!). As you will observe, the results often do not differ dramatically. We advise users to err on the higher side when choosing this parameter. For example, performing downstream analyses with only 5 PCs does significantly and adversely affect results. an ‘Elbow plot’: a ranking of principle components based on the percentage of variance explained by each one ElbowPlot(PRO) PRO_sub &lt;- subset(PRO, downsample=200) ## 耗时较长，downsample矩阵进行展示 PRO_sub &lt;- ScaleData(PRO_sub, features = all.genes) ## Centering and scaling data matrix PRO_sub &lt;- JackStraw(PRO_sub, num.replicate = 100) PRO_sub &lt;- ScoreJackStraw(PRO_sub, dims = 1:20) JackStrawPlot(PRO_sub, dims = 1:20) ## Warning: Removed 35042 rows containing missing values (geom_point). 4.3 单细胞聚类 基于细胞基因表达谱的相似性,将细胞聚类成簇通常是任何单细胞分析的第一个中间结果。细胞聚类可以帮助我们推断数据集中各细胞的身份。 4.3.1 聚类分簇 表达谱的相似性采用降维之后表达空间上的欧氏距离度量。 # 使用k最近邻法来对细胞进行聚类（K-nearest neighbor (KNN) graph），具有相似基因表达模式的细胞之间绘制边,然后尝试将这张图划分为高度相互关联的“群体” PRO &lt;- FindNeighbors(PRO, reduction = &quot;pca&quot;, dims = 1:10) ## Computing nearest neighbor graph ## Computing SNN # 使用多分辨率模块优化算法，迭代地将细胞分组 PRO &lt;- FindClusters(PRO, resolution = 0.5) ## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck ## ## Number of nodes: 2638 ## Number of edges: 95888 ## ## Running Louvain algorithm... ## Maximum modularity in 10 random starts: 0.8758 ## Number of communities: 9 ## Elapsed time: 0 seconds head(PRO@meta.data) ## orig.ident nCount_RNA nFeature_RNA percent.mt percent.rb ## PBMC_AAACATACAACCAC-1 PBMC 2421 781 3.0152829 43.65964 ## PBMC_AAACATTGAGCTAC-1 PBMC 4903 1352 3.7935958 42.40261 ## PBMC_AAACATTGATCAGC-1 PBMC 3149 1131 0.8891712 31.66084 ## PBMC_AAACCGTGCTTCCG-1 PBMC 2639 960 1.7430845 24.25161 ## PBMC_AAACCGTGTATGCG-1 PBMC 981 522 1.2232416 14.88277 ## PBMC_AAACGCACTGGTAC-1 PBMC 2164 782 1.6635860 36.18299 ## RNA_snn_res.0.5 seurat_clusters ## PBMC_AAACATACAACCAC-1 0 0 ## PBMC_AAACATTGAGCTAC-1 3 3 ## PBMC_AAACATTGATCAGC-1 2 2 ## PBMC_AAACCGTGCTTCCG-1 5 5 ## PBMC_AAACCGTGTATGCG-1 6 6 ## PBMC_AAACGCACTGGTAC-1 2 2 levels(PRO) ## [1] &quot;0&quot; &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot; &quot;5&quot; &quot;6&quot; &quot;7&quot; &quot;8&quot; head(Idents(PRO), 5) ## PBMC_AAACATACAACCAC-1 PBMC_AAACATTGAGCTAC-1 PBMC_AAACATTGATCAGC-1 ## 0 3 2 ## PBMC_AAACCGTGCTTCCG-1 PBMC_AAACCGTGTATGCG-1 ## 5 6 ## Levels: 0 1 2 3 4 5 6 7 8 4.3.2 单细胞聚类可视化 Seurat提供了t-SNE和UMAP两种降维可视化算法 # UMAP PRO &lt;- RunUMAP(PRO, reduction = &quot;pca&quot;, dims = 1:10, verbose=TRUE ) ## Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric ## To use Python UMAP via reticulate, set umap.method to &#39;umap-learn&#39; and metric to &#39;correlation&#39; ## This message will be shown once per session ## 00:06:35 UMAP embedding parameters a = 0.9922 b = 1.112 ## 00:06:35 Read 2638 rows and found 10 numeric columns ## 00:06:35 Using Annoy for neighbor search, n_neighbors = 30 ## 00:06:35 Building Annoy index with metric = cosine, n_trees = 50 ## 0% 10 20 30 40 50 60 70 80 90 100% ## [----|----|----|----|----|----|----|----|----|----| ## **************************************************| ## 00:06:36 Writing NN index file to temp file /tmp/RtmpUX67IS/file8278b25b64964 ## 00:06:36 Searching Annoy index using 1 thread, search_k = 3000 ## 00:06:36 Annoy recall = 100% ## 00:06:37 Commencing smooth kNN distance calibration using 1 thread ## 00:06:37 Initializing from normalized Laplacian + noise ## 00:06:37 Commencing optimization for 500 epochs, with 105600 positive edges ## 00:06:40 Optimization finished DimPlot(PRO, reduction = &quot;umap&quot;, label=TRUE) head( PRO@reductions$umap@cell.embeddings ) ## UMAP_1 UMAP_2 ## PBMC_AAACATACAACCAC-1 -2.195939 -5.019683112 ## PBMC_AAACATTGAGCTAC-1 -5.943582 15.470286619 ## PBMC_AAACATTGATCAGC-1 -4.405553 -8.335174311 ## PBMC_AAACCGTGCTTCCG-1 7.093654 3.850049268 ## PBMC_AAACCGTGTATGCG-1 -5.471942 0.005144249 ## PBMC_AAACGCACTGGTAC-1 -1.891877 -7.268692721 # tSNE PRO &lt;- RunTSNE(PRO, reduction = &quot;pca&quot;, dims = 1:10) DimPlot(PRO, reduction = &quot;tsne&quot;, label=TRUE) head( Embeddings(object = PRO, reduction = &quot;tsne&quot;) ) ## tSNE_1 tSNE_2 ## PBMC_AAACATACAACCAC-1 -12.9743870 5.272447 ## PBMC_AAACATTGAGCTAC-1 -14.9882494 -26.232380 ## PBMC_AAACATTGATCAGC-1 -0.3461518 21.392075 ## PBMC_AAACCGTGCTTCCG-1 34.0069863 -4.545393 ## PBMC_AAACCGTGTATGCG-1 -36.2497823 10.277420 ## PBMC_AAACGCACTGGTAC-1 -1.0413755 10.064007 DimPlot(PRO, reduction = &quot;umap&quot;, cols=c(&#39;red&#39;,&#39;pink&#39;,3:10)) 4.4 单细胞聚类簇类型鉴定(Differential expression analysis) 在基因水平上，对每个簇的marker gene进行分析，这些marker gene代表了细胞簇的特征，可帮助定义细胞簇有生物学意义的标签。 4.4.1 细胞簇差异基因分析 # min.pct: a feature to be detected at a minimum percentage in either of the two groups of cells # cluster 0. check levels(PRO) c1_marker &lt;- FindMarkers(PRO, ident.1= 0 , min.pct= 0.1, logfc.threshold= 0.25 ) head(c1_marker) ## p_val avg_log2FC pct.1 pct.2 p_val_adj ## RPS12 1.647066e-146 0.7347797 1.000 0.991 5.392164e-142 ## RPS6 2.677487e-145 0.6854074 1.000 0.995 8.765556e-141 ## RPL32 8.402925e-143 0.6318857 0.999 0.995 2.750950e-138 ## RPS14 1.186082e-136 0.6377198 1.000 0.994 3.882994e-132 ## RPS27 3.122041e-136 0.7163892 0.999 0.992 1.022094e-131 ## CYBA 2.026840e-129 -1.6281678 0.657 0.914 6.635469e-125 # find all markers distinguishing cluster 5 from clusters 0 and 3 cluster5.markers &lt;- FindMarkers(PRO, ident.1 = 5, ident.2 = c(0, 3), min.pct = 0.25) head(cluster5.markers, n = 5) ## p_val avg_log2FC pct.1 pct.2 p_val_adj ## FCGR3A 2.513125e-204 4.259071 0.981 0.042 8.227469e-200 ## IFITM3 2.507672e-198 3.893689 0.981 0.047 8.209615e-194 ## CFD 7.295740e-195 3.416612 0.944 0.038 2.388479e-190 ## RP11-290F20.3 7.245437e-191 2.743493 0.856 0.017 2.372011e-186 ## CD68 7.583077e-189 3.016970 0.919 0.035 2.482548e-184 # find markers for every cluster compared to all remaining cells, report only the positive ones all_markers &lt;- FindAllMarkers(PRO, only.pos = TRUE, min.pct= 0.1, logfc.threshold= 0.25) ## Calculating cluster 0 ## Calculating cluster 1 ## Calculating cluster 2 ## Calculating cluster 3 ## Calculating cluster 4 ## Calculating cluster 5 ## Calculating cluster 6 ## Calculating cluster 7 ## Calculating cluster 8 head(all_markers) ## p_val avg_log2FC pct.1 pct.2 p_val_adj cluster gene ## RPS12 1.647066e-146 0.7347797 1.000 0.991 5.392164e-142 0 RPS12 ## RPS6 2.677487e-145 0.6854074 1.000 0.995 8.765556e-141 0 RPS6 ## RPL32 8.402925e-143 0.6318857 0.999 0.995 2.750950e-138 0 RPL32 ## RPS14 1.186082e-136 0.6377198 1.000 0.994 3.882994e-132 0 RPS14 ## RPS27 3.122041e-136 0.7163892 0.999 0.992 1.022094e-131 0 RPS27 ## RPS25 1.493222e-125 0.7562751 0.997 0.975 4.888509e-121 0 RPS25 library(dplyr) top_markers &lt;- all_markers %&gt;% group_by( cluster) %&gt;% top_n( n = 5, wt= avg_log2FC ) top_markers ## # A tibble: 45 x 7 ## # Groups: cluster [9] ## p_val avg_log2FC pct.1 pct.2 p_val_adj cluster gene ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; &lt;chr&gt; ## 1 3.10e-113 1.10 0.913 0.592 1.01e-108 0 LDHB ## 2 5.25e- 83 1.32 0.44 0.111 1.72e- 78 0 CCR7 ## 3 5.32e- 48 1.05 0.341 0.108 1.74e- 43 0 PRKCQ-AS1 ## 4 5.68e- 46 1.04 0.331 0.107 1.86e- 41 0 LEF1 ## 5 1.94e- 28 1.08 0.243 0.086 6.36e- 24 0 LDLRAP1 ## 6 0 5.54 0.996 0.216 0 1 S100A9 ## 7 0 5.44 0.971 0.123 0 1 S100A8 ## 8 0 3.71 0.902 0.061 0 1 LGALS2 ## 9 0 3.43 0.954 0.151 0 1 FCN1 ## 10 6.17e-266 4.51 1 0.517 2.02e-261 1 LYZ ## # … with 35 more rows # Seurat has several tests for differential expression which can be set with the test.use parameter cluster0.markers &lt;- FindMarkers(PRO, ident.1 = 0, logfc.threshold = 0.25, test.use = &quot;roc&quot;, only.pos = TRUE) DoHeatmap(PRO, features = top_markers$gene) + NoLegend() 4.4.2 marker基因展示 marker基因为已知的在特定细胞中特异性表达得基因 marker基因收集： 已知的数据库（CellMarker及PanglaoDB等） 已发表的文献 # marker_genes = c(&quot;MS4A1&quot;, &quot;GNLY&quot;, &quot;CD3E&quot;, &quot;CD14&quot;, &quot;FCER1A&quot;, &quot;FCGR3A&quot;, &quot;LYZ&quot;, &quot;PPBP&quot;, &quot;CD8A&quot;) marker_genes = c(&quot;MS4A1&quot;, &quot;GNLY&quot;, &quot;CD3E&quot;) VlnPlot(PRO, features =marker_genes, pt.size= 0) # plot raw counts as well VlnPlot(PRO, features =marker_genes, pt.size= 0, slot = &quot;counts&quot;, log = TRUE) VlnPlot() (shows expression probability distributions across clusters), and FeaturePlot() (visualizes feature expression on a tSNE or PCA plot) are our most commonly used visualizations. DoHeatmap() generates an expression heatmap for given cells and features. RidgePlot(), CellScatter(), and DotPlot() as additional methods to view your dataset. FeaturePlot(PRO, features = marker_genes ) top10 &lt;- all_markers %&gt;% group_by(cluster) %&gt;% top_n(n = 10, wt = avg_log2FC) DoHeatmap(PRO, features = top10$gene) + NoLegend() RidgePlot(PRO, features = marker_genes ) DotPlot(PRO, features = marker_genes ) + theme(axis.text.x = element_text(angle = 45,hjust=1)) 4.4.3 细胞类型标签注释 根据细胞中特异性表达marker确定细胞簇类型 use canonical markers to easily match the unbiased clustering to known cell types: cluster_cell &lt;- c(&quot;Naive CD4 T&quot;, &quot;Memory CD4 T&quot;, &quot;CD14+ Mono&quot;, &quot;B&quot;, &quot;CD8 T&quot;, &quot;FCGR3A+ Mono&quot;, &quot;NK&quot;, &quot;DC&quot;, &quot;Platelet&quot;) names(cluster_cell) &lt;- levels(PRO) cluster_cell ## 0 1 2 3 4 ## &quot;Naive CD4 T&quot; &quot;Memory CD4 T&quot; &quot;CD14+ Mono&quot; &quot;B&quot; &quot;CD8 T&quot; ## 5 6 7 8 ## &quot;FCGR3A+ Mono&quot; &quot;NK&quot; &quot;DC&quot; &quot;Platelet&quot; PRO &lt;- RenameIdents(PRO, cluster_cell) DimPlot(PRO, reduction = &quot;umap&quot;, label = TRUE, pt.size = 0.5) + NoLegend() saveRDS(PRO, &quot;./data/PRO_seurat.RDS&quot;) # head(PRO@active.ident) # # pbmc &lt;- readRDS(&quot;./data/PRO_seurat.RDS&quot;) # head(pbmc@active.ident) 4.4.4 细胞类型比例可视化 # PRO@active.ident num_tab &lt;- table( Idents(PRO), PRO$orig.ident ) num_tab ## ## PBMC ## Naive CD4 T 686 ## Memory CD4 T 479 ## CD14+ Mono 455 ## B 344 ## CD8 T 325 ## FCGR3A+ Mono 160 ## NK 140 ## DC 35 ## Platelet 14 freq_tab &lt;- prop.table(x= num_tab , margin=2) freq_tab ## ## PBMC ## Naive CD4 T 0.260045489 ## Memory CD4 T 0.181576952 ## CD14+ Mono 0.172479151 ## B 0.130401820 ## CD8 T 0.123199393 ## FCGR3A+ Mono 0.060652009 ## NK 0.053070508 ## DC 0.013267627 ## Platelet 0.005307051 barplot(height=freq_tab, width=1, xlim=c(0,5), col=c(1:10), legend= rownames(freq_tab), xlab=&quot;&quot;) # 保存分析结果为rds文件 # saveRDS(PRO, file=&#39;PBMC_3K.rds&#39;) # pro &lt;- readRDS(&#39;PBMC_3K.rds&#39;) 4.4.5 细胞类型marker基因展示 feature1 &lt;- c(&#39;CD79A&#39;,&#39;MS4A1&#39;,&#39;HLA-DQA1&#39;,&#39;HLA-DQB1&#39;,&#39;CD14&#39;,&#39;VCAN&#39;,&#39;CD3D&#39;,&#39;IL7R&#39;,&#39;CLEC10A&#39;,&#39;GP9&#39;) # 堆叠小提琴图 VlnPlot(PRO, features= feature1, stack = TRUE, flip = T, fill.by=&#39;ident&#39;) # 气泡图 DotPlot(object = PRO, features=feature1, cluster.idents=T) + theme(axis.text.x = element_text(angle = 45,hjust=1)) # 分类型气泡图 feature2 &lt;- list(Bcell = c(&quot;CD19&quot;,&quot;CD79A&quot;,&quot;CD79B&quot;,&quot;MS4A1&quot;), Mono = c(&quot;CD14&quot;,&quot;VCAN&quot;,&quot;FCN1&quot;), Tcell = c(&quot;CD3D&quot;,&quot;CD3E&quot;,&quot;CD3G&quot;,&quot;IL7R&quot;,&quot;TRAC&quot;,&quot;TRGC2&quot;,&quot;TRDC&quot;, &quot;CD8A&quot;, &quot;CD8B&quot;, &quot;CD4&quot;), DC = c(&quot;HLA-DQA1&quot;, &quot;HLA-DQB1&quot;, &quot;HLA-DRB3&quot;,&quot;CLEC10A&quot;,&quot;CLEC9A&quot;), platelet = c(&quot;GP9&quot;,&quot;PF4&quot;) ) DotPlot(object = PRO, features=feature2, cluster.idents=T) + theme(axis.text.x = element_text(angle = 45,hjust=1) ) ## Warning in FetchData(object = object, vars = features, cells = cells): The ## following requested variables were not found: TRAC, TRGC2, TRDC, HLA-DRB3 4.5 sessionInfo sessionInfo() ## R version 4.0.4 (2021-02-15) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 20.10 ## ## Matrix products: default ## BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 ## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 ## ## locale: ## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ## [3] LC_TIME=en_GB.UTF-8 LC_COLLATE=en_US.UTF-8 ## [5] LC_MONETARY=en_GB.UTF-8 LC_MESSAGES=en_US.UTF-8 ## [7] LC_PAPER=en_GB.UTF-8 LC_NAME=C ## [9] LC_ADDRESS=C LC_TELEPHONE=C ## [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] forcats_0.5.1 stringr_1.4.0 dplyr_1.0.5 ## [4] purrr_0.3.4 readr_1.4.0 tidyr_1.1.3 ## [7] tibble_3.1.1 ggplot2_3.3.3 tidyverse_1.3.1 ## [10] pbmc3k.SeuratData_3.1.4 SeuratData_0.2.1 SeuratObject_4.0.0 ## [13] Seurat_4.0.1 ## ## loaded via a namespace (and not attached): ## [1] readxl_1.3.1 backports_1.2.1 plyr_1.8.6 ## [4] igraph_1.2.6 lazyeval_0.2.2 splines_4.0.4 ## [7] listenv_0.8.0 scattermore_0.7 digest_0.6.27 ## [10] htmltools_0.5.1.1 fansi_0.4.2 magrittr_2.0.1 ## [13] tensor_1.5 cluster_2.1.2 ROCR_1.0-11 ## [16] limma_3.46.0 globals_0.14.0 modelr_0.1.8 ## [19] matrixStats_0.58.0 spatstat.sparse_2.0-0 colorspace_2.0-0 ## [22] rvest_1.0.0 rappdirs_0.3.3 ggrepel_0.9.1 ## [25] haven_2.4.0 xfun_0.22 crayon_1.4.1 ## [28] jsonlite_1.7.2 spatstat.data_2.1-0 survival_3.2-10 ## [31] zoo_1.8-9 glue_1.4.2 polyclip_1.10-0 ## [34] gtable_0.3.0 leiden_0.3.7 future.apply_1.7.0 ## [37] abind_1.4-5 scales_1.1.1 DBI_1.1.1 ## [40] miniUI_0.1.1.1 Rcpp_1.0.6 viridisLite_0.4.0 ## [43] xtable_1.8-4 reticulate_1.18 spatstat.core_2.1-2 ## [46] bit_4.0.4 htmlwidgets_1.5.3 httr_1.4.2 ## [49] RColorBrewer_1.1-2 ellipsis_0.3.1 ica_1.0-2 ## [52] pkgconfig_2.0.3 farver_2.1.0 sass_0.3.1 ## [55] uwot_0.1.10 dbplyr_2.1.1 deldir_0.2-10 ## [58] utf8_1.2.1 tidyselect_1.1.0 labeling_0.4.2 ## [61] rlang_0.4.10 reshape2_1.4.4 later_1.1.0.1 ## [64] munsell_0.5.0 cellranger_1.1.0 tools_4.0.4 ## [67] cli_2.4.0 generics_0.1.0 broom_0.7.6 ## [70] ggridges_0.5.3 evaluate_0.14 fastmap_1.1.0 ## [73] yaml_2.2.1 goftest_1.2-2 bit64_4.0.5 ## [76] knitr_1.32 fs_1.5.0 fitdistrplus_1.1-3 ## [79] RANN_2.6.1 pbapply_1.4-3 future_1.21.0 ## [82] nlme_3.1-152 mime_0.10 xml2_1.3.2 ## [85] hdf5r_1.3.3 compiler_4.0.4 rstudioapi_0.13 ## [88] plotly_4.9.3 png_0.1-7 spatstat.utils_2.1-0 ## [91] reprex_2.0.0 bslib_0.2.4 stringi_1.5.3 ## [94] highr_0.9 RSpectra_0.16-0 lattice_0.20-41 ## [97] Matrix_1.3-2 vctrs_0.3.7 pillar_1.6.0 ## [100] lifecycle_1.0.0 spatstat.geom_2.1-0 lmtest_0.9-38 ## [103] jquerylib_0.1.3 RcppAnnoy_0.0.18 data.table_1.14.0 ## [106] cowplot_1.1.1 irlba_2.3.3 httpuv_1.5.5 ## [109] patchwork_1.1.1 R6_2.5.0 bookdown_0.21 ## [112] promises_1.2.0.1 KernSmooth_2.23-18 gridExtra_2.3 ## [115] parallelly_1.24.0 codetools_0.2-18 MASS_7.3-53.1 ## [118] assertthat_0.2.1 withr_2.4.2 sctransform_0.3.2 ## [121] mgcv_1.8-35 parallel_4.0.4 hms_1.0.0 ## [124] grid_4.0.4 rpart_4.1-15 rmarkdown_2.7 ## [127] Rtsne_0.15 shiny_1.6.0 lubridate_1.7.10 "],["富集分析.html", "Chapter 5 富集分析 5.1 获取差异基因 5.2 GO富集分析 5.3 KEGG富集分析 5.4 GSEA富集分析 5.5 GSVA富集分析 5.6 sessionInfo", " Chapter 5 富集分析 Enrichment Using clusterprofiler based on enrich.html clusterProfiler-diagram ref: http://yulab-smu.top/clusterProfiler-book/index.html 5.1 获取差异基因 library(Seurat) pbmc &lt;- readRDS(&quot;./data/PRO_seurat.RDS&quot;) pbmc@meta.data$celltype &lt;- pbmc@active.ident #获取细胞间的差异基因 cells1 &lt;- subset(pbmc@meta.data, celltype %in% c(&quot;CD14+ Mono&quot;)) %&gt;% rownames() cells2 &lt;- subset(pbmc@meta.data, celltype %in% c(&quot;FCGR3A+ Mono&quot;)) %&gt;% rownames() deg &lt;- FindMarkers(pbmc, ident.1 = cells1, ident.2 = cells2) deg &lt;- data.frame(gene = rownames(deg), deg) head(deg) ## gene p_val avg_log2FC pct.1 pct.2 p_val_adj ## FCGR3A FCGR3A 1.097516e-116 -4.287857 0.046 0.981 3.593049e-112 ## CFD CFD 2.601448e-114 -3.500834 0.026 0.944 8.516621e-110 ## IFITM3 IFITM3 1.629039e-113 -3.880574 0.055 0.981 5.333147e-109 ## FCER1G FCER1G 1.997252e-112 -4.859236 0.092 1.000 6.538605e-108 ## TYROBP TYROBP 4.882748e-106 -4.782237 0.138 1.000 1.598514e-101 ## CD68 CD68 1.556965e-105 -3.043349 0.044 0.919 5.097192e-101 deg1 &lt;- deg logFC_t=0.5 P.Value_t = 0.05 k1 = (deg1$p_val_adj &lt; P.Value_t)&amp;(deg1$avg_log2FC &lt; -logFC_t) k2 = (deg1$p_val_adj &lt; P.Value_t)&amp;(deg1$avg_log2FC &gt; logFC_t) table(k1) ## k1 ## FALSE TRUE ## 1376 540 table(k2) ## k2 ## FALSE TRUE ## 1712 204 #分组 上调/下调 change = ifelse(k1,&quot;down&quot;,ifelse(k2,&quot;up&quot;,&quot;stable&quot;)) deg1$change &lt;- change head(deg1) ## gene p_val avg_log2FC pct.1 pct.2 p_val_adj change ## FCGR3A FCGR3A 1.097516e-116 -4.287857 0.046 0.981 3.593049e-112 down ## CFD CFD 2.601448e-114 -3.500834 0.026 0.944 8.516621e-110 down ## IFITM3 IFITM3 1.629039e-113 -3.880574 0.055 0.981 5.333147e-109 down ## FCER1G FCER1G 1.997252e-112 -4.859236 0.092 1.000 6.538605e-108 down ## TYROBP TYROBP 4.882748e-106 -4.782237 0.138 1.000 1.598514e-101 down ## CD68 CD68 1.556965e-105 -3.043349 0.044 0.919 5.097192e-101 down #基因名称转换 library(&quot;clusterProfiler&quot;) ## ## clusterProfiler v3.18.1 For help: https://guangchuangyu.github.io/software/clusterProfiler ## ## If you use clusterProfiler in published research, please cite: ## Guangchuang Yu, Li-Gen Wang, Yanyan Han, Qing-Yu He. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287. ## ## Attaching package: &#39;clusterProfiler&#39; ## The following object is masked from &#39;package:purrr&#39;: ## ## simplify ## The following object is masked from &#39;package:stats&#39;: ## ## filter library(&quot;org.Hs.eg.db&quot;) ## Loading required package: AnnotationDbi ## Loading required package: stats4 ## Loading required package: BiocGenerics ## Loading required package: parallel ## ## Attaching package: &#39;BiocGenerics&#39; ## The following objects are masked from &#39;package:parallel&#39;: ## ## clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, ## clusterExport, clusterMap, parApply, parCapply, parLapply, ## parLapplyLB, parRapply, parSapply, parSapplyLB ## The following objects are masked from &#39;package:dplyr&#39;: ## ## combine, intersect, setdiff, union ## The following objects are masked from &#39;package:stats&#39;: ## ## IQR, mad, sd, var, xtabs ## The following objects are masked from &#39;package:base&#39;: ## ## anyDuplicated, append, as.data.frame, basename, cbind, colnames, ## dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, ## grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget, ## order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, ## rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, ## union, unique, unsplit, which.max, which.min ## Loading required package: Biobase ## Welcome to Bioconductor ## ## Vignettes contain introductory material; view with ## &#39;browseVignettes()&#39;. To cite Bioconductor, see ## &#39;citation(&quot;Biobase&quot;)&#39;, and for packages &#39;citation(&quot;pkgname&quot;)&#39;. ## Loading required package: IRanges ## Loading required package: S4Vectors ## ## Attaching package: &#39;S4Vectors&#39; ## The following object is masked from &#39;package:clusterProfiler&#39;: ## ## rename ## The following objects are masked from &#39;package:dplyr&#39;: ## ## first, rename ## The following object is masked from &#39;package:tidyr&#39;: ## ## expand ## The following object is masked from &#39;package:base&#39;: ## ## expand.grid ## ## Attaching package: &#39;IRanges&#39; ## The following object is masked from &#39;package:clusterProfiler&#39;: ## ## slice ## The following objects are masked from &#39;package:dplyr&#39;: ## ## collapse, desc, slice ## The following object is masked from &#39;package:purrr&#39;: ## ## reduce ## ## Attaching package: &#39;AnnotationDbi&#39; ## The following object is masked from &#39;package:clusterProfiler&#39;: ## ## select ## The following object is masked from &#39;package:dplyr&#39;: ## ## select ## s2e &lt;- bitr(deg1$gene, fromType = &quot;SYMBOL&quot;, toType = &quot;ENTREZID&quot;, OrgDb = org.Hs.eg.db)#人类 转换成ENTREZID ## &#39;select()&#39; returned 1:1 mapping between keys and columns ## Warning in bitr(deg1$gene, fromType = &quot;SYMBOL&quot;, toType = &quot;ENTREZID&quot;, OrgDb = ## org.Hs.eg.db): 6.68% of input gene IDs are fail to map... library(dplyr) deg1 &lt;- inner_join(deg1,s2e,by=c(&quot;gene&quot;=&quot;SYMBOL&quot;)) head(deg1) ## gene p_val avg_log2FC pct.1 pct.2 p_val_adj change ENTREZID ## 1 FCGR3A 1.097516e-116 -4.287857 0.046 0.981 3.593049e-112 down 2214 ## 2 CFD 2.601448e-114 -3.500834 0.026 0.944 8.516621e-110 down 1675 ## 3 IFITM3 1.629039e-113 -3.880574 0.055 0.981 5.333147e-109 down 10410 ## 4 FCER1G 1.997252e-112 -4.859236 0.092 1.000 6.538605e-108 down 2207 ## 5 TYROBP 4.882748e-106 -4.782237 0.138 1.000 1.598514e-101 down 7305 ## 6 CD68 1.556965e-105 -3.043349 0.044 0.919 5.097192e-101 down 968 #GO富集分析差异基因列表[Symbol] gene_up = deg1[deg1$change == &#39;up&#39;,&#39;gene&#39;] gene_down = deg1[deg1$change == &#39;down&#39;,&#39;gene&#39;] gene_diff = c(gene_up,gene_down) #KEGG富集分析差异基因列表[ENTREZID] gene_all = deg1[,&#39;ENTREZID&#39;] gene_up_KEGG = deg1[deg1$change == &#39;up&#39;,&#39;ENTREZID&#39;] gene_down_KEGG = deg1[deg1$change == &#39;down&#39;,&#39;ENTREZID&#39;] gene_diff_KEGG = c(gene_up_KEGG,gene_down_KEGG) 5.2 GO富集分析 5.2.1 GO富集分析 #细胞组分 ego_CC &lt;- enrichGO(gene = gene_up, keyType = &#39;SYMBOL&#39;, #基因ID的类型 OrgDb = org.Hs.eg.db, #包含人注释信息的数据库 ont = &quot;CC&quot;, pAdjustMethod = &quot;BH&quot;, #指定多重假设检验矫正的方法 pvalueCutoff = 0.01, qvalueCutoff = 0.05) head(summary(ego_CC)) ## Warning in summary(ego_CC): summary method to convert the object to data.frame ## is deprecated, please use as.data.frame instead. ## ID Description GeneRatio BgRatio ## GO:0022626 GO:0022626 cytosolic ribosome 66/192 110/19559 ## GO:0044391 GO:0044391 ribosomal subunit 66/192 187/19559 ## GO:0005840 GO:0005840 ribosome 66/192 270/19559 ## GO:0022625 GO:0022625 cytosolic large ribosomal subunit 39/192 58/19559 ## GO:0015934 GO:0015934 large ribosomal subunit 39/192 116/19559 ## GO:0022627 GO:0022627 cytosolic small ribosomal subunit 27/192 47/19559 ## pvalue p.adjust qvalue ## GO:0022626 8.168314e-108 1.895049e-105 1.693850e-105 ## GO:0044391 1.478001e-87 1.714481e-85 1.532453e-85 ## GO:0005840 2.456292e-75 1.899533e-73 1.697858e-73 ## GO:0022625 6.530221e-66 3.787528e-64 3.385404e-64 ## GO:0015934 5.056823e-50 2.346366e-48 2.097251e-48 ## GO:0022627 7.513437e-43 2.905196e-41 2.596749e-41 ## geneID ## GO:0022626 RPS18/RPS27/RPS3/RPL13A/RPL3/RPL13/RPS27A/RPS25/RPS12/RPL23A/RPSA/RPLP2/RPS15A/RPS6/RPL31/RPL9/RPL32/RPS29/RPLP0/RPS8/RPL30/RPL11/RPL27A/RPS7/RPS14/RPS10/RPL35A/RPLP1/RPL5/RPL19/RPS3A/RPS20/RPS4X/RPS5/RPL10A/RPL36/RPS28/RPS2/RPS13/RPL10/RPL14/RPL17/RPL15/RPS16/RPL21/RPL6/RPS23/RPS15/RPL7A/RPL18/RPL18A/RPL35/RPS26/RPS21/RPL37A/RPL4/RPL29/RPL27/RPL7/RPL24/RPL37/RPS4Y1/RPL38/RPL22/RPL36A/RPL34 ## GO:0044391 RPS18/RPS27/RPS3/RPL13A/RPL3/RPL13/RPS27A/RPS25/RPS12/RPL23A/RPSA/RPLP2/RPS15A/RPS6/RPL31/RPL9/RPL32/RPS29/RPLP0/RPS8/RPL30/RPL11/RPL27A/RPS7/RPS14/RPS10/RPL35A/RPLP1/RPL5/RPL19/RPS3A/RPS20/RPS4X/RPS5/RPL10A/RPL36/RPS28/RPS2/RPS13/RPL10/RPL14/RPL17/RPL15/RPS16/RPL21/RPL6/RPS23/RPS15/RPL7A/RPL18/RPL18A/RPL35/RPS26/RPS21/RPL37A/RPL4/RPL29/RPL27/RPL7/RPL24/RPL37/RPS4Y1/RPL38/RPL22/RPL36A/RPL34 ## GO:0005840 RPS18/RPS27/RPS3/RPL13A/RPL3/RPL13/RPS27A/RPS25/RPS12/RPL23A/RPSA/RPLP2/RPS15A/RPS6/RPL31/RPL9/RPL32/RPS29/RPLP0/RPS8/RPL30/RPL11/RPL27A/RPS7/RPS14/RPS10/RPL35A/RPLP1/RPL5/RPL19/RPS3A/RPS20/RPS4X/RPS5/RPL10A/RPL36/RPS28/RPS2/RPS13/RPL10/RPL14/RPL17/RPL15/RPS16/RPL21/RPL6/RPS23/RPS15/RPL7A/RPL18/RPL18A/RPL35/RPS26/RPS21/RPL37A/RPL4/RPL29/RPL27/RPL7/RPL24/RPL37/RPS4Y1/RPL38/RPL22/RPL36A/RPL34 ## GO:0022625 RPL13A/RPL3/RPL13/RPL23A/RPLP2/RPL31/RPL9/RPL32/RPLP0/RPL30/RPL11/RPL27A/RPL35A/RPLP1/RPL5/RPL19/RPL10A/RPL36/RPL10/RPL14/RPL17/RPL15/RPL21/RPL6/RPL7A/RPL18/RPL18A/RPL35/RPL37A/RPL4/RPL29/RPL27/RPL7/RPL24/RPL37/RPL38/RPL22/RPL36A/RPL34 ## GO:0015934 RPL13A/RPL3/RPL13/RPL23A/RPLP2/RPL31/RPL9/RPL32/RPLP0/RPL30/RPL11/RPL27A/RPL35A/RPLP1/RPL5/RPL19/RPL10A/RPL36/RPL10/RPL14/RPL17/RPL15/RPL21/RPL6/RPL7A/RPL18/RPL18A/RPL35/RPL37A/RPL4/RPL29/RPL27/RPL7/RPL24/RPL37/RPL38/RPL22/RPL36A/RPL34 ## GO:0022627 RPS18/RPS27/RPS3/RPS27A/RPS25/RPS12/RPSA/RPS15A/RPS6/RPS29/RPS8/RPS7/RPS14/RPS10/RPS3A/RPS20/RPS4X/RPS5/RPS28/RPS2/RPS13/RPS16/RPS23/RPS15/RPS26/RPS21/RPS4Y1 ## Count ## GO:0022626 66 ## GO:0044391 66 ## GO:0005840 66 ## GO:0022625 39 ## GO:0015934 39 ## GO:0022627 27 #生物过程 ego_BP &lt;- enrichGO(gene = gene_up, OrgDb = org.Hs.eg.db, keyType = &#39;SYMBOL&#39;, ont = &quot;BP&quot;, pAdjustMethod = &quot;BH&quot;, pvalueCutoff = 0.01, qvalueCutoff = 0.05) #分子功能 ego_MF &lt;- enrichGO(gene = gene_up, OrgDb = org.Hs.eg.db, keyType = &#39;SYMBOL&#39;, ont = &quot;MF&quot;, pAdjustMethod = &quot;BH&quot;, pvalueCutoff = 0.01, qvalueCutoff = 0.05) # save(ego_CC,ego_BP,ego_MF,file = &quot;GO.Rdata&quot;) #细胞组分、分子功能、生物学过程 go &lt;- enrichGO(gene = gene_up, OrgDb = &quot;org.Hs.eg.db&quot;, keyType = &#39;SYMBOL&#39;,ont=&quot;all&quot;) head(go) ## ONTOLOGY ID ## GO:0006614 BP GO:0006614 ## GO:0006613 BP GO:0006613 ## GO:0000184 BP GO:0000184 ## GO:0045047 BP GO:0045047 ## GO:0072599 BP GO:0072599 ## GO:0070972 BP GO:0070972 ## Description ## GO:0006614 SRP-dependent cotranslational protein targeting to membrane ## GO:0006613 cotranslational protein targeting to membrane ## GO:0000184 nuclear-transcribed mRNA catabolic process, nonsense-mediated decay ## GO:0045047 protein targeting to ER ## GO:0072599 establishment of protein localization to endoplasmic reticulum ## GO:0070972 protein localization to endoplasmic reticulum ## GeneRatio BgRatio pvalue p.adjust qvalue ## GO:0006614 66/186 105/18866 6.243599e-110 1.688894e-106 1.520809e-106 ## GO:0006613 66/186 109/18866 2.744310e-108 3.711680e-105 3.342281e-105 ## GO:0000184 66/186 120/18866 3.104015e-104 2.099090e-101 1.890182e-101 ## GO:0045047 66/186 120/18866 3.104015e-104 2.099090e-101 1.890182e-101 ## GO:0072599 66/186 124/18866 6.691966e-103 3.620354e-100 3.260044e-100 ## GO:0070972 66/186 152/18866 4.734663e-95 2.134544e-92 1.922107e-92 ## geneID ## GO:0006614 RPS18/RPS27/RPS3/RPL13A/RPL3/RPL13/RPS27A/RPS25/RPS12/RPL23A/RPSA/RPLP2/RPS15A/RPS6/RPL31/RPL9/RPL32/RPS29/RPLP0/RPS8/RPL30/RPL11/RPL27A/RPS7/RPS14/RPS10/RPL35A/RPLP1/RPL5/RPL19/RPS3A/RPS20/RPS4X/RPS5/RPL10A/RPL36/RPS28/RPS2/RPS13/RPL10/RPL14/RPL17/RPL15/RPS16/RPL21/RPL6/RPS23/RPS15/RPL7A/RPL18/RPL18A/RPL35/RPS26/RPS21/RPL37A/RPL4/RPL29/RPL27/RPL7/RPL24/RPL37/RPS4Y1/RPL38/RPL22/RPL36A/RPL34 ## GO:0006613 RPS18/RPS27/RPS3/RPL13A/RPL3/RPL13/RPS27A/RPS25/RPS12/RPL23A/RPSA/RPLP2/RPS15A/RPS6/RPL31/RPL9/RPL32/RPS29/RPLP0/RPS8/RPL30/RPL11/RPL27A/RPS7/RPS14/RPS10/RPL35A/RPLP1/RPL5/RPL19/RPS3A/RPS20/RPS4X/RPS5/RPL10A/RPL36/RPS28/RPS2/RPS13/RPL10/RPL14/RPL17/RPL15/RPS16/RPL21/RPL6/RPS23/RPS15/RPL7A/RPL18/RPL18A/RPL35/RPS26/RPS21/RPL37A/RPL4/RPL29/RPL27/RPL7/RPL24/RPL37/RPS4Y1/RPL38/RPL22/RPL36A/RPL34 ## GO:0000184 RPS18/RPS27/RPS3/RPL13A/RPL3/RPL13/RPS27A/RPS25/RPS12/RPL23A/RPSA/RPLP2/RPS15A/RPS6/RPL31/RPL9/RPL32/RPS29/RPLP0/RPS8/RPL30/RPL11/RPL27A/RPS7/RPS14/RPS10/RPL35A/RPLP1/RPL5/RPL19/RPS3A/RPS20/RPS4X/RPS5/RPL10A/RPL36/RPS28/RPS2/RPS13/RPL10/RPL14/RPL17/RPL15/RPS16/RPL21/RPL6/RPS23/RPS15/RPL7A/RPL18/RPL18A/RPL35/RPS26/RPS21/RPL37A/RPL4/RPL29/RPL27/RPL7/RPL24/RPL37/RPS4Y1/RPL38/RPL22/RPL36A/RPL34 ## GO:0045047 RPS18/RPS27/RPS3/RPL13A/RPL3/RPL13/RPS27A/RPS25/RPS12/RPL23A/RPSA/RPLP2/RPS15A/RPS6/RPL31/RPL9/RPL32/RPS29/RPLP0/RPS8/RPL30/RPL11/RPL27A/RPS7/RPS14/RPS10/RPL35A/RPLP1/RPL5/RPL19/RPS3A/RPS20/RPS4X/RPS5/RPL10A/RPL36/RPS28/RPS2/RPS13/RPL10/RPL14/RPL17/RPL15/RPS16/RPL21/RPL6/RPS23/RPS15/RPL7A/RPL18/RPL18A/RPL35/RPS26/RPS21/RPL37A/RPL4/RPL29/RPL27/RPL7/RPL24/RPL37/RPS4Y1/RPL38/RPL22/RPL36A/RPL34 ## GO:0072599 RPS18/RPS27/RPS3/RPL13A/RPL3/RPL13/RPS27A/RPS25/RPS12/RPL23A/RPSA/RPLP2/RPS15A/RPS6/RPL31/RPL9/RPL32/RPS29/RPLP0/RPS8/RPL30/RPL11/RPL27A/RPS7/RPS14/RPS10/RPL35A/RPLP1/RPL5/RPL19/RPS3A/RPS20/RPS4X/RPS5/RPL10A/RPL36/RPS28/RPS2/RPS13/RPL10/RPL14/RPL17/RPL15/RPS16/RPL21/RPL6/RPS23/RPS15/RPL7A/RPL18/RPL18A/RPL35/RPS26/RPS21/RPL37A/RPL4/RPL29/RPL27/RPL7/RPL24/RPL37/RPS4Y1/RPL38/RPL22/RPL36A/RPL34 ## GO:0070972 RPS18/RPS27/RPS3/RPL13A/RPL3/RPL13/RPS27A/RPS25/RPS12/RPL23A/RPSA/RPLP2/RPS15A/RPS6/RPL31/RPL9/RPL32/RPS29/RPLP0/RPS8/RPL30/RPL11/RPL27A/RPS7/RPS14/RPS10/RPL35A/RPLP1/RPL5/RPL19/RPS3A/RPS20/RPS4X/RPS5/RPL10A/RPL36/RPS28/RPS2/RPS13/RPL10/RPL14/RPL17/RPL15/RPS16/RPL21/RPL6/RPS23/RPS15/RPL7A/RPL18/RPL18A/RPL35/RPS26/RPS21/RPL37A/RPL4/RPL29/RPL27/RPL7/RPL24/RPL37/RPS4Y1/RPL38/RPL22/RPL36A/RPL34 ## Count ## GO:0006614 66 ## GO:0006613 66 ## GO:0000184 66 ## GO:0045047 66 ## GO:0072599 66 ## GO:0070972 66 5.2.2 GO富集结果可视化 dotplot(ego_CC, showCategory=30) ## wrong orderBy parameter; set to default `orderBy = &quot;x&quot;` barplot(ego_CC) library(ggplot2) p &lt;- dotplot(go, split=&quot;ONTOLOGY&quot;) +facet_grid(ONTOLOGY~., scale=&quot;free&quot;) ## wrong orderBy parameter; set to default `orderBy = &quot;x&quot;` p ### DAG有向无环图 library(topGO) ## Loading required package: graph ## ## Attaching package: &#39;graph&#39; ## The following object is masked from &#39;package:stringr&#39;: ## ## boundary ## Loading required package: GO.db ## Loading required package: SparseM ## ## Attaching package: &#39;SparseM&#39; ## The following object is masked from &#39;package:base&#39;: ## ## backsolve ## ## groupGOTerms: GOBPTerm, GOMFTerm, GOCCTerm environments built. ## ## Attaching package: &#39;topGO&#39; ## The following object is masked from &#39;package:IRanges&#39;: ## ## members plotGOgraph(ego_MF) #矩形代表富集到的top10个GO terms, 颜色从黄色过滤到红色，对应p值从大到小。 ## ## groupGOTerms: GOBPTerm, GOMFTerm, GOCCTerm environments built. ## ## Building most specific GOs ..... ## ( 541 GO terms found. ) ## ## Build GO DAG topology .......... ## ( 541 GO terms and 676 relations. ) ## ## Annotating nodes ............... ## ( 18352 genes annotated to the GO terms. ) ## Loading required package: Rgraphviz ## Loading required package: grid ## ## Attaching package: &#39;grid&#39; ## The following object is masked from &#39;package:topGO&#39;: ## ## depth ## ## Attaching package: &#39;Rgraphviz&#39; ## The following objects are masked from &#39;package:IRanges&#39;: ## ## from, to ## The following objects are masked from &#39;package:S4Vectors&#39;: ## ## from, to ## $dag ## A graphNEL graph with directed edges ## Number of Nodes = 23 ## Number of Edges = 23 ## ## $complete.dag ## [1] &quot;A graph with 23 nodes.&quot; #igraph布局的DAG # goplot(go) #GO terms关系网络图（通过差异基因关联） # emapplot(go, showCategory = 30) #GO term与差异基因关系网络图 cnetplot(go, showCategory = 5) 5.3 KEGG富集分析 5.3.1 KEGG富集分析代码 #上调基因富集 # use use_internal_data to fast kk.up &lt;- enrichKEGG(gene = gene_up_KEGG, #注意这里只能用 entrzeid organism = &#39;hsa&#39;, universe = gene_all, ##背景基因集，可省 pvalueCutoff = 0.9, ##指定 p 值阈值，不显著的值将不显示在结果中 qvalueCutoff = 0.9, use_internal_data=TRUE) #下调基因富集 kk.down &lt;- enrichKEGG(gene = gene_down_KEGG, organism = &#39;hsa&#39;, universe = gene_all, pvalueCutoff = 0.9, qvalueCutoff =0.9, use_internal_data=TRUE) kk.diff &lt;- enrichKEGG(gene = gene_diff_KEGG, organism = &#39;hsa&#39;, pvalueCutoff = 0.9, use_internal_data=TRUE) # save(kk.diff,kk.down,kk.up,file = &quot;GSE4107kegg.Rdata&quot;) #从富集结果中提取结果数据框 ekegg &lt;- setReadable(kk.up, OrgDb = org.Hs.eg.db, keyType=&quot;ENTREZID&quot;) kegg_diff_dt &lt;- data.frame(ekegg) head(kegg_diff_dt) ## ID Description GeneRatio BgRatio ## hsa03010 hsa03010 Ribosome 66/126 73/811 ## hsa05340 hsa05340 Primary immunodeficiency 7/126 12/811 ## hsa04660 hsa04660 T cell receptor signaling pathway 10/126 27/811 ## hsa04640 hsa04640 Hematopoietic cell lineage 7/126 20/811 ## pvalue p.adjust qvalue ## hsa03010 3.982781e-53 2.787947e-51 2.766985e-51 ## hsa05340 7.507294e-04 2.627553e-02 2.607797e-02 ## hsa04660 4.626879e-03 1.079605e-01 1.071488e-01 ## hsa04640 2.461933e-02 4.308383e-01 4.275990e-01 ## geneID ## hsa03010 RPS18/RPS27/RPS3/RPL13A/RPL3/RPL13/RPS27A/RPS25/RPS12/RPL23A/RPSA/RPLP2/RPS15A/RPS6/RPL31/RPL9/RPL32/RPS29/RPLP0/RPS8/RPL30/RPL11/RPL27A/RPS7/RPS14/RPS10/RPL35A/RPLP1/RPL5/RPL19/RPS3A/RPS20/RPS4X/RPS5/RPL10A/RPL36/RPS28/RPS2/RPS13/RPL10/RPL14/RPL17/RPL15/RPS16/RPL21/RPL6/RPS23/RPS15/RPL7A/RPL18/RPL18A/RPL35/RPS26/RPS21/RPL37A/RPL4/RPL29/RPL27/RPL7/RPL24/RPL37/RPS4Y1/RPL38/RPL22/RPL36A/RPL34 ## hsa05340 CD3D/CD3E/IL7R/LCK/IL2RG/CD40LG/ZAP70 ## hsa04660 CD3D/CD3E/JUN/LCK/CD3G/LAT/CD247/CD40LG/ZAP70/GRAP2 ## hsa04640 CD3D/CD3E/IL7R/CD2/CD7/CD3G/FLT3LG ## Count ## hsa03010 66 ## hsa05340 7 ## hsa04660 10 ## hsa04640 7 5.3.2 KEGG结果可视化 p1 &lt;- barplot(ekegg, showCategory=10) p2 &lt;- dotplot(ekegg, showCategory=10) ## wrong orderBy parameter; set to default `orderBy = &quot;x&quot;` plotc = p1/p2 plotc up_kegg &lt;- kk.up@result %&gt;% filter(pvalue&lt;0.01) %&gt;% mutate(group=1) down_kegg &lt;- kk.down@result %&gt;% filter(pvalue&lt;0.05) %&gt;% #筛选行 mutate(group=-1) #新增列 5.4 GSEA富集分析 5.4.1 GSEA富集 library(dplyr) library(GSEABase) ## Loading required package: annotate ## Loading required package: XML ## ## Attaching package: &#39;XML&#39; ## The following object is masked from &#39;package:graph&#39;: ## ## addNode ## ## Attaching package: &#39;annotate&#39; ## The following object is masked from &#39;package:Rgraphviz&#39;: ## ## toFile ## ## Attaching package: &#39;GSEABase&#39; ## The following objects are masked from &#39;package:topGO&#39;: ## ## ontology, phenotype library(org.Hs.eg.db) library(ggplot2) library(stringr) library(enrichplot) options(stringsAsFactors = F) geneList = deg1$avg_log2FC names(geneList) = deg1$gene geneList = sort(geneList,decreasing = T) geneList[1:10] ## IL32 CD3D LTB PTPRCAP IL7R LDHB CD3E CD2 ## 3.622858 3.271881 2.933899 2.696588 2.682289 2.678308 2.573389 2.346615 ## LCK JUN ## 2.073253 2.013264 geneset &lt;- read.gmt(&quot;./data/h.all.v7.4.symbols.gmt&quot;) geneset$term = str_remove(geneset$term,&quot;HALLMARK_&quot;) head(geneset) ## term gene ## 1 TNFA_SIGNALING_VIA_NFKB JUNB ## 2 TNFA_SIGNALING_VIA_NFKB CXCL2 ## 3 TNFA_SIGNALING_VIA_NFKB ATF3 ## 4 TNFA_SIGNALING_VIA_NFKB NFKBIA ## 5 TNFA_SIGNALING_VIA_NFKB TNFAIP3 ## 6 TNFA_SIGNALING_VIA_NFKB PTGS2 egmt &lt;- GSEA(geneList, TERM2GENE=geneset,verbose=F,pvalueCutoff = 0.5) #结果转化 y=data.frame(egmt) head(y) ## ID Description setSize ## COMPLEMENT COMPLEMENT COMPLEMENT 63 ## MYC_TARGETS_V1 MYC_TARGETS_V1 MYC_TARGETS_V1 78 ## COAGULATION COAGULATION COAGULATION 18 ## ALLOGRAFT_REJECTION ALLOGRAFT_REJECTION ALLOGRAFT_REJECTION 74 ## XENOBIOTIC_METABOLISM XENOBIOTIC_METABOLISM XENOBIOTIC_METABOLISM 27 ## CHOLESTEROL_HOMEOSTASIS CHOLESTEROL_HOMEOSTASIS CHOLESTEROL_HOMEOSTASIS 15 ## enrichmentScore NES pvalue p.adjust ## COMPLEMENT -0.5517855 -2.208229 3.762355e-06 0.0001504942 ## MYC_TARGETS_V1 0.3890339 2.100255 3.143138e-05 0.0006286276 ## COAGULATION -0.6891525 -2.091602 3.128641e-04 0.0041715210 ## ALLOGRAFT_REJECTION 0.3042984 1.651046 6.952398e-03 0.0695239831 ## XENOBIOTIC_METABOLISM -0.4935005 -1.660739 2.555053e-02 0.2000333389 ## CHOLESTEROL_HOMEOSTASIS -0.5592873 -1.613931 3.328452e-02 0.2000333389 ## qvalues rank leading_edge ## COMPLEMENT 0.0001267320 280 tags=44%, list=16%, signal=39% ## MYC_TARGETS_V1 0.0005293706 672 tags=69%, list=38%, signal=45% ## COAGULATION 0.0035128598 241 tags=56%, list=13%, signal=49% ## ALLOGRAFT_REJECTION 0.0585465121 76 tags=22%, list=4%, signal=22% ## XENOBIOTIC_METABOLISM 0.1684491275 638 tags=70%, list=36%, signal=46% ## CHOLESTEROL_HOMEOSTASIS 0.1684491275 137 tags=40%, list=8%, signal=37% ## core_enrichment ## COMPLEMENT ATOX1/GNAI2/PFN1/LTA4H/CTSH/DUSP6/CD55/CTSD/PLEK/CTSB/GCA/C1QA/ANXA5/CTSL/RHOG/PLAUR/CTSC/CASP1/LGALS3/CDA/LYN/TIMP1/CEBPB/S100A9/SERPINA1/CTSS/FCN1/FCER1G ## MYC_TARGETS_V1 RPLP0/NPM1/RPS3/RPS6/RPS5/RPS10/EEF1B2/SRSF7/MYC/RPL22/BUB3/RPL14/RPL34/SNRPD2/RPL18/RPL6/RPS2/CNBP/ODC1/SRM/SRSF2/YWHAQ/PSMD14/CCT2/DDX18/FBL/HNRNPR/SERBP1/HSPE1/HPRT1/HDDC2/APEX1/HNRNPA1/C1QBP/HSPD1/RAN/PRDX3/HNRNPA3/VDAC3/ACP1/DUT/HNRNPC/G3BP1/RSL1D1/LSM2/RANBP1/SRSF3/UBA2/TCP1/PRPF31/HNRNPA2B1/SNRPA/HNRNPU/IFRD1 ## COAGULATION LTA4H/CTSH/DUSP6/PLEK/CTSB/RAC1/C1QA/TIMP1/SERPINA1/CFD ## ALLOGRAFT_REJECTION CD3D/LTB/CD3E/CD2/LCK/CD7/CCL5/TRAT1/CD3G/NPM1/CD247/IL2RG/CD40LG/RPL9/RPS3A/SIT1 ## XENOBIOTIC_METABOLISM COMT/IRF8/PGD/ID2/GCH1/TNFRSF1A/ALDH2/CBR1/KYNU/BLVRB/FBP1/DDAH2/GSTO1/CAT/TMEM176B/MT2A/NINJ1/HMOX1/CDA ## CHOLESTEROL_HOMEOSTASIS GUSB/ANXA5/CXCL16/PLAUR/LGALS3/S100A11 5.4.2 GSEA结果可视化 #气泡图，展示geneset被激活还是抑制 dotplot(egmt,split=&quot;.sign&quot;)+facet_grid(~.sign) ## wrong orderBy parameter; set to default `orderBy = &quot;x&quot;` #经典gseaplot gseaplot2(egmt, geneSetID = 1, title = egmt$Description[1]) 5.5 GSVA富集分析 GSVA(gene set variation analysis)，通过将基因在不同样品间的表达矩阵转化成基因集在样品间的表达矩阵，从而来评估不同的代谢通路在不同样品间是否富集 富集过程主要包含一下四步： 1）评估基因i在样品j中是高表达还是低表达：累积密度函数的核估计，得到每个样本的表达水平统计 2）对每个样本的表达水平统计进行排序和标准化 3）计算每个基因集的类KS随机游走统计量 4）将类KS随机游走统计量转化为ES：最大偏离量（双峰），最大正负偏离量之差（近似正态分布） 5.5.1 GSVA富集示例 library(GSVA) expr &lt;- as.data.frame(pbmc@assays$RNA@data) expr[1:10,1:10] ## PBMC_AAACATACAACCAC-1 PBMC_AAACATTGAGCTAC-1 PBMC_AAACATTGATCAGC-1 ## MIR1302-10 0 0 0 ## FAM138A 0 0 0 ## OR4F5 0 0 0 ## RP11-34P13.7 0 0 0 ## RP11-34P13.8 0 0 0 ## AL627309.1 0 0 0 ## RP11-34P13.14 0 0 0 ## RP11-34P13.9 0 0 0 ## AP006222.2 0 0 0 ## RP4-669L17.10 0 0 0 ## PBMC_AAACCGTGCTTCCG-1 PBMC_AAACCGTGTATGCG-1 PBMC_AAACGCACTGGTAC-1 ## MIR1302-10 0 0 0 ## FAM138A 0 0 0 ## OR4F5 0 0 0 ## RP11-34P13.7 0 0 0 ## RP11-34P13.8 0 0 0 ## AL627309.1 0 0 0 ## RP11-34P13.14 0 0 0 ## RP11-34P13.9 0 0 0 ## AP006222.2 0 0 0 ## RP4-669L17.10 0 0 0 ## PBMC_AAACGCTGACCAGT-1 PBMC_AAACGCTGGTTCTT-1 PBMC_AAACGCTGTAGCCA-1 ## MIR1302-10 0 0 0 ## FAM138A 0 0 0 ## OR4F5 0 0 0 ## RP11-34P13.7 0 0 0 ## RP11-34P13.8 0 0 0 ## AL627309.1 0 0 0 ## RP11-34P13.14 0 0 0 ## RP11-34P13.9 0 0 0 ## AP006222.2 0 0 0 ## RP4-669L17.10 0 0 0 ## PBMC_AAACGCTGTTTCTG-1 ## MIR1302-10 0 ## FAM138A 0 ## OR4F5 0 ## RP11-34P13.7 0 ## RP11-34P13.8 0 ## AL627309.1 0 ## RP11-34P13.14 0 ## RP11-34P13.9 0 ## AP006222.2 0 ## RP4-669L17.10 0 expr=as.matrix(expr) kegg_list = split(geneset$gene, geneset$term) kegg_list[1:2] ## $ADIPOGENESIS ## [1] &quot;FABP4&quot; &quot;ADIPOQ&quot; &quot;PPARG&quot; &quot;LIPE&quot; &quot;DGAT1&quot; &quot;LPL&quot; ## [7] &quot;CPT2&quot; &quot;CD36&quot; &quot;GPAM&quot; &quot;ADIPOR2&quot; &quot;ACAA2&quot; &quot;ETFB&quot; ## [13] &quot;ACOX1&quot; &quot;ACADM&quot; &quot;HADH&quot; &quot;IDH1&quot; &quot;SORBS1&quot; &quot;ACADS&quot; ## [19] &quot;UCK1&quot; &quot;SCP2&quot; &quot;DECR1&quot; &quot;CDKN2C&quot; &quot;TALDO1&quot; &quot;TST&quot; ## [25] &quot;MCCC1&quot; &quot;PGM1&quot; &quot;REEP5&quot; &quot;BCL2L13&quot; &quot;SLC25A10&quot; &quot;ME1&quot; ## [31] &quot;PHYH&quot; &quot;PIM3&quot; &quot;YWHAG&quot; &quot;NDUFAB1&quot; &quot;GPD2&quot; &quot;ADIG&quot; ## [37] &quot;ECHS1&quot; &quot;QDPR&quot; &quot;CS&quot; &quot;ECH1&quot; &quot;SLC25A1&quot; &quot;ACADL&quot; ## [43] &quot;TOB1&quot; &quot;GRPEL1&quot; &quot;CRAT&quot; &quot;GBE1&quot; &quot;CAVIN2&quot; &quot;SCARB1&quot; ## [49] &quot;PEMT&quot; &quot;CHCHD10&quot; &quot;AK2&quot; &quot;APOE&quot; &quot;UQCR10&quot; &quot;TANK&quot; ## [55] &quot;ANGPTL4&quot; &quot;ACO2&quot; &quot;FAH&quot; &quot;ACLY&quot; &quot;IFNGR1&quot; &quot;SLC5A6&quot; ## [61] &quot;JAGN1&quot; &quot;EPHX2&quot; &quot;IDH3G&quot; &quot;GPX3&quot; &quot;ELMOD3&quot; &quot;ORM1&quot; ## [67] &quot;RETSAT&quot; &quot;ESRRA&quot; &quot;HIBCH&quot; &quot;SUCLG1&quot; &quot;STAT5A&quot; &quot;ITGA7&quot; ## [73] &quot;MRAP&quot; &quot;PLIN2&quot; &quot;CYC1&quot; &quot;ALDH2&quot; &quot;RNF11&quot; &quot;ALDOA&quot; ## [79] &quot;SULT1A1&quot; &quot;DDT&quot; &quot;SDHB&quot; &quot;CD151&quot; &quot;SLC27A1&quot; &quot;BCKDHA&quot; ## [85] &quot;C3&quot; &quot;LEP&quot; &quot;ADCY6&quot; &quot;ELOVL6&quot; &quot;LTC4S&quot; &quot;SPARCL1&quot; ## [91] &quot;RMDN3&quot; &quot;MTCH2&quot; &quot;SOWAHC&quot; &quot;SLC1A5&quot; &quot;CMPK1&quot; &quot;REEP6&quot; ## [97] &quot;NDUFA5&quot; &quot;FZD4&quot; &quot;DRAM2&quot; &quot;MGST3&quot; &quot;ATP1B3&quot; &quot;RETN&quot; ## [103] &quot;STOM&quot; &quot;ESYT1&quot; &quot;GHITM&quot; &quot;DNAJC15&quot; &quot;GADD45A&quot; &quot;VEGFB&quot; ## [109] &quot;PFKL&quot; &quot;COQ3&quot; &quot;NABP1&quot; &quot;CYP4B1&quot; &quot;PPM1B&quot; &quot;ARAF&quot; ## [115] &quot;CAVIN1&quot; &quot;COL4A1&quot; &quot;IMMT&quot; &quot;DHRS7&quot; &quot;COL15A1&quot; &quot;NMT1&quot; ## [121] &quot;COQ5&quot; &quot;LAMA4&quot; &quot;AGPAT3&quot; &quot;BAZ2A&quot; &quot;IDH3A&quot; &quot;LIFR&quot; ## [127] &quot;PREB&quot; &quot;PTGER3&quot; &quot;GPHN&quot; &quot;PFKFB3&quot; &quot;GPX4&quot; &quot;SSPN&quot; ## [133] &quot;SQOR&quot; &quot;MTARC2&quot; &quot;DLD&quot; &quot;ITIH5&quot; &quot;CD302&quot; &quot;ATL2&quot; ## [139] &quot;GPAT4&quot; &quot;LPCAT3&quot; &quot;TKT&quot; &quot;UQCRC1&quot; &quot;CAT&quot; &quot;OMD&quot; ## [145] &quot;DLAT&quot; &quot;MRPL15&quot; &quot;RIOK3&quot; &quot;RTN3&quot; &quot;CHUK&quot; &quot;G3BP2&quot; ## [151] &quot;SDHC&quot; &quot;SAMM50&quot; &quot;ARL4A&quot; &quot;SNCG&quot; &quot;PDCD4&quot; &quot;COQ9&quot; ## [157] &quot;APLP2&quot; &quot;SOD1&quot; &quot;PTCD3&quot; &quot;PHLDB1&quot; &quot;ENPP2&quot; &quot;HSPB8&quot; ## [163] &quot;AIFM1&quot; &quot;CCNG2&quot; &quot;PPP1R15B&quot; &quot;MDH2&quot; &quot;ABCA1&quot; &quot;COX7B&quot; ## [169] &quot;MYLK&quot; &quot;COX8A&quot; &quot;DHRS7B&quot; &quot;MIGA2&quot; &quot;MGLL&quot; &quot;ITSN1&quot; ## [175] &quot;DHCR7&quot; &quot;RREB1&quot; &quot;CMBL&quot; &quot;UBC&quot; &quot;ATP5PO&quot; &quot;PRDX3&quot; ## [181] &quot;DBT&quot; &quot;NDUFS3&quot; &quot;NKIRAS1&quot; &quot;RAB34&quot; &quot;CIDEA&quot; &quot;UQCRQ&quot; ## [187] &quot;PEX14&quot; &quot;BCL6&quot; &quot;COX6A1&quot; &quot;DNAJB9&quot; &quot;MAP4K3&quot; &quot;ANGPT1&quot; ## [193] &quot;UBQLN1&quot; &quot;NDUFB7&quot; &quot;SLC19A1&quot; &quot;ABCB8&quot; &quot;SLC66A3&quot; &quot;POR&quot; ## [199] &quot;UCP2&quot; &quot;UQCR11&quot; ## ## $ALLOGRAFT_REJECTION ## [1] &quot;PTPRC&quot; &quot;IL12B&quot; &quot;TGFB1&quot; &quot;IL12A&quot; &quot;CD3E&quot; &quot;CD3D&quot; ## [7] &quot;CD28&quot; &quot;LYN&quot; &quot;HCLS1&quot; &quot;IL18&quot; &quot;CRTAM&quot; &quot;IFNG&quot; ## [13] &quot;CD3G&quot; &quot;CD86&quot; &quot;IL10&quot; &quot;UBE2N&quot; &quot;BCL10&quot; &quot;CD4&quot; ## [19] &quot;LCK&quot; &quot;NCK1&quot; &quot;C2&quot; &quot;HLA-A&quot; &quot;ITGB2&quot; &quot;HLA-DQA1&quot; ## [25] &quot;CD1D&quot; &quot;CD80&quot; &quot;HLA-DRA&quot; &quot;THY1&quot; &quot;TLR1&quot; &quot;HLA-G&quot; ## [31] &quot;HLA-DMB&quot; &quot;IL7&quot; &quot;IL4&quot; &quot;TNF&quot; &quot;CD247&quot; &quot;IL2&quot; ## [37] &quot;HLA-DMA&quot; &quot;STAT1&quot; &quot;IRF4&quot; &quot;SRGN&quot; &quot;INHBA&quot; &quot;TLR3&quot; ## [43] &quot;ZAP70&quot; &quot;CD74&quot; &quot;CD40&quot; &quot;TRAF2&quot; &quot;B2M&quot; &quot;BCL3&quot; ## [49] &quot;LTB&quot; &quot;IFNGR1&quot; &quot;CCR5&quot; &quot;CD40LG&quot; &quot;HLA-DOA&quot; &quot;GLMN&quot; ## [55] &quot;IL6&quot; &quot;HLA-E&quot; &quot;CD2&quot; &quot;CCL5&quot; &quot;FAS&quot; &quot;FASLG&quot; ## [61] &quot;TLR6&quot; &quot;PF4&quot; &quot;TGFB2&quot; &quot;CD79A&quot; &quot;INHBB&quot; &quot;ELANE&quot; ## [67] &quot;SPI1&quot; &quot;MAP3K7&quot; &quot;IL15&quot; &quot;CTSS&quot; &quot;CD47&quot; &quot;PRF1&quot; ## [73] &quot;IL12RB1&quot; &quot;LCP2&quot; &quot;SOCS1&quot; &quot;CDKN2A&quot; &quot;STAT4&quot; &quot;CD7&quot; ## [79] &quot;HLA-DOB&quot; &quot;CD8A&quot; &quot;ICAM1&quot; &quot;CCL4&quot; &quot;GZMB&quot; &quot;CSF1&quot; ## [85] &quot;IL11&quot; &quot;STAB1&quot; &quot;IL2RA&quot; &quot;NLRP3&quot; &quot;CCND3&quot; &quot;EIF3A&quot; ## [91] &quot;SIT1&quot; &quot;IFNAR2&quot; &quot;HDAC9&quot; &quot;CARTPT&quot; &quot;TRAT1&quot; &quot;CCL22&quot; ## [97] &quot;APBB1&quot; &quot;FYB1&quot; &quot;IL1B&quot; &quot;TIMP1&quot; &quot;RPS19&quot; &quot;JAK2&quot; ## [103] &quot;KRT1&quot; &quot;WARS1&quot; &quot;IFNGR2&quot; &quot;CCR2&quot; &quot;EREG&quot; &quot;MMP9&quot; ## [109] &quot;EGFR&quot; &quot;IL16&quot; &quot;CFP&quot; &quot;WAS&quot; &quot;ITGAL&quot; &quot;KLRD1&quot; ## [115] &quot;RARS1&quot; &quot;TLR2&quot; &quot;CCND2&quot; &quot;IL2RG&quot; &quot;ETS1&quot; &quot;ITK&quot; ## [121] &quot;NCR1&quot; &quot;MAP4K1&quot; &quot;CCL19&quot; &quot;PSMB10&quot; &quot;RPL39&quot; &quot;EIF3J&quot; ## [127] &quot;ABCE1&quot; &quot;CD8B&quot; &quot;F2&quot; &quot;ELF4&quot; &quot;LY86&quot; &quot;FCGR2B&quot; ## [133] &quot;GBP2&quot; &quot;PRKCG&quot; &quot;RPS9&quot; &quot;MTIF2&quot; &quot;GZMA&quot; &quot;AARS1&quot; ## [139] &quot;CD96&quot; &quot;CSK&quot; &quot;HIF1A&quot; &quot;CCL2&quot; &quot;ICOSLG&quot; &quot;NPM1&quot; ## [145] &quot;IL4R&quot; &quot;CCL11&quot; &quot;NME1&quot; &quot;FLNA&quot; &quot;GPR65&quot; &quot;ACHE&quot; ## [151] &quot;EIF3D&quot; &quot;IGSF6&quot; &quot;F2R&quot; &quot;IL13&quot; &quot;TAP1&quot; &quot;DARS1&quot; ## [157] &quot;IRF7&quot; &quot;ACVR2A&quot; &quot;CXCR3&quot; &quot;PRKCB&quot; &quot;CXCL9&quot; &quot;PTPN6&quot; ## [163] &quot;NCF4&quot; &quot;UBE2D1&quot; &quot;LIF&quot; &quot;CCR1&quot; &quot;MBL2&quot; &quot;DEGS1&quot; ## [169] &quot;TPD52&quot; &quot;AKT1&quot; &quot;RIPK2&quot; &quot;IKBKB&quot; &quot;GCNT1&quot; &quot;SOCS5&quot; ## [175] &quot;IRF8&quot; &quot;TAP2&quot; &quot;EIF4G3&quot; &quot;ABI1&quot; &quot;CCL7&quot; &quot;IL2RB&quot; ## [181] &quot;BRCA1&quot; &quot;FGR&quot; &quot;IL18RAP&quot; &quot;MRPL3&quot; &quot;CXCL13&quot; &quot;CAPG&quot; ## [187] &quot;EIF5A&quot; &quot;RPS3A&quot; &quot;GALNT1&quot; &quot;ST8SIA4&quot; &quot;CCL13&quot; &quot;RPL3L&quot; ## [193] &quot;LY75&quot; &quot;TAPBP&quot; &quot;NOS2&quot; &quot;RPL9&quot; &quot;BCAT1&quot; &quot;IL9&quot; ## [199] &quot;IL27RA&quot; &quot;DYRK3&quot; kegg1 &lt;- gsva(expr, kegg_list, kcdf=&quot;Gaussian&quot;,method = &quot;gsva&quot;,parallel.sz=12) ## Setting parallel calculations through a MulticoreParam back-end ## with workers=12 and tasks=100. ## Estimating GSVA scores for 50 gene sets. ## Estimating ECDFs with Gaussian kernels ## Estimating ECDFs in parallel ## | | | 0% | |= | 2% | |=== | 4% | |==== | 6% | |====== | 8% | |======= | 10% | |======== | 12% | |========== | 14% | |=========== | 16% | |============= | 18% | |============== | 20% | |=============== | 22% | |================= | 24% | |================== | 26% | |==================== | 28% | |===================== | 30% | |====================== | 32% | |======================== | 34% | |========================= | 36% | |=========================== | 38% | |============================ | 40% | |============================= | 42% | |=============================== | 44% | |================================ | 46% | |================================== | 48% | |=================================== | 50% | |==================================== | 52% | |====================================== | 54% | |======================================= | 56% | |========================================= | 58% | |========================================== | 60% | |=========================================== | 62% | |============================================= | 64% | |============================================== | 66% | |================================================ | 68% | |================================================= | 70% | |================================================== | 72% | |==================================================== | 74% | |===================================================== | 76% | |======================================================= | 78% | |======================================================== | 80% | |========================================================= | 82% | |=========================================================== | 84% | |============================================================ | 86% | |============================================================== | 88% | |=============================================================== | 90% | |================================================================ | 92% | |================================================================== | 94% | |=================================================================== | 96% | |===================================================================== | 98% | |======================================================================| 100% kegg2 &lt;- kegg1 kegg2[1:10,1:10] ## PBMC_AAACATACAACCAC-1 PBMC_AAACATTGAGCTAC-1 ## ADIPOGENESIS -0.35791459 -0.217004195 ## ALLOGRAFT_REJECTION -0.23093992 -0.056665501 ## ANDROGEN_RESPONSE -0.24698071 -0.166052456 ## ANGIOGENESIS -0.05551034 -0.051797361 ## APICAL_JUNCTION -0.05746997 0.095356739 ## APICAL_SURFACE -0.10568123 -0.243974970 ## APOPTOSIS -0.28076796 -0.428613559 ## BILE_ACID_METABOLISM -0.01323618 -0.004775889 ## CHOLESTEROL_HOMEOSTASIS -0.29203360 -0.337901574 ## COAGULATION -0.11210877 -0.052089648 ## PBMC_AAACATTGATCAGC-1 PBMC_AAACCGTGCTTCCG-1 ## ADIPOGENESIS -0.19974647 -0.20068439 ## ALLOGRAFT_REJECTION -0.20360929 -0.19464576 ## ANDROGEN_RESPONSE -0.06225333 -0.24685381 ## ANGIOGENESIS -0.10130833 0.27363561 ## APICAL_JUNCTION 0.02150503 0.04306834 ## APICAL_SURFACE -0.06189907 -0.34868601 ## APOPTOSIS -0.09531318 -0.18871131 ## BILE_ACID_METABOLISM 0.09536061 -0.05813957 ## CHOLESTEROL_HOMEOSTASIS -0.23696223 -0.13187924 ## COAGULATION -0.09289654 -0.03721555 ## PBMC_AAACCGTGTATGCG-1 PBMC_AAACGCACTGGTAC-1 ## ADIPOGENESIS -0.41736608 -0.23090947 ## ALLOGRAFT_REJECTION -0.24839110 -0.30312300 ## ANDROGEN_RESPONSE -0.18624406 -0.11226897 ## ANGIOGENESIS 0.23986521 0.11545168 ## APICAL_JUNCTION 0.05554962 0.06432303 ## APICAL_SURFACE 0.06105414 -0.09894962 ## APOPTOSIS -0.42240807 -0.32952326 ## BILE_ACID_METABOLISM -0.16223440 0.04829511 ## CHOLESTEROL_HOMEOSTASIS -0.28216451 -0.19718791 ## COAGULATION 0.05074903 -0.02322263 ## PBMC_AAACGCTGACCAGT-1 PBMC_AAACGCTGGTTCTT-1 ## ADIPOGENESIS -0.26101663 -0.31655487 ## ALLOGRAFT_REJECTION -0.20920469 -0.14525146 ## ANDROGEN_RESPONSE -0.19701361 -0.13466390 ## ANGIOGENESIS 0.03184648 0.03183292 ## APICAL_JUNCTION -0.01886515 -0.10688643 ## APICAL_SURFACE -0.21492544 -0.21274795 ## APOPTOSIS -0.40947077 -0.23442168 ## BILE_ACID_METABOLISM -0.10375464 -0.05968525 ## CHOLESTEROL_HOMEOSTASIS -0.37783520 -0.24226727 ## COAGULATION 0.01418585 0.05508910 ## PBMC_AAACGCTGTAGCCA-1 PBMC_AAACGCTGTTTCTG-1 ## ADIPOGENESIS -0.34097446 -0.282262139 ## ALLOGRAFT_REJECTION -0.38120606 -0.365907151 ## ANDROGEN_RESPONSE -0.26639078 -0.237912755 ## ANGIOGENESIS 0.15355799 0.324644202 ## APICAL_JUNCTION 0.02317564 -0.004812126 ## APICAL_SURFACE -0.16543791 -0.292213844 ## APOPTOSIS -0.35512722 -0.308162836 ## BILE_ACID_METABOLISM -0.01218455 -0.092504836 ## CHOLESTEROL_HOMEOSTASIS -0.32480210 -0.201390143 ## COAGULATION 0.06547464 0.153338323 5.5.2 GSVA结果可视化 meta &lt;- as.data.frame(pbmc@meta.data[,c(&#39;orig.ident&#39;,&quot;celltype&quot;)]) #细胞按照细胞类型排序 meta &lt;- meta %&gt;% arrange(meta$celltype) kegg2 &lt;- kegg2[,rownames(meta)] #取各细胞类型对应的通路score的均值 identical(colnames(kegg2),rownames(meta)) ## [1] TRUE kegg3 &lt;- cbind(meta, t(kegg2)) %&gt;% tibble::rownames_to_column() kegg4 &lt;- tidyr::pivot_longer(kegg3, cols=4:ncol(kegg3), &quot;kegg&quot;, &quot;value&quot;) kegg5 &lt;- dplyr::group_by(kegg4, celltype, kegg) %&gt;% dplyr::summarise(value2=mean(value) ) %&gt;% dplyr::ungroup() ## `summarise()` has grouped output by &#39;celltype&#39;. You can override using the `.groups` argument. kegg6 &lt;- tidyr::pivot_wider(kegg5, names_from=&quot;kegg&quot;, values_from=&quot;value2&quot;) %&gt;% tibble::column_to_rownames(var=&quot;celltype&quot;) library(pheatmap) G1 &lt;- pheatmap(kegg6, cluster_rows = F, cluster_cols = F, show_rownames = T, show_colnames = T, color =colorRampPalette(c(&quot;blue&quot;, &quot;white&quot;,&quot;red&quot;))(100), cellwidth = 10, cellheight = 15, fontsize = 10) 5.6 sessionInfo sessionInfo() ## R version 4.0.4 (2021-02-15) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 20.10 ## ## Matrix products: default ## BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 ## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 ## ## locale: ## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ## [3] LC_TIME=en_GB.UTF-8 LC_COLLATE=en_US.UTF-8 ## [5] LC_MONETARY=en_GB.UTF-8 LC_MESSAGES=en_US.UTF-8 ## [7] LC_PAPER=en_GB.UTF-8 LC_NAME=C ## [9] LC_ADDRESS=C LC_TELEPHONE=C ## [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C ## ## attached base packages: ## [1] grid parallel stats4 stats graphics grDevices utils ## [8] datasets methods base ## ## other attached packages: ## [1] pheatmap_1.0.12 GSVA_1.38.2 enrichplot_1.10.2 ## [4] GSEABase_1.52.1 annotate_1.68.0 XML_3.99-0.6 ## [7] Rgraphviz_2.34.0 topGO_2.42.0 SparseM_1.81 ## [10] GO.db_3.12.1 graph_1.68.0 org.Hs.eg.db_3.12.0 ## [13] AnnotationDbi_1.52.0 IRanges_2.24.1 S4Vectors_0.28.1 ## [16] Biobase_2.50.0 BiocGenerics_0.36.1 clusterProfiler_3.18.1 ## [19] forcats_0.5.1 stringr_1.4.0 dplyr_1.0.5 ## [22] purrr_0.3.4 readr_1.4.0 tidyr_1.1.3 ## [25] tibble_3.1.1 ggplot2_3.3.3 tidyverse_1.3.1 ## [28] pbmc3k.SeuratData_3.1.4 SeuratData_0.2.1 SeuratObject_4.0.0 ## [31] Seurat_4.0.1 ## ## loaded via a namespace (and not attached): ## [1] utf8_1.2.1 reticulate_1.18 ## [3] tidyselect_1.1.0 RSQLite_2.2.5 ## [5] htmlwidgets_1.5.3 KEGG.db_3.2.4 ## [7] BiocParallel_1.24.1 Rtsne_0.15 ## [9] scatterpie_0.1.5 munsell_0.5.0 ## [11] codetools_0.2-18 ica_1.0-2 ## [13] future_1.21.0 miniUI_0.1.1.1 ## [15] withr_2.4.2 colorspace_2.0-0 ## [17] GOSemSim_2.16.1 highr_0.9 ## [19] knitr_1.32 rstudioapi_0.13 ## [21] ROCR_1.0-11 tensor_1.5 ## [23] DOSE_3.16.0 listenv_0.8.0 ## [25] MatrixGenerics_1.2.1 labeling_0.4.2 ## [27] GenomeInfoDbData_1.2.4 polyclip_1.10-0 ## [29] bit64_4.0.5 farver_2.1.0 ## [31] downloader_0.4 parallelly_1.24.0 ## [33] vctrs_0.3.7 generics_0.1.0 ## [35] xfun_0.22 GenomeInfoDb_1.26.7 ## [37] R6_2.5.0 graphlayouts_0.7.1 ## [39] hdf5r_1.3.3 DelayedArray_0.16.3 ## [41] bitops_1.0-6 spatstat.utils_2.1-0 ## [43] cachem_1.0.4 fgsea_1.16.0 ## [45] assertthat_0.2.1 promises_1.2.0.1 ## [47] scales_1.1.1 ggraph_2.0.5 ## [49] gtable_0.3.0 globals_0.14.0 ## [51] goftest_1.2-2 tidygraph_1.2.0 ## [53] rlang_0.4.10 splines_4.0.4 ## [55] lazyeval_0.2.2 spatstat.geom_2.1-0 ## [57] broom_0.7.6 BiocManager_1.30.12 ## [59] yaml_2.2.1 reshape2_1.4.4 ## [61] abind_1.4-5 modelr_0.1.8 ## [63] backports_1.2.1 httpuv_1.5.5 ## [65] qvalue_2.22.0 tools_4.0.4 ## [67] bookdown_0.21 ellipsis_0.3.1 ## [69] spatstat.core_2.1-2 jquerylib_0.1.3 ## [71] RColorBrewer_1.1-2 ggridges_0.5.3 ## [73] Rcpp_1.0.6 plyr_1.8.6 ## [75] zlibbioc_1.36.0 RCurl_1.98-1.3 ## [77] rpart_4.1-15 deldir_0.2-10 ## [79] pbapply_1.4-3 viridis_0.6.0 ## [81] cowplot_1.1.1 zoo_1.8-9 ## [83] SummarizedExperiment_1.20.0 haven_2.4.0 ## [85] ggrepel_0.9.1 cluster_2.1.2 ## [87] fs_1.5.0 magrittr_2.0.1 ## [89] data.table_1.14.0 RSpectra_0.16-0 ## [91] scattermore_0.7 DO.db_2.9 ## [93] lmtest_0.9-38 reprex_2.0.0 ## [95] RANN_2.6.1 ggnewscale_0.4.5 ## [97] fitdistrplus_1.1-3 matrixStats_0.58.0 ## [99] hms_1.0.0 patchwork_1.1.1 ## [101] mime_0.10 evaluate_0.14 ## [103] xtable_1.8-4 readxl_1.3.1 ## [105] gridExtra_2.3 compiler_4.0.4 ## [107] shadowtext_0.0.7 KernSmooth_2.23-18 ## [109] crayon_1.4.1 htmltools_0.5.1.1 ## [111] mgcv_1.8-35 later_1.1.0.1 ## [113] lubridate_1.7.10 DBI_1.1.1 ## [115] tweenr_1.0.2 dbplyr_2.1.1 ## [117] MASS_7.3-53.1 rappdirs_0.3.3 ## [119] Matrix_1.3-2 cli_2.4.0 ## [121] igraph_1.2.6 GenomicRanges_1.42.0 ## [123] pkgconfig_2.0.3 rvcheck_0.1.8 ## [125] plotly_4.9.3 spatstat.sparse_2.0-0 ## [127] xml2_1.3.2 bslib_0.2.4 ## [129] XVector_0.30.0 rvest_1.0.0 ## [131] digest_0.6.27 sctransform_0.3.2 ## [133] RcppAnnoy_0.0.18 spatstat.data_2.1-0 ## [135] rmarkdown_2.7 cellranger_1.1.0 ## [137] leiden_0.3.7 fastmatch_1.1-0 ## [139] uwot_0.1.10 shiny_1.6.0 ## [141] lifecycle_1.0.0 nlme_3.1-152 ## [143] jsonlite_1.7.2 viridisLite_0.4.0 ## [145] limma_3.46.0 fansi_0.4.2 ## [147] pillar_1.6.0 lattice_0.20-41 ## [149] fastmap_1.1.0 httr_1.4.2 ## [151] survival_3.2-10 glue_1.4.2 ## [153] png_0.1-7 bit_4.0.4 ## [155] ggforce_0.3.3 stringi_1.5.3 ## [157] sass_0.3.1 blob_1.2.1 ## [159] memoise_2.0.0 irlba_2.3.3 ## [161] future.apply_1.7.0 "],["cellchat.html", "Chapter 6 CellChat 6.1 简介 6.2 数据加载与预处理 6.3 计算和推断细胞间通讯网络 6.4 多种形式的互作通讯网络可视化 6.5 系统性分析细胞通讯网络 6.6 全局信号模式识别 6.7 Manifold and classification learning analysis of signaling networks 6.8 sessionInfo", " Chapter 6 CellChat 6.1 简介 细胞通讯分析能够帮助我们识别和推断组织微环境中的细胞间相互作用及信号传递. 目前已经开发出了多种可用于单细胞数据的细胞通讯分析工具：celltalker，cellphoneDB，iTALK，NicheNet … 这些工具基本原理都是基于构建的受配体数据库和单细胞数据中相关基因的表达水平来推测细胞互作关系 本次课程主要介绍 CellChat 通讯分析工具使用及结果解读，CellChat相比于其他通讯分析工具，主要区别在于： 构建了信号分子相互作用的数据库，充分考虑了配体-受体相互作用的已知结构组成； 通讯分析在考虑配受体互作的同时考虑了信号通路的关系； 通过网络分析工具，模式识别方法和多种学习方法对细胞间通讯进行定量表征和比较； REF: CellChat-Vignette cellchatDB-Vignette 6.2 数据加载与预处理 本次课程使用的数据为10X单细胞的PBMC_3K数据(see Chapter 5 富集分析)，基于上一次基本分析课程中生成的最后的rds文件. 6.2.1 加载分析包,数据 Cellchat需要两个输入文件： 单个细胞的表达数据 细胞对应细胞类型信息 library(CellChat) library(Seurat) library(NMF) library(ggalluvial) pbmc &lt;- readRDS(&quot;./data/PRO_seurat.RDS&quot;) levels(pbmc) ## [1] &quot;Naive CD4 T&quot; &quot;Memory CD4 T&quot; &quot;CD14+ Mono&quot; &quot;B&quot; &quot;CD8 T&quot; ## [6] &quot;FCGR3A+ Mono&quot; &quot;NK&quot; &quot;DC&quot; &quot;Platelet&quot; # meta = GetAssayData(pbmc, slot=&#39;counts&#39;, assay=&#39;RNA&#39;) meta &lt;- pbmc@assays$RNA@counts meta[1:3,1:3] ## 3 x 3 sparse Matrix of class &quot;dgCMatrix&quot; ## PBMC_AAACATACAACCAC-1 PBMC_AAACATTGAGCTAC-1 PBMC_AAACATTGATCAGC-1 ## MIR1302-10 . . . ## FAM138A . . . ## OR4F5 . . . # 细胞类型信息 idents = data.frame(row.names=rownames(pbmc@meta.data), celltype=Idents(pbmc)) head(idents) ## celltype ## PBMC_AAACATACAACCAC-1 Naive CD4 T ## PBMC_AAACATTGAGCTAC-1 B ## PBMC_AAACATTGATCAGC-1 CD14+ Mono ## PBMC_AAACCGTGCTTCCG-1 FCGR3A+ Mono ## PBMC_AAACCGTGTATGCG-1 NK ## PBMC_AAACGCACTGGTAC-1 CD14+ Mono 6.2.2 构建CellChat对象 Cellchat可以基于Seurat数据对象和矩阵构建数据对象 # cellchat &lt;- createCellChat( meta , meta=idents , group.by=&#39;celltype&#39; ) cellchat &lt;- createCellChat( pbmc , group.by=&#39;ident&#39;) ## Create a CellChat object from a Seurat object ## The `data` slot in the `RNA` assay is used ## The `meta.data` slot in the Seurat object is used as cell meta information ## Set cell identities for the new CellChat object ## The cell groups used for CellChat analysis are Naive CD4 T Memory CD4 T CD14+ Mono B CD8 T FCGR3A+ Mono NK DC Platelet cellchat ## An object of class CellChat created from a single dataset ## 32738 genes. ## 2638 cells. levels( cellchat@idents ) ## [1] &quot;Naive CD4 T&quot; &quot;Memory CD4 T&quot; &quot;CD14+ Mono&quot; &quot;B&quot; &quot;CD8 T&quot; ## [6] &quot;FCGR3A+ Mono&quot; &quot;NK&quot; &quot;DC&quot; &quot;Platelet&quot; 6.2.3 设置受配体互作数据库 CellChat内置了手动整理的文献支持的受配体互作关系，包括人和鼠两个物种 ## A list includes the ligand-receptor interactions CellChatDB &lt;- CellChatDB.human # use CellChatDB.mouse if running on mouse data showDatabaseCategory(CellChatDB) # interaction_input &lt;- CellChatDB$interaction # complex_input &lt;- CellChatDB$complex # cofactor_input &lt;- CellChatDB$cofactor # geneInfo &lt;- CellChatDB$geneInfo # CellChatDB &lt;- list() # CellChatDB$interaction &lt;- interaction_input # CellChatDB$complex &lt;- complex_input # CellChatDB$cofactor &lt;- cofactor_input # CellChatDB$geneInfo &lt;- geneInfo dplyr::glimpse(CellChatDB$interaction) ## Rows: 1,939 ## Columns: 11 ## $ interaction_name &lt;chr&gt; &quot;TGFB1_TGFBR1_TGFBR2&quot;, &quot;TGFB2_TGFBR1_TGFBR2&quot;, &quot;TGFB… ## $ pathway_name &lt;chr&gt; &quot;TGFb&quot;, &quot;TGFb&quot;, &quot;TGFb&quot;, &quot;TGFb&quot;, &quot;TGFb&quot;, &quot;TGFb&quot;, &quot;TG… ## $ ligand &lt;chr&gt; &quot;TGFB1&quot;, &quot;TGFB2&quot;, &quot;TGFB3&quot;, &quot;TGFB1&quot;, &quot;TGFB1&quot;, &quot;TGFB2… ## $ receptor &lt;chr&gt; &quot;TGFbR1_R2&quot;, &quot;TGFbR1_R2&quot;, &quot;TGFbR1_R2&quot;, &quot;ACVR1B_TGFb… ## $ agonist &lt;chr&gt; &quot;TGFb agonist&quot;, &quot;TGFb agonist&quot;, &quot;TGFb agonist&quot;, &quot;TG… ## $ antagonist &lt;chr&gt; &quot;TGFb antagonist&quot;, &quot;TGFb antagonist&quot;, &quot;TGFb antagon… ## $ co_A_receptor &lt;chr&gt; &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;,… ## $ co_I_receptor &lt;chr&gt; &quot;TGFb inhibition receptor&quot;, &quot;TGFb inhibition recept… ## $ evidence &lt;chr&gt; &quot;KEGG: hsa04350&quot;, &quot;KEGG: hsa04350&quot;, &quot;KEGG: hsa04350… ## $ annotation &lt;chr&gt; &quot;Secreted Signaling&quot;, &quot;Secreted Signaling&quot;, &quot;Secret… ## $ interaction_name_2 &lt;chr&gt; &quot;TGFB1 - (TGFBR1+TGFBR2)&quot;, &quot;TGFB2 - (TGFBR1+TGFBR2)… # pathway names unique(CellChatDB$interaction$pathway_name) ## [1] &quot;TGFb&quot; &quot;BMP&quot; &quot;BMP10&quot; &quot;GDF&quot; &quot;MSTN&quot; ## [6] &quot;AMH&quot; &quot;GDNF&quot; &quot;NODAL&quot; &quot;ACTIVIN&quot; &quot;WNT&quot; ## [11] &quot;ncWNT&quot; &quot;EGF&quot; &quot;NRG&quot; &quot;FGF&quot; &quot;PDGF&quot; ## [16] &quot;VEGF&quot; &quot;IGF&quot; &quot;INSULIN&quot; &quot;APELIN&quot; &quot;HH&quot; ## [21] &quot;CCL&quot; &quot;CXCL&quot; &quot;MIF&quot; &quot;CX3C&quot; &quot;XCR&quot; ## [26] &quot;IL2&quot; &quot;IL4&quot; &quot;IL6&quot; &quot;IL12&quot; &quot;LIFR&quot; ## [31] &quot;OSM&quot; &quot;IL10&quot; &quot;IL1&quot; &quot;IL17&quot; &quot;CSF&quot; ## [36] &quot;IL16&quot; &quot;EPO&quot; &quot;GH&quot; &quot;PRL&quot; &quot;THPO&quot; ## [41] &quot;CSF3&quot; &quot;IFN-I&quot; &quot;IFN-II&quot; &quot;TNF&quot; &quot;LT&quot; ## [46] &quot;LIGHT&quot; &quot;FASLG&quot; &quot;VEGI&quot; &quot;TRAIL&quot; &quot;EDA&quot; ## [51] &quot;NGF&quot; &quot;RANKL&quot; &quot;TWEAK&quot; &quot;CD70&quot; &quot;CD30&quot; ## [56] &quot;CD137&quot; &quot;OX40&quot; &quot;GITRL&quot; &quot;APRIL&quot; &quot;BAFF&quot; ## [61] &quot;CD40&quot; &quot;SPP1&quot; &quot;ADIPONECTIN&quot; &quot;RESISTIN&quot; &quot;VISFATIN&quot; ## [66] &quot;ANGPTL&quot; &quot;ANGPT&quot; &quot;MK&quot; &quot;PTN&quot; &quot;PERIOSTIN&quot; ## [71] &quot;AGT&quot; &quot;GPR&quot; &quot;BRADYKININ&quot; &quot;COMPLEMENT&quot; &quot;CCK&quot; ## [76] &quot;EDN&quot; &quot;GALANIN&quot; &quot;GHRELIN&quot; &quot;KISS1&quot; &quot;MELANOCORTIN&quot; ## [81] &quot;NMU&quot; &quot;NPFF&quot; &quot;NPY&quot; &quot;NPW-B&quot; &quot;NTS&quot; ## [86] &quot;OPIOID&quot; &quot;HCRT&quot; &quot;OXT&quot; &quot;SEMATOSTATIN&quot; &quot;TAC&quot; ## [91] &quot;UTS2&quot; &quot;AVP&quot; &quot;PRLH&quot; &quot;PARs&quot; &quot;PMCH&quot; ## [96] &quot;PROK&quot; &quot;PACAP&quot; &quot;VIP&quot; &quot;NPR1&quot; &quot;NPR2&quot; ## [101] &quot;KIT&quot; &quot;GIPR&quot; &quot;FSH&quot; &quot;LHB&quot; &quot;TSH&quot; ## [106] &quot;NT&quot; &quot;FLT3&quot; &quot;HGF&quot; &quot;SEMA3&quot; &quot;CALCR&quot; ## [111] &quot;ANNEXIN&quot; &quot;APJ&quot; &quot;CRH&quot; &quot;ENHO&quot; &quot;GAS&quot; ## [116] &quot;GCG&quot; &quot;GHRH&quot; &quot;GNRH&quot; &quot;GRN&quot; &quot;GUCA&quot; ## [121] &quot;RLN&quot; &quot;LEP&quot; &quot;GALECTIN&quot; &quot;NPS&quot; &quot;NPVF&quot; ## [126] &quot;OSTN&quot; &quot;PROS&quot; &quot;PSAP&quot; &quot;PTH&quot; &quot;QRFP&quot; ## [131] &quot;CHEMERIN&quot; &quot;SAA&quot; &quot;UGRP1&quot; &quot;SCT&quot; &quot;SLURP&quot; ## [136] &quot;BTLA&quot; &quot;TRH&quot; &quot;UCN&quot; &quot;UROTENSIN&quot; &quot;BAG&quot; ## [141] &quot;COLLAGEN&quot; &quot;FN1&quot; &quot;LAMININ&quot; &quot;CHAD&quot; &quot;RELN&quot; ## [146] &quot;THBS&quot; &quot;VTN&quot; &quot;TENASCIN&quot; &quot;NPNT&quot; &quot;DSPP&quot; ## [151] &quot;VWF&quot; &quot;BSP&quot; &quot;DMP1&quot; &quot;AGRN&quot; &quot;HSPG&quot; ## [156] &quot;ADGRE5&quot; &quot;ALCAM&quot; &quot;ANXA1&quot; &quot;APP&quot; &quot;CADM&quot; ## [161] &quot;CD22&quot; &quot;CD226&quot; &quot;CD23&quot; &quot;CD34&quot; &quot;CD39&quot; ## [166] &quot;CD45&quot; &quot;CD46&quot; &quot;CD48&quot; &quot;CD6&quot; &quot;CD80&quot; ## [171] &quot;CD86&quot; &quot;CD96&quot; &quot;CD99&quot; &quot;CDH&quot; &quot;CDH1&quot; ## [176] &quot;CDH5&quot; &quot;CEACAM&quot; &quot;CLDN&quot; &quot;CLEC&quot; &quot;CNTN&quot; ## [181] &quot;CSPG4&quot; &quot;DESMOSOME&quot; &quot;EPGN&quot; &quot;EPHA&quot; &quot;EPHB&quot; ## [186] &quot;ESAM&quot; &quot;GP1BA&quot; &quot;ICAM&quot; &quot;ICOS&quot; &quot;ITGB2&quot; ## [191] &quot;JAM&quot; &quot;L1CAM&quot; &quot;LCK&quot; &quot;MADCAM&quot; &quot;MAG&quot; ## [196] &quot;MHC-I&quot; &quot;MHC-II&quot; &quot;MPZ&quot; &quot;NCAM&quot; &quot;NECTIN&quot; ## [201] &quot;NEGR&quot; &quot;NGL&quot; &quot;NKG2D&quot; &quot;NOTCH&quot; &quot;NRXN&quot; ## [206] &quot;OCLN&quot; &quot;PD-L1&quot; &quot;PDL2&quot; &quot;PECAM1&quot; &quot;PTPRM&quot; ## [211] &quot;PVR&quot; &quot;SELE&quot; &quot;SELL&quot; &quot;SELPLG&quot; &quot;SEMA4&quot; ## [216] &quot;SEMA5&quot; &quot;SEMA6&quot; &quot;SEMA7&quot; &quot;SN&quot; &quot;THY1&quot; ## [221] &quot;TIGIT&quot; &quot;VCAM&quot; &quot;VISTA&quot; # CellChatDB.use &lt;- CellChatDB ## key : the name of the variable in CellChatDB interaction_input CellChatDB.ss &lt;- subsetDB(CellChatDB, search = &quot;Secreted Signaling&quot;, key=&#39;annotation&#39;) # set the used database in the object cellchat@DB &lt;- CellChatDB.ss 6.2.4 预处理表达数据 数据处理过程包括： - 鉴定一个细胞类型中的过表达的配体或受体 - 鉴定过表达的配受体互作 - 基于PPI网络平滑基因表达（可选：适用于处理低深度单细胞测序处理的dropout） # subset表达数据，提取仅在互作数据库中的基因，减少下游分析数据量 cellchat &lt;- subsetData(cellchat) # This step is necessary even if using the whole database # future::plan(&quot;multiprocess&quot;, workers = 4) # 识别在单个细胞类型中过表达配/受体 cellchat &lt;- identifyOverExpressedGenes(cellchat) # 识别过表达互作对 cellchat &lt;- identifyOverExpressedInteractions(cellchat) # 平滑表达值（目的是消除dropout影响，可选不用） # We also provide a function to project gene expression data onto protein-protein interaction (PPI) network. Specifically, a diffusion process is used to smooth genes’ expression values based on their neighbors’ defined in a high-confidence experimentally validated protein-protein network. This function is useful when analyzing single-cell data with shallow sequencing depth because the projection reduces the dropout effects of signaling genes, in particular for possible zero expression of subunits of ligands/receptors. cellchat &lt;- projectData(cellchat, PPI.human) 数据预处理工作完成，接下来开始细胞通讯的分析 6.3 计算和推断细胞间通讯网络 CellChat通过为每个通讯互作对分配一个发生概率和置换检验，推断有生物学意义的细胞间通讯. CellChat models the probability of cell-cell communication by integrating gene expression with prior known knowledge of the interactions between signaling ligands, receptors and their cofactors using the law of mass action. The number of inferred ligand-receptor pairs clearly depends on the method for calculating the average gene expression per cell group. By default, CellChat uses a statistically robust mean method called trimean, which produces fewer interactions than other methods. we provide an option for using other methods, such as 5% and 10% truncated mean, to calculating the average gene expression. Of note, ‘trimean’ approximates 25% truncated mean, implying that the average gene expression is zero if the percent of expressed cells in one group is less than 25%. To use 10% truncated mean, USER can set type = \"truncatedMean\" and trim = 0.1. If very well-known signaling pathways in the studied biological process are not predicted, USER can try truncatedMean with different trim values. check the average expression of signaling genes of interest: computeAveExpr(cellchat, features = c(\"CXCL12\",\"CXCR4\"), type = \"truncatedMean\", trim = 0.1) 6.3.1 细胞通讯互作可能性的计算 # 互作可能性计算 cellchat &lt;- computeCommunProb(cellchat, raw.use = TRUE) # 过滤表达细胞比例低的互作对 cellchat &lt;- filterCommunication(cellchat, min.cells = 10) # 提取关注得细胞间通讯关系 df.net &lt;- subsetCommunication(cellchat) head(df.net) ## source target ligand receptor prob pval interaction_name ## 1 CD14+ Mono CD14+ Mono MIF CD74_CXCR4 0.06302724 0.00 MIF_CD74_CXCR4 ## 2 NK CD14+ Mono MIF CD74_CXCR4 0.02707739 0.04 MIF_CD74_CXCR4 ## 3 DC CD14+ Mono MIF CD74_CXCR4 0.06314493 0.03 MIF_CD74_CXCR4 ## 4 Naive CD4 T B MIF CD74_CXCR4 0.05922030 0.00 MIF_CD74_CXCR4 ## 5 Memory CD4 T B MIF CD74_CXCR4 0.04867580 0.00 MIF_CD74_CXCR4 ## 6 CD14+ Mono B MIF CD74_CXCR4 0.13948229 0.00 MIF_CD74_CXCR4 ## interaction_name_2 pathway_name annotation ## 1 MIF - (CD74+CXCR4) MIF Secreted Signaling ## 2 MIF - (CD74+CXCR4) MIF Secreted Signaling ## 3 MIF - (CD74+CXCR4) MIF Secreted Signaling ## 4 MIF - (CD74+CXCR4) MIF Secreted Signaling ## 5 MIF - (CD74+CXCR4) MIF Secreted Signaling ## 6 MIF - (CD74+CXCR4) MIF Secreted Signaling ## evidence ## 1 PMID: 29637711; PMID: 24760155 ## 2 PMID: 29637711; PMID: 24760155 ## 3 PMID: 29637711; PMID: 24760155 ## 4 PMID: 29637711; PMID: 24760155 ## 5 PMID: 29637711; PMID: 24760155 ## 6 PMID: 29637711; PMID: 24760155 # 提取特定细胞类型间通讯关系 df.net2 &lt;- subsetCommunication(cellchat, sources.use=c(&#39;Naive CD4 T&#39;,&#39;Memory CD4 T&#39;,&#39;CD8 T&#39;) , targets.use= c(&#39;CD14+ Mono&#39;,&#39;B&#39;)) head(df.net2) ## source target ligand receptor prob pval interaction_name ## 1 Naive CD4 T B MIF CD74_CXCR4 0.05922030 0 MIF_CD74_CXCR4 ## 2 Memory CD4 T B MIF CD74_CXCR4 0.04867580 0 MIF_CD74_CXCR4 ## 3 CD8 T B MIF CD74_CXCR4 0.05953380 0 MIF_CD74_CXCR4 ## 4 Naive CD4 T B MIF CD74_CD44 0.01194597 0 MIF_CD74_CD44 ## 5 CD8 T B MIF CD74_CD44 0.01201241 0 MIF_CD74_CD44 ## 6 Memory CD4 T CD14+ Mono LGALS9 PTPRC 0.01482312 0 LGALS9_CD45 ## interaction_name_2 pathway_name annotation ## 1 MIF - (CD74+CXCR4) MIF Secreted Signaling ## 2 MIF - (CD74+CXCR4) MIF Secreted Signaling ## 3 MIF - (CD74+CXCR4) MIF Secreted Signaling ## 4 MIF - (CD74+CD44) MIF Secreted Signaling ## 5 MIF - (CD74+CD44) MIF Secreted Signaling ## 6 LGALS9 - CD45 GALECTIN Secreted Signaling ## evidence ## 1 PMID: 29637711; PMID: 24760155 ## 2 PMID: 29637711; PMID: 24760155 ## 3 PMID: 29637711; PMID: 24760155 ## 4 PMID: 29637711; PMID: 26175090 ## 5 PMID: 29637711; PMID: 26175090 ## 6 PMID: 30120235 # 提取特定信号通路中的通讯关系 df.net3 &lt;- subsetCommunication(cellchat, signaling = c(&quot;IL16&quot;, &quot;ANNEXIN&quot;)) head(df.net3) ## source target ligand receptor prob pval interaction_name ## 1 DC FCGR3A+ Mono IL16 CD4 0.002438534 0 IL16_CD4 ## 2 DC DC IL16 CD4 0.002442359 0 IL16_CD4 ## 3 Naive CD4 T Memory CD4 T ANXA1 FPR1 0.008976133 0 ANXA1_FPR1 ## 4 Memory CD4 T Memory CD4 T ANXA1 FPR1 0.026202872 0 ANXA1_FPR1 ## 5 CD14+ Mono Memory CD4 T ANXA1 FPR1 0.036361292 0 ANXA1_FPR1 ## 6 CD8 T Memory CD4 T ANXA1 FPR1 0.028045102 0 ANXA1_FPR1 ## interaction_name_2 pathway_name annotation evidence ## 1 IL16 - CD4 IL16 Secreted Signaling KEGG: hsa04060 ## 2 IL16 - CD4 IL16 Secreted Signaling KEGG: hsa04060 ## 3 ANXA1 - FPR1 ANNEXIN Secreted Signaling PMID: 23230437 ## 4 ANXA1 - FPR1 ANNEXIN Secreted Signaling PMID: 23230437 ## 5 ANXA1 - FPR1 ANNEXIN Secreted Signaling PMID: 23230437 ## 6 ANXA1 - FPR1 ANNEXIN Secreted Signaling PMID: 23230437 6.3.2 推断通路水平的互作网络 通过汇总与整个通路关联的配受体互作可能性，计算得到通路水平的互作可能性 # NB: The inferred intercellular communication network of each ligand-receptor pair and each signaling pathway is stored in the slot ‘net’ and ‘netP’, respectively. cellchat &lt;- computeCommunProbPathway(cellchat) cellchat@netP ## $pathways ## [1] &quot;MIF&quot; &quot;IL16&quot; &quot;CD40&quot; &quot;ANNEXIN&quot; &quot;GALECTIN&quot; ## ## $prob ## , , MIF ## ## Naive CD4 T Memory CD4 T CD14+ Mono B CD8 T ## Naive CD4 T 0.00000000 0.01127254 0.00000000 0.07116628 0.02710081 ## Memory CD4 T 0.00000000 0.00000000 0.00000000 0.04867580 0.00000000 ## CD14+ Mono 0.01989238 0.02852038 0.08497827 0.16967506 0.09020500 ## B 0.00000000 0.01116769 0.00000000 0.07053089 0.02685274 ## CD8 T 0.00000000 0.01133527 0.00000000 0.07154621 0.02724920 ## FCGR3A+ Mono 0.00000000 0.00000000 0.00000000 0.04743704 0.00000000 ## NK 0.00000000 0.01200067 0.02707739 0.07556574 0.02882155 ## DC 0.00000000 0.02857560 0.06314493 0.16997259 0.06705222 ## Platelet 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 ## FCGR3A+ Mono NK DC Platelet ## Naive CD4 T 0.03154709 0 0.04514987 0 ## Memory CD4 T 0.02579485 0 0.03701212 0 ## CD14+ Mono 0.07738846 0 0.13543673 0 ## B 0.03125962 0 0.04474418 0 ## CD8 T 0.03171903 0 0.04539248 0 ## FCGR3A+ Mono 0.02512302 0 0.03605895 0 ## NK 0.03354040 0 0.04796012 0 ## DC 0.07753076 0 0.13568172 0 ## Platelet 0.00000000 0 0.00000000 0 ## ## , , IL16 ## ## Naive CD4 T Memory CD4 T CD14+ Mono B CD8 T FCGR3A+ Mono NK ## Naive CD4 T 0 0 0 0 0 0.000000000 0 ## Memory CD4 T 0 0 0 0 0 0.000000000 0 ## CD14+ Mono 0 0 0 0 0 0.000000000 0 ## B 0 0 0 0 0 0.000000000 0 ## CD8 T 0 0 0 0 0 0.000000000 0 ## FCGR3A+ Mono 0 0 0 0 0 0.000000000 0 ## NK 0 0 0 0 0 0.000000000 0 ## DC 0 0 0 0 0 0.002438534 0 ## Platelet 0 0 0 0 0 0.000000000 0 ## DC Platelet ## Naive CD4 T 0.000000000 0 ## Memory CD4 T 0.000000000 0 ## CD14+ Mono 0.000000000 0 ## B 0.000000000 0 ## CD8 T 0.000000000 0 ## FCGR3A+ Mono 0.000000000 0 ## NK 0.000000000 0 ## DC 0.002442359 0 ## Platelet 0.000000000 0 ## ## , , CD40 ## ## Naive CD4 T Memory CD4 T CD14+ Mono B CD8 T FCGR3A+ Mono NK DC ## Naive CD4 T 0 0 0 0 0 0 0 0 ## Memory CD4 T 0 0 0 0 0 0 0 0 ## CD14+ Mono 0 0 0 0 0 0 0 0 ## B 0 0 0 0 0 0 0 0 ## CD8 T 0 0 0 0 0 0 0 0 ## FCGR3A+ Mono 0 0 0 0 0 0 0 0 ## NK 0 0 0 0 0 0 0 0 ## DC 0 0 0 0 0 0 0 0 ## Platelet 0 0 0 0 0 0 0 0 ## Platelet ## Naive CD4 T 0.000000000 ## Memory CD4 T 0.000000000 ## CD14+ Mono 0.006728257 ## B 0.000000000 ## CD8 T 0.000000000 ## FCGR3A+ Mono 0.000000000 ## NK 0.000000000 ## DC 0.000000000 ## Platelet 0.000000000 ## ## , , ANNEXIN ## ## Naive CD4 T Memory CD4 T CD14+ Mono B CD8 T FCGR3A+ Mono NK DC ## Naive CD4 T 0 0.008976133 0 0 0 0.006014284 0 0 ## Memory CD4 T 0 0.026202872 0 0 0 0.017658008 0 0 ## CD14+ Mono 0 0.036361292 0 0 0 0.024587369 0 0 ## B 0 0.000000000 0 0 0 0.000000000 0 0 ## CD8 T 0 0.028045102 0 0 0 0.018911147 0 0 ## FCGR3A+ Mono 0 0.023350119 0 0 0 0.015720532 0 0 ## NK 0 0.038433882 0 0 0 0.026006959 0 0 ## DC 0 0.037222001 0 0 0 0.025176658 0 0 ## Platelet 0 0.002513510 0 0 0 0.001680512 0 0 ## Platelet ## Naive CD4 T 0 ## Memory CD4 T 0 ## CD14+ Mono 0 ## B 0 ## CD8 T 0 ## FCGR3A+ Mono 0 ## NK 0 ## DC 0 ## Platelet 0 ## ## , , GALECTIN ## ## Naive CD4 T Memory CD4 T CD14+ Mono B CD8 T ## Naive CD4 T 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 ## Memory CD4 T 0.01393544 0.01291004 0.03297463 0.01330445 0.02768069 ## CD14+ Mono 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 ## B 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 ## CD8 T 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 ## FCGR3A+ Mono 0.03384769 0.03137580 0.07899137 0.03232709 0.06628783 ## NK 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 ## DC 0.03227231 0.02991405 0.07539678 0.03082158 0.06327267 ## Platelet 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 ## FCGR3A+ Mono NK DC Platelet ## Naive CD4 T 0.00000000 0.00000000 0.00000000 0 ## Memory CD4 T 0.03689730 0.01493936 0.02135914 0 ## CD14+ Mono 0.00000000 0.00000000 0.00000000 0 ## B 0.00000000 0.00000000 0.00000000 0 ## CD8 T 0.00000000 0.00000000 0.00000000 0 ## FCGR3A+ Mono 0.08815769 0.03625913 0.05167941 0 ## NK 0.00000000 0.00000000 0.00000000 0 ## DC 0.08416315 0.03457354 0.04928895 0 ## Platelet 0.00000000 0.00000000 0.00000000 0 6.3.3 汇总及展示细胞通讯网络整体结果 对计算结果汇总整合，展示整体细胞通讯状态 # 整合通讯网络结果 # USER can also calculate the aggregated network among a subset of cell groups by setting sources.use and targets.use. cellchat &lt;- aggregateNet(cellchat) groupSize &lt;- as.numeric(table(cellchat@idents)) # showing the number of interactions or the total interaction strength (weights) between any two cell groups using circle plot. par(mfrow = c(1,2), xpd=TRUE) # 整合的互作对数量展示 netVisual_circle(cellchat@net$count, vertex.weight = groupSize, weight.scale = T, label.edge= F, title.name = &quot;Number of interactions&quot;) # 整合的互作强度数量展示 netVisual_circle(cellchat@net$weight, vertex.weight = groupSize, weight.scale = T, label.edge= F, title.name = &quot;Interaction strength&quot;) # 分细胞类型展示 # control the parameter edge.weight.max so that we can compare edge weights between differet networks. weight_mat &lt;- cellchat@net$weight par(mfrow = c(3,3),mgp=c(0,0,0), xpd=TRUE) for (cel in unique(cellchat@idents)){ cir_mat &lt;- matrix(0, nrow = nrow(weight_mat), ncol = ncol(weight_mat), dimnames = dimnames(weight_mat)) cir_mat[cel, ] &lt;- weight_mat[cel, ] netVisual_circle( cir_mat, vertex.weight= groupSize, weight.scale= T,edge.weight.max = max(weight_mat), vertex.label.cex=0.4,title.name=cel) } 6.4 多种形式的互作通讯网络可视化 在推断出细胞间通信网络之后，CellChat提供了进一步数据探索、分析和可视化的各种功能 It provides several ways for visualizing cell-cell communication network, including hierarchical plot, circle plot, Chord diagram, and bubble plot. It provides an easy-to-use tool for extracting and visualizing high-order information of the inferred networks. For example, it allows ready prediction of major signaling inputs and outputs for cell populations and how these populations and signals coordinate together for functions. It can quantitatively characterize and compare the inferred cell-cell communication networks using an integrated approach by combining social network analysis, pattern recognition, and manifold learning approaches. 6.4.1 信号通路可视化 提供了多种可视化方式： 层次图 圈图 弦图 热图 柱状图 6.4.2 信号通路水平展示 通过整合特定通路的所有受配体对展示推断的信号网络 主要功能函数：netVisual_aggregate par(mfrow = c(1,1), xpd=TRUE) netVisual_aggregate(cellchat, signaling = &quot;MIF&quot;, vertex.receiver=c(1:4) ) netVisual_aggregate(cellchat, signaling = &quot;MIF&quot;, layout = &quot;circle&quot;) netVisual_aggregate(cellchat, signaling = &quot;MIF&quot;, layout = &quot;chord&quot;) ## Note: The second link end is drawn out of sector &#39;CD14+ Mono&#39;. ## Note: The second link end is drawn out of sector &#39;B&#39;. ## 进阶弦图可视化展示 par(mfrow=c(1,1)) levels(cellchat@idents) ## [1] &quot;Naive CD4 T&quot; &quot;Memory CD4 T&quot; &quot;CD14+ Mono&quot; &quot;B&quot; &quot;CD8 T&quot; ## [6] &quot;FCGR3A+ Mono&quot; &quot;NK&quot; &quot;DC&quot; &quot;Platelet&quot; ct_group = c(&#39;T&#39;,&#39;T&#39;,&#39;M&#39;,&#39;B&#39;,&#39;T&#39;,&#39;M&#39;,&#39;MK&#39;,&#39;DC&#39;,&#39;P&#39;) names(ct_group) = levels(cellchat@idents) ct_group ## Naive CD4 T Memory CD4 T CD14+ Mono B CD8 T FCGR3A+ Mono ## &quot;T&quot; &quot;T&quot; &quot;M&quot; &quot;B&quot; &quot;T&quot; &quot;M&quot; ## NK DC Platelet ## &quot;MK&quot; &quot;DC&quot; &quot;P&quot; netVisual_chord_cell(cellchat, signaling= &#39;MIF&#39;, group= ct_group, small.gap=0, big.gap=10 ) ## Plot the aggregated cell-cell communication network at the signaling pathway level ## Note: The second link end is drawn out of sector &#39;CD14+ Mono&#39;. ## Note: The second link end is drawn out of sector &#39;B&#39;. ## 热图可视化展示 # &quot;count&quot;: comparing the number of interactions; &quot;weight&quot;: comparing the total interaction weights (strength) netVisual_heatmap(cellchat, signaling = &quot;MIF&quot;, color.heatmap = &quot;Reds&quot;, measure= &#39;weight&#39;) ## Do heatmap based on a single object netVisual_heatmap(cellchat, signaling = &quot;MIF&quot;, color.heatmap = &quot;Reds&quot;, measure= &#39;count&#39;) ## Do heatmap based on a single object netVisual_heatmap(cellchat, signaling = NULL, color.heatmap = &quot;Reds&quot;, measure= &#39;count&#39;) ## Do heatmap based on a single object ## 通路中互作对贡献程度计算和展示 netAnalysis_contribution(cellchat, signaling = &quot;MIF&quot;) 6.4.3 快速探索推演的网络 netVisual supports an output in the formats of svg, png and pdf. # Access all the signaling pathways showing significant communications # pathways.show.all &lt;- cellchat@netP$pathways # # check the order of cell identity to set suitable vertex.receiver # levels(cellchat@idents) # vertex.receiver = seq(1,4) # for (i in 1:length(pathways.show.all)) { # # Visualize communication network associated with both signaling pathway and individual L-R pairs # netVisual(cellchat, signaling = pathways.show.all[i], vertex.receiver = vertex.receiver, layout = &quot;hierarchy&quot;) # # Compute and visualize the contribution of each ligand-receptor pair to the overall signaling pathway # gg &lt;- netAnalysis_contribution(cellchat, signaling = pathways.show.all[i]) # ggsave(filename=paste0(pathways.show.all[i], &quot;_L-R_contribution.pdf&quot;), plot=gg, width = 3, height = 2, units = &#39;in&#39;, dpi = 300) # } 6.4.4 通讯互作配受体对水平展示 展示指定受配体对的信号网络 主要功能函数：netVisual_individual to extract all the significant interactions (L-R pairs) and related signaling genes for a given signaling pathway. pairLR &lt;- extractEnrichedLR(cellchat, signaling = &quot;ANNEXIN&quot;, geneLR.return = FALSE) pairLR ## interaction_name ## 1 ANXA1_FPR1 netVisual_individual(cellchat, signaling= &quot;ANNEXIN&quot;, pairLR.use= pairLR[1] , vertex.receiver= c(1:4) ) netVisual_individual(cellchat, signaling= &quot;ANNEXIN&quot;, pairLR.use= pairLR[1] , layout = &quot;circle&quot; ) ## [[1]] netVisual_individual(cellchat, signaling= &quot;ANNEXIN&quot;, pairLR.use= &quot;ANXA1_FPR1&quot; , layout = &quot;chord&quot; ) ## Note: The second link end is drawn out of sector &#39;Memory CD4 T&#39;. ## Note: The second link end is drawn out of sector &#39;FCGR3A+ Mono&#39;. ## [[1]] 6.4.5 多个信号通路或互作对的可视化 气泡图展示指定通路或受配体对互作可能性及统计学显著性 主要功能函数：netVisual_bubble # 指定细胞类型 netVisual_bubble(cellchat, sources.use = c(1:5), targets.use = c(3:6), remove.isolate = FALSE ) ## Comparing communications on a single object # 指定信号通路 netVisual_bubble(cellchat, signaling = c(&quot;MIF&quot;,&quot;ANNEXIN&quot;) ) ## Comparing communications on a single object # 指定配受体对 pairLR.use &lt;- extractEnrichedLR(cellchat, signaling = c(&quot;MIF&quot;,&quot;ANNEXIN&quot;,&quot;IL16&quot;)) netVisual_bubble(cellchat, pairLR.use = pairLR.use ) ## Comparing communications on a single object # 信号通路互作基因表达水平 plotGeneExpression(cellchat, signaling = &quot;IL16&quot;) ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will ## replace the existing scale. ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will ## replace the existing scale. netVisual_bubble(cellchat, pairLR.use = extractEnrichedLR(cellchat, signaling=&#39;IL16&#39;) ) ## Comparing communications on a single object 6.5 系统性分析细胞通讯网络 为了便于理解复杂的细胞间通信网络，CellChat通过从图论、模式识别和流形学习中提取的方法量化互作网络 通过网络中心性判断给定信号网络的主要信号来源和目标以及调节者和影响者 利用模式识别的方法预测特定细胞类型的关键输入输出信号 从功能和拓扑学角度将信号通路分组 通过多个网络的联合流形学习来描述保守的和上下文特定的信号通路 6.5.1 识别信号角色和主要贡献信号 CellChat通过计算细胞组的网络中心性识别细胞通讯网络中的：发送者，接收者，调节者和影响者 6.5.2 通路信号角色识别及可视化 To visualize the dominant senders (sources) and receivers (targets) in a 2D space using scatter plot. # 计算网络中心性 cellchat &lt;- netAnalysis_computeCentrality(cellchat, slot.name = &quot;netP&quot;) # 通路网络中心性热图 netAnalysis_signalingRole_network(cellchat, signaling = &quot;MIF&quot;, width = 8, height = 4, font.size = 12) 6.5.3 特定细胞类型中输入输出信号贡献程度 Outgoing：揭示了发送细胞(即作为信号源的细胞)如何相互协调，以及它们如何与特定的信号通路协调以驱动通信 Incoming：展示目标细胞(即作为信号接收器的细胞)如何相互协调，以及它们如何与特定的信号通路协调以响应传入信号 # 信号角色散点图展示 netAnalysis_signalingRole_scatter(cellchat) ## Signaling role analysis on the aggregated cell-cell communication network from all signaling pathways # 热图展示 ht1 &lt;- netAnalysis_signalingRole_heatmap(cellchat, pattern = &quot;outgoing&quot;) ht2 &lt;- netAnalysis_signalingRole_heatmap(cellchat, pattern = &quot;incoming&quot;) ht1 + ht2 6.6 全局信号模式识别 除了对单个信号通路通讯的分析，cellchat还提供了全局通讯模式分析的方法来探索多个细胞和通路对功能的协调. An important question is how multiple cell groups and signaling pathways coordinate to function. 6.6.1 确定信号模式数量 library(NMF) library(ggalluvial) # selectK to infer the number of patterns, which is based on two metrics that have been implemented in the NMF R package, including Cophenetic and Silhouette. selectK(cellchat, pattern = &quot;outgoing&quot;) 6.6.2 识别信号模式 分泌信号类型分为：outgoing和incoming 信号模式有助于探索多个细胞类型或信号通路的协同作用 # Both Cophenetic and Silhouette values begin to drop suddenly when the number of outgoing patterns is 3. nPatterns = 2 # Outgoing patterns reveal how the sender cells (i.e. cells as signal source) coordinate with each other as well as how they coordinate with certain signaling pathways to drive communication. cellchat &lt;- identifyCommunicationPatterns(cellchat, pattern = &quot;outgoing&quot;, k = nPatterns) netAnalysis_river(cellchat, pattern = &quot;outgoing&quot;) ## Please make sure you have load `library(ggalluvial)` when running this function netAnalysis_dot(cellchat, pattern = &quot;outgoing&quot;) # Incoming patterns show how the target cells (i.e. cells as signal receivers) coordinate with each other as well as how they coordinate with certain signaling pathways to respond to incoming signals. # selectK(cellchat, pattern = &quot;incoming&quot;) 6.7 Manifold and classification learning analysis of signaling networks CellChat is able to quantify the similarity between all significant signaling pathways and then group them based on their cellular communication network similarity. Grouping can be done either based on the functional or structural similarity. Functional similarity: High degree of functional similarity indicates major senders and receivers are similar, and it can be interpreted as the two signaling pathways or two ligand-receptor pairs exhibit similar and/or redundant roles. The functional similarity analysis requires the same cell population composition between two datasets. Structural similarity: A structural similarity was used to compare their signaling network structure, without considering the similarity of senders and receivers. cellchat &lt;- computeNetSimilarity(cellchat, type = &quot;structural&quot;) cellchat &lt;- netEmbedding(cellchat, type = &quot;structural&quot;) ## Manifold learning of the signaling networks for a single dataset #&gt; Manifold learning of the signaling networks for a single dataset cellchat &lt;- netClustering(cellchat, type = &quot;structural&quot;) ## Classification learning of the signaling networks for a single dataset #&gt; Classification learning of the signaling networks for a single dataset # Visualization in 2D-space netVisual_embedding(cellchat, type = &quot;structural&quot;, label.size = 3.5) netVisual_embeddingZoomIn(cellchat, type = &quot;structural&quot;, nCol = 2) 6.8 sessionInfo ref: https://github.com/sqjin/CellChat * Install NMF (&gt;= 0.23.0) using install.packages('NMF'). Please check here for other solutions if you encounter any issue. You might can set Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS=TRUE) if it throws R version error. * Install circlize (&gt;= 0.4.12) using devtools::install_github(\"jokergoo/circlize\") if you encounter any issue. * Install ComplexHeatmap using devtools::install_github(\"jokergoo/ComplexHeatmap\") if you encounter any issue. * Install UMAP python pacakge for dimension reduction: pip install umap-learn. Please check here if you encounter any issue. sessionInfo() ## R version 4.0.4 (2021-02-15) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 20.10 ## ## Matrix products: default ## BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 ## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 ## ## locale: ## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ## [3] LC_TIME=en_GB.UTF-8 LC_COLLATE=en_US.UTF-8 ## [5] LC_MONETARY=en_GB.UTF-8 LC_MESSAGES=en_US.UTF-8 ## [7] LC_PAPER=en_GB.UTF-8 LC_NAME=C ## [9] LC_ADDRESS=C LC_TELEPHONE=C ## [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C ## ## attached base packages: ## [1] grid parallel stats4 stats graphics grDevices utils ## [8] datasets methods base ## ## other attached packages: ## [1] doParallel_1.0.16 iterators_1.0.13 foreach_1.5.1 ## [4] ggalluvial_0.12.3 NMF_0.23.0 cluster_2.1.2 ## [7] rngtools_1.5 pkgmaker_0.32.2 registry_0.5-1 ## [10] CellChat_1.0.0 igraph_1.2.6 pheatmap_1.0.12 ## [13] GSVA_1.38.2 enrichplot_1.10.2 GSEABase_1.52.1 ## [16] annotate_1.68.0 XML_3.99-0.6 Rgraphviz_2.34.0 ## [19] topGO_2.42.0 SparseM_1.81 GO.db_3.12.1 ## [22] graph_1.68.0 org.Hs.eg.db_3.12.0 AnnotationDbi_1.52.0 ## [25] IRanges_2.24.1 S4Vectors_0.28.1 Biobase_2.50.0 ## [28] BiocGenerics_0.36.1 clusterProfiler_3.18.1 forcats_0.5.1 ## [31] stringr_1.4.0 dplyr_1.0.5 purrr_0.3.4 ## [34] readr_1.4.0 tidyr_1.1.3 tibble_3.1.1 ## [37] ggplot2_3.3.3 tidyverse_1.3.1 pbmc3k.SeuratData_3.1.4 ## [40] SeuratData_0.2.1 SeuratObject_4.0.0 Seurat_4.0.1 ## ## loaded via a namespace (and not attached): ## [1] rappdirs_0.3.3 scattermore_0.7 ## [3] KEGG.db_3.2.4 coda_0.19-4 ## [5] bit64_4.0.5 knitr_1.32 ## [7] irlba_2.3.3 DelayedArray_0.16.3 ## [9] data.table_1.14.0 rpart_4.1-15 ## [11] RCurl_1.98-1.3 generics_0.1.0 ## [13] cowplot_1.1.1 RSQLite_2.2.5 ## [15] shadowtext_0.0.7 RANN_2.6.1 ## [17] future_1.21.0 bit_4.0.4 ## [19] spatstat.data_2.1-0 xml2_1.3.2 ## [21] lubridate_1.7.10 httpuv_1.5.5 ## [23] SummarizedExperiment_1.20.0 assertthat_0.2.1 ## [25] viridis_0.6.0 xfun_0.22 ## [27] hms_1.0.0 jquerylib_0.1.3 ## [29] evaluate_0.14 promises_1.2.0.1 ## [31] fansi_0.4.2 dbplyr_2.1.1 ## [33] readxl_1.3.1 DBI_1.1.1 ## [35] htmlwidgets_1.5.3 spatstat.geom_2.1-0 ## [37] ellipsis_0.3.1 RSpectra_0.16-0 ## [39] ggnewscale_0.4.5 backports_1.2.1 ## [41] bookdown_0.21 gridBase_0.4-7 ## [43] deldir_0.2-10 MatrixGenerics_1.2.1 ## [45] vctrs_0.3.7 Cairo_1.5-12.2 ## [47] ROCR_1.0-11 abind_1.4-5 ## [49] cachem_1.0.4 withr_2.4.2 ## [51] ggforce_0.3.3 sctransform_0.3.2 ## [53] sna_2.6 goftest_1.2-2 ## [55] svglite_2.0.0 DOSE_3.16.0 ## [57] lazyeval_0.2.2 crayon_1.4.1 ## [59] hdf5r_1.3.3 pkgconfig_2.0.3 ## [61] labeling_0.4.2 tweenr_1.0.2 ## [63] GenomeInfoDb_1.26.7 nlme_3.1-152 ## [65] rlang_0.4.10 globals_0.14.0 ## [67] lifecycle_1.0.0 miniUI_0.1.1.1 ## [69] downloader_0.4 modelr_0.1.8 ## [71] cellranger_1.1.0 polyclip_1.10-0 ## [73] matrixStats_0.58.0 lmtest_0.9-38 ## [75] Matrix_1.3-2 zoo_1.8-9 ## [77] reprex_2.0.0 GlobalOptions_0.1.2 ## [79] ggridges_0.5.3 rjson_0.2.20 ## [81] png_0.1-7 viridisLite_0.4.0 ## [83] bitops_1.0-6 KernSmooth_2.23-18 ## [85] blob_1.2.1 shape_1.4.5 ## [87] qvalue_2.22.0 parallelly_1.24.0 ## [89] scales_1.1.1 memoise_2.0.0 ## [91] magrittr_2.0.1 plyr_1.8.6 ## [93] ica_1.0-2 zlibbioc_1.36.0 ## [95] compiler_4.0.4 scatterpie_0.1.5 ## [97] RColorBrewer_1.1-2 clue_0.3-59 ## [99] fitdistrplus_1.1-3 cli_2.4.0 ## [101] XVector_0.30.0 listenv_0.8.0 ## [103] patchwork_1.1.1 pbapply_1.4-3 ## [105] MASS_7.3-53.1 mgcv_1.8-35 ## [107] tidyselect_1.1.0 stringi_1.5.3 ## [109] gg.gap_1.3 highr_0.9 ## [111] yaml_2.2.1 GOSemSim_2.16.1 ## [113] ggrepel_0.9.1 sass_0.3.1 ## [115] fastmatch_1.1-0 tools_4.0.4 ## [117] future.apply_1.7.0 circlize_0.4.12 ## [119] rstudioapi_0.13 gridExtra_2.3 ## [121] farver_2.1.0 Rtsne_0.15 ## [123] ggraph_2.0.5 digest_0.6.27 ## [125] rvcheck_0.1.8 BiocManager_1.30.12 ## [127] FNN_1.1.3 shiny_1.6.0 ## [129] Rcpp_1.0.6 GenomicRanges_1.42.0 ## [131] broom_0.7.6 later_1.1.0.1 ## [133] RcppAnnoy_0.0.18 httr_1.4.2 ## [135] ComplexHeatmap_2.6.2 colorspace_2.0-0 ## [137] rvest_1.0.0 fs_1.5.0 ## [139] tensor_1.5 reticulate_1.18 ## [141] splines_4.0.4 uwot_0.1.10 ## [143] spatstat.utils_2.1-0 graphlayouts_0.7.1 ## [145] systemfonts_1.0.1 plotly_4.9.3 ## [147] xtable_1.8-4 jsonlite_1.7.2 ## [149] rle_0.9.2 tidygraph_1.2.0 ## [151] R6_2.5.0 pillar_1.6.0 ## [153] htmltools_0.5.1.1 mime_0.10 ## [155] glue_1.4.2 fastmap_1.1.0 ## [157] BiocParallel_1.24.1 codetools_0.2-18 ## [159] fgsea_1.16.0 utf8_1.2.1 ## [161] lattice_0.20-41 bslib_0.2.4 ## [163] spatstat.sparse_2.0-0 network_1.16.1 ## [165] leiden_0.3.7 survival_3.2-10 ## [167] limma_3.46.0 statnet.common_4.4.1 ## [169] rmarkdown_2.7 munsell_0.5.0 ## [171] GetoptLong_1.0.5 DO.db_2.9 ## [173] GenomeInfoDbData_1.2.4 haven_2.4.0 ## [175] reshape2_1.4.4 gtable_0.3.0 ## [177] spatstat.core_2.1-2 "],["single-cell-transcriptomic-landscape-of-human-blood-cells.html", "Chapter 7 Single-cell transcriptomic landscape of human blood cells 7.1 Read scRNA data 7.2 Figure 1B 7.3 Figure 1C 7.4 Figure 1D 7.5 Figure 1E 7.6 sessionInfo", " Chapter 7 Single-cell transcriptomic landscape of human blood cells Reproducible Research of Single-cell transcriptomic landscape of human blood cells Download data from GEO Single-cell Transcriptomic Landscape of Human Blood Cells GSM4201332 BM1 GSM4201333 BM2 GSM4201334 BM3 Single-cell transcriptome landscape of adult HSPC GSM4793029 B cell population GSM4793030 NK cell population GSM4793031 T cell population GSM4793032 Monocyte population GSM4793033 Neutrophil population GSM4793034 Erythrocyte population 7.1 Read scRNA data Data are located in ./ABC/data/GSE137864_HSPC/. 7.1.1 read HSPC data library(Seurat) library(ggplot2) library(Matrix) ## ## Attaching package: &#39;Matrix&#39; ## The following object is masked from &#39;package:S4Vectors&#39;: ## ## expand ## The following objects are masked from &#39;package:tidyr&#39;: ## ## expand, pack, unpack ## HSPC dir_10x &lt;- &quot;./ABC/data/GSE137864_HSPC/&quot; # change names as Read10X needed. dir(dir_10x) ## [1] &quot;barcodes.tsv.gz&quot; &quot;features.tsv.gz&quot; ## [3] &quot;GPL20301.soft&quot; &quot;GSE137864_series_matrix.txt.gz&quot; ## [5] &quot;matrix.mtx.gz&quot; HSPC_raw &lt;- Read10X(dir_10x) HSPC_meta &lt;- GEOquery::getGEO(&quot;GSE137864&quot;, destdir=&quot;./ABC/data/GSE137864_HSPC/&quot;) ## Setting options(&#39;download.file.method.GEOquery&#39;=&#39;auto&#39;) ## Setting options(&#39;GEOquery.inmemory.gpl&#39;=FALSE) ## Found 1 file(s) ## GSE137864_series_matrix.txt.gz ## Using locally cached version: ./ABC/data/GSE137864_HSPC//GSE137864_series_matrix.txt.gz ## ## ── Column specification ──────────────────────────────────────────────────────── ## cols( ## ID_REF = col_character(), ## GSM4201332 = col_character(), ## GSM4201333 = col_character(), ## GSM4201334 = col_character() ## ) ## Using locally cached version of GPL20301 found here: ## ./ABC/data/GSE137864_HSPC//GPL20301.soft HSPC_meta &lt;- Biobase::pData(HSPC_meta$GSE137864_series_matrix.txt.gz) colnames(HSPC_raw) %&gt;% head ## [1] &quot;HSC_BM1_L1_bar1&quot; &quot;HSC_BM1_L1_bar2&quot; &quot;HSC_BM1_L1_bar3&quot; &quot;HSC_BM1_L1_bar5&quot; ## [5] &quot;HSC_BM1_L1_bar6&quot; &quot;HSC_BM1_L1_bar7&quot; 7.1.2 read Blood Cells data ## Blood Cells BC_raw &lt;- read.csv(&quot;./ABC/data/HumanBloodCells/GSE149938_umi_matrix.csv&quot;, check.names=F) BC_mat &lt;- Matrix( t(as.matrix(BC_raw)) ) dim(BC_raw) ## [1] 7643 19813 colnames(BC_mat) %&gt;% head ## [1] &quot;BNK_spBM1_L1_bar25&quot; &quot;BNK_spBM1_L1_bar26&quot; &quot;BNK_spBM1_L1_bar27&quot; ## [4] &quot;BNK_spBM1_L1_bar28&quot; &quot;BNK_spBM1_L1_bar29&quot; &quot;BNK_spBM1_L1_bar30&quot; BC_meta &lt;- GEOquery::getGEO(&quot;GSE149938&quot;, destdir=&quot;./ABC/data/HumanBloodCells/&quot;) ## Found 1 file(s) ## GSE149938_series_matrix.txt.gz ## Using locally cached version: ./ABC/data/HumanBloodCells//GSE149938_series_matrix.txt.gz ## ## ── Column specification ──────────────────────────────────────────────────────── ## cols( ## ID_REF = col_character(), ## GSM4793029 = col_character(), ## GSM4793030 = col_character(), ## GSM4793031 = col_character(), ## GSM4793032 = col_character(), ## GSM4793033 = col_character(), ## GSM4793034 = col_character() ## ) ## Using locally cached version of GPL20301 found here: ## ./ABC/data/HumanBloodCells//GPL20301.soft BC_meta &lt;- Biobase::pData(BC_meta$GSE149938_series_matrix.txt.gz) 7.1.3 Merge two mats to CreateSeuratObject # Merge two mats dim(HSPC_raw) ## [1] 19813 1813 dim(BC_mat) ## [1] 19813 7643 ABC_HSPC_mat &lt;- cbind(HSPC_raw, BC_mat) dim(ABC_HSPC_mat) ## [1] 19813 9456 # distinguish protein-coding genes and lncRNAs # gtf: ftp://ftp.ensembl.org/pub/release-84/gtf/homo_sapiens/ # add genesymols annotation gtf_fn &lt;- &quot;~/data/drug_seq/rawdata/genome/Homo_sapiens.GRCh38.102.gtf&quot; gtf &lt;- rtracklayer::import(gtf_fn) gtf_df &lt;- dplyr::filter(as.data.frame(gtf), type==&quot;gene&quot;) %&gt;% dplyr::select(gene_id, gene_name, gene_biotype) ABC_HSPC_gene &lt;- as.data.frame(rownames(ABC_HSPC_mat)) colnames(ABC_HSPC_gene) &lt;- &quot;gene_name&quot; gene_types &lt;- dplyr::left_join(ABC_HSPC_gene, gtf_df) ## Joining, by = &quot;gene_name&quot; protein_coding_genes &lt;- dplyr::filter(gene_types, gene_biotype==&quot;protein_coding&quot;) %&gt;% dplyr::select(gene_name) %&gt;% unlist(use.names = FALSE) %&gt;% unique() # should use NNONCODE website (http://www.noncode.org/datadownload/NONCODEv6_human_hg38_lncRNA.gtf.gz) lncRNAs &lt;- dplyr::filter(gene_types, gene_biotype==&quot;lncRNA&quot;) %&gt;% dplyr::select(gene_name) %&gt;% unlist(use.names = FALSE) # 7551 single cells ABC &lt;- CreateSeuratObject(count = ABC_HSPC_mat[protein_coding_genes,], project = &#39;ABC&#39;, min.cells = 5, min.features = 1000 ) ABC ## An object of class Seurat ## 17057 features across 9364 samples within 1 assay ## Active assay: RNA (17057 features, 0 variable features) 7.1.3.1 add celltype info. hematopoiesis celltype Ref: 细胞类型鉴定及单细胞数据库-2021.04.24.pdf # cell types cell_types &lt;- readxl::read_xlsx(&quot;./ABC/data/blood_ceel_types.xlsx&quot;, sheet=&quot;Sheet1&quot;) ABC_meta &lt;- dplyr::left_join(ABC@meta.data, cell_types) ## Joining, by = &quot;orig.ident&quot; ABC_meta$group &lt;- factor(ABC_meta$group, levels=c(&quot;HSPC&quot;, &quot;Bcells&quot;, &quot;NK&quot;, &quot;Tcells&quot;, &quot;Monocytes&quot;, &quot;Neutrophils&quot; , &quot;Erythrocytes&quot; ) ) ranked_celltypes &lt;- c(&quot;HSC&quot;, &quot;BNK&quot;, &quot;LMPP&quot;, &quot;MLP&quot;, &quot;MPP&quot;, &quot;CMP&quot;, &quot;MEP&quot;, &quot;GMP&quot;, &quot;memB&quot;, &quot;preB&quot;, &quot;proB&quot;, &quot;immB&quot;, &quot;regB&quot;, &quot;naiB&quot;, &quot;plasma&quot;, &quot;CLP&quot;, &quot;NKP&quot;, &quot;kineNK&quot;, &quot;toxiNK&quot;, &quot;CD4T&quot;, &quot;CD8T&quot;, &quot;claM&quot;, &quot;cMOP&quot;, &quot;hMDP&quot;, &quot;interM&quot;, &quot;nonM&quot;, &quot;preM&quot;, &quot;metaN&quot;, &quot;matureN&quot;, &quot;proN&quot;, &quot;myeN&quot;, &quot;ery&quot;) ABC_meta$orig.ident &lt;- factor(ABC_meta$orig.ident, levels=ranked_celltypes ) rownames(ABC_meta) &lt;- rownames(ABC@meta.data) ABC@meta.data &lt;- ABC_meta # HSPC_types &lt;- unique(gsub(&quot;_.*&quot;,&quot;&quot;,colnames(HSPC_raw))) # HSPC_types &lt;- c(&quot;HSC&quot;, &quot;BNK&quot;, &quot;LMPP&quot;, &quot;MLP&quot;, &quot;MPP&quot;, &quot;CMP&quot;, &quot;MEP&quot;, &quot;GMP&quot; ) # # ABC_meta[which(ABC@meta.data$orig.ident %in% HSPC_types ), &quot;group&quot;] &lt;- &quot;HSPC&quot; # # PB_types &lt;- c(&quot;memB&quot;, &quot;regB&quot;) # # # Neutrophils_types &lt;- c(&quot;metaN&quot;, &quot;myeN&quot;, &quot;matureN&quot;, &quot;proN&quot;, &quot;myeN&quot; ) # # NK_cells_types &lt;- c(&quot;CLP&quot;, &quot;NKP&quot;, &quot;kineNK&quot;, &quot;toxiNK&quot;) # # Bcells_types &lt;- c(&quot;preB&quot;, &quot;proB&quot;, &quot;immB&quot;, &quot;regB&quot;, &quot;naiB&quot;, &quot;plasma&quot;) # Tcells_types &lt;- c(&quot;CD4T&quot;, &quot;CD8T&quot;) # # Erythrocytes_types &lt;- c(&quot;ery&quot;) # Monocytes_types &lt;- c(&quot;claM&quot;, &quot;cMOP&quot;, &quot;hMDP&quot;, &quot;interM&quot;, &quot;nonM&quot;, &quot;preM&quot;) 7.1.3.2 线粒体 ABC &lt;- PercentageFeatureSet(ABC, pattern = &quot;^MT-&quot;, col.name = &quot;percent.mt&quot;) # ABC[[&quot;percent.mt&quot;]] &lt;- PercentageFeatureSet(ABC, pattern = &quot;^MT-&quot;) head(ABC@meta.data) ## orig.ident nCount_RNA nFeature_RNA group cellname percent.mt ## HSC_BM1_L1_bar1 HSC 153232 4697 HSPC HSC 0 ## HSC_BM1_L1_bar2 HSC 61300 3807 HSPC HSC 0 ## HSC_BM1_L1_bar3 HSC 61831 4034 HSPC HSC 0 ## HSC_BM1_L1_bar5 HSC 30637 4156 HSPC HSC 0 ## HSC_BM1_L1_bar6 HSC 37540 4439 HSPC HSC 0 ## HSC_BM1_L1_bar7 HSC 30843 4367 HSPC HSC 0 7.2 Figure 1B # VlnPlot(ABC, features=c(&#39;nFeature_RNA&#39;), group.by = &quot;group&quot;) VlnPlot(ABC, features=c(&#39;nFeature_RNA&#39;), group.by = &quot;orig.ident&quot;) 7.3 Figure 1C #boxplot all genes boxplot(ABC@meta.data$nFeature_RNA) 7.4 Figure 1D 7.4.1 LogNormalize ## ref: https://satijalab.org/seurat/articles/sctransform_vignette.html ## SCTransform replaces NormalizeData, ScaleData, and FindVariableFeatures. ## During normalization, we can also remove confounding sources of variation, ## for example, mitochondrial mapping percentage ABC &lt;- SCTransform(ABC, vars.to.regress = &quot;percent.mt&quot;, verbose = FALSE) # ABC &lt;- NormalizeData(object=ABC, # normalization.method= &#39;LogNormalize&#39;, # scale.factor=10000 ) 7.4.2 筛选高变基因 # ABC &lt;- FindVariableFeatures(ABC, # selection.method = &quot;vst&quot;, # nfeatures = 2000) # head(VariableFeatures(ABC)) # # ABC &lt;- ScaleData(ABC) 7.4.3 筛选高变基因 and PCA降维 # hvg &lt;- VariableFeatures(object = ABC) # ABC &lt;- RunPCA(ABC, features = hvg ) ABC &lt;- RunPCA(ABC ) ## PC_ 1 ## Positive: S100A9, S100A8, LYZ, MNDA, FCN1, S100A12, SERPINA1, TYROBP, LTF, S100A11 ## CTSS, COTL1, FGR, FCER1G, IFITM2, C5AR1, CSF3R, CYBB, CYP4F3, G0S2 ## NAMPT, SRGN, FPR1, MMP9, LCN2, FCGR3B, MYO1F, PLBD1, NCF2, CAMP ## Negative: HBB, HBA2, HBA1, AHSP, CA1, HBD, HBM, BLVRB, GYPA, ALAS2 ## PRDX2, GYPB, SLC4A1, CA2, HEMGN, HMBS, RHAG, SELENBP1, RPS27, MGST3 ## DNTT, IGLL1, VPREB3, MYL4, SNCA, UROD, SLC25A39, EIF1AY, VPREB1, TFRC ## PC_ 2 ## Positive: HBA1, HBB, HBA2, AHSP, CA1, HBD, HBM, GYPA, BLVRB, ALAS2 ## SLC4A1, GYPB, CA2, SLC25A37, PRDX2, HMBS, HEMGN, S100A9, S100A8, RHAG ## CD36, SELENBP1, MGST3, DEFA3, LYZ, LGALS3, S100A6, MYL4, MNDA, SNCA ## Negative: CD79B, CD79A, VPREB3, CD52, MS4A1, DNTT, TCL1A, CD74, CD69, HLA-DRA ## IGLL1, VPREB1, RPS27, CXCR4, MZB1, PAX5, SOX4, TMSB4X, B2M, BIRC3 ## TMSB10, BANK1, CD9, SPIB, NEIL1, HLA-DRB1, ARPP21, PCDH9, HLA-DRB5, JUN ## PC_ 3 ## Positive: TCL1A, MS4A1, CD79B, CD79A, VPREB3, PAX5, CD69, HBA2, SPIB, HBB ## HBA1, BANK1, CD52, CA1, AHSP, FCRL1, RALGPS2, PCDH9, CXCR4, NEIL1 ## HLA-DRA, BIRC3, CD74, HBD, IKZF3, HBM, CD24, CD83, AFF3, CD22 ## Negative: MPO, ELANE, SPINK2, PRTN3, AZU1, SRGN, RNASE2, NKG7, IL32, AIF1 ## AVP, CST7, HOPX, LYZ, PRSS57, ANXA1, MT2A, CTSW, CRHBP, CLEC11A ## LGALS1, CALR, SMIM24, CCL5, CD3D, HCST, CTSG, CYTL1, EREG, TSC22D1 ## PC_ 4 ## Positive: LTF, LCN2, PGLYRP1, CYP4F3, CAMP, S100P, CD24, MMP9, CRISP3, DEFA3 ## S100A12, DNTT, MMP8, ANXA3, BPI, ALOX5AP, PADI4, IGLL1, CEACAM8, VPREB1 ## S100A8, CD177, FCGR3B, ITGAM, RETN, GCA, ARG1, CHI3L1, VPREB3, MMP25 ## Negative: PSAP, CTSS, SERPINA1, FGL2, CST3, FCGR3A, MS4A7, COTL1, MPEG1, VCAN ## TYROBP, MAFB, FCER1G, SAMHD1, SAT1, KLF4, FOS, FOSB, TMEM176B, S100A10 ## TNFRSF1B, POU2F2, TGFBI, NFKBIZ, CD52, ZFP36, CD300E, LST1, AHNAK, CD14 ## PC_ 5 ## Positive: IL32, CCL5, NKG7, CD3D, GZMA, PRF1, GZMH, GNLY, CD52, GZMB ## CD3G, FGFBP2, CST7, KLRD1, CD2, CD3E, CTSW, LCK, CD8B, B2M ## CD8A, SYNE2, CD247, MS4A1, HCST, IFITM1, DUSP2, CCL4, PYHIN1, IFITM2 ## Negative: DNTT, IGLL1, VPREB1, VPREB3, CD79B, MPO, ARPP21, CD9, LYZ, SOX4 ## AKAP12, VCAN, MZB1, STMN1, RNASE2, PRTN3, PTPRE, LCN6, ELANE, MME ## CST3, AZU1, FCN1, PSAP, NEIL1, SERPINA1, FOS, FOSB, KLF4, CMTM8 ElbowPlot(ABC) 7.4.4 聚类分簇 ABC &lt;- FindNeighbors(ABC, reduction = &quot;pca&quot;, dims = 1:15) ## Computing nearest neighbor graph ## Computing SNN ABC &lt;- FindClusters(ABC, resolution = 0.5) ## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck ## ## Number of nodes: 9364 ## Number of edges: 287258 ## ## Running Louvain algorithm... ## Maximum modularity in 10 random starts: 0.9396 ## Number of communities: 22 ## Elapsed time: 0 seconds head(ABC@meta.data) ## orig.ident nCount_RNA nFeature_RNA group cellname percent.mt ## HSC_BM1_L1_bar1 HSC 153232 4697 HSPC HSC 0 ## HSC_BM1_L1_bar2 HSC 61300 3807 HSPC HSC 0 ## HSC_BM1_L1_bar3 HSC 61831 4034 HSPC HSC 0 ## HSC_BM1_L1_bar5 HSC 30637 4156 HSPC HSC 0 ## HSC_BM1_L1_bar6 HSC 37540 4439 HSPC HSC 0 ## HSC_BM1_L1_bar7 HSC 30843 4367 HSPC HSC 0 ## nCount_SCT nFeature_SCT SCT_snn_res.0.5 seurat_clusters ## HSC_BM1_L1_bar1 37956 3769 6 6 ## HSC_BM1_L1_bar2 38263 3790 6 6 ## HSC_BM1_L1_bar3 38005 4027 5 5 ## HSC_BM1_L1_bar5 37563 4156 2 2 ## HSC_BM1_L1_bar6 37705 4439 2 2 ## HSC_BM1_L1_bar7 37553 4367 6 6 levels(ABC) ## [1] &quot;0&quot; &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot; &quot;5&quot; &quot;6&quot; &quot;7&quot; &quot;8&quot; &quot;9&quot; &quot;10&quot; &quot;11&quot; &quot;12&quot; &quot;13&quot; &quot;14&quot; ## [16] &quot;15&quot; &quot;16&quot; &quot;17&quot; &quot;18&quot; &quot;19&quot; &quot;20&quot; &quot;21&quot; 7.4.5 单细胞聚类可视化 ABC &lt;- RunUMAP(ABC, reduction = &quot;pca&quot;, dims = 1:30, verbose=TRUE ) ## 00:20:51 UMAP embedding parameters a = 0.9922 b = 1.112 ## 00:20:51 Read 9364 rows and found 30 numeric columns ## 00:20:51 Using Annoy for neighbor search, n_neighbors = 30 ## 00:20:51 Building Annoy index with metric = cosine, n_trees = 50 ## 0% 10 20 30 40 50 60 70 80 90 100% ## [----|----|----|----|----|----|----|----|----|----| ## **************************************************| ## 00:20:52 Writing NN index file to temp file /tmp/RtmpUX67IS/file8278bbc660d4 ## 00:20:52 Searching Annoy index using 4 threads, search_k = 3000 ## 00:20:52 Annoy recall = 100% ## 00:20:54 Commencing smooth kNN distance calibration using 4 threads ## 00:20:57 Initializing from normalized Laplacian + noise ## 00:20:58 Commencing optimization for 500 epochs, with 360614 positive edges ## 00:21:08 Optimization finished DimPlot(ABC, reduction = &quot;umap&quot;, label=TRUE) 7.5 Figure 1E 7.5.1 细胞簇差异基因分析 all_markers &lt;- FindAllMarkers(ABC, only.pos = TRUE, min.pct= 0.1, logfc.threshold= 0.25) head(all_markers) ## p_val avg_log2FC pct.1 pct.2 p_val_adj cluster gene ## AVP 0.000000e+00 1.2878495 0.809 0.196 0.000000e+00 0 AVP ## ABCB1 5.930955e-279 1.4981573 0.631 0.136 1.011643e-274 0 ABCB1 ## ROS1 6.380195e-273 0.6759969 0.389 0.046 1.088270e-268 0 ROS1 ## RPL31 1.800806e-266 0.9301858 1.000 0.999 3.071634e-262 0 RPL31 ## CRHBP 7.394411e-266 1.7369954 0.704 0.177 1.261265e-261 0 CRHBP ## RPS24 4.585922e-262 1.0209993 1.000 0.996 7.822207e-258 0 RPS24 library(dplyr) top_markers &lt;- all_markers %&gt;% group_by( cluster) %&gt;% top_n( n = 5, wt= avg_log2FC ) top_markers ## # A tibble: 110 x 7 ## # Groups: cluster [22] ## p_val avg_log2FC pct.1 pct.2 p_val_adj cluster gene ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; &lt;chr&gt; ## 1 1.77e-237 2.24 0.741 0.247 3.01e-233 0 SLC2A5 ## 2 1.37e-236 2.30 0.776 0.297 2.34e-232 0 HOXA9 ## 3 9.82e-235 2.35 0.768 0.275 1.68e-230 0 HOPX ## 4 3.44e-191 3.77 0.367 0.065 5.87e-187 0 PRSS2 ## 5 4.84e-107 2.27 0.904 0.667 8.26e-103 0 MT2A ## 6 0 5.76 0.999 0.073 0 1 MS4A1 ## 7 0 4.30 0.939 0.138 0 1 BANK1 ## 8 0 4.04 0.692 0.029 0 1 FCER2 ## 9 0 3.86 0.926 0.273 0 1 RALGPS2 ## 10 0 3.76 0.94 0.23 0 1 CD83 ## # … with 100 more rows DoHeatmap(ABC, features = top_markers$gene) + NoLegend() # saveRDS(ABC, file=&quot;./ABC/ABC.RDS&quot;) 7.5.2 marker基因展示 # marker_genes = c(&quot;AVP&quot;, &quot;CCR7&quot;, &quot;CD79E&quot;, &quot;GATA1&quot;, &quot;GZMH&quot;, &quot;SPI1&quot;) ## cluster 0 marker_genes &lt;- top_markers$gene[1:4] VlnPlot(ABC, features =marker_genes, pt.size= 0) FeaturePlot(ABC, features = marker_genes ) 7.6 sessionInfo sessionInfo() ## R version 4.0.4 (2021-02-15) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 20.10 ## ## Matrix products: default ## BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 ## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 ## ## locale: ## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ## [3] LC_TIME=en_GB.UTF-8 LC_COLLATE=en_US.UTF-8 ## [5] LC_MONETARY=en_GB.UTF-8 LC_MESSAGES=en_US.UTF-8 ## [7] LC_PAPER=en_GB.UTF-8 LC_NAME=C ## [9] LC_ADDRESS=C LC_TELEPHONE=C ## [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C ## ## attached base packages: ## [1] grid parallel stats4 stats graphics grDevices utils ## [8] datasets methods base ## ## other attached packages: ## [1] Matrix_1.3-2 doParallel_1.0.16 iterators_1.0.13 ## [4] foreach_1.5.1 ggalluvial_0.12.3 NMF_0.23.0 ## [7] cluster_2.1.2 rngtools_1.5 pkgmaker_0.32.2 ## [10] registry_0.5-1 CellChat_1.0.0 igraph_1.2.6 ## [13] pheatmap_1.0.12 GSVA_1.38.2 enrichplot_1.10.2 ## [16] GSEABase_1.52.1 annotate_1.68.0 XML_3.99-0.6 ## [19] Rgraphviz_2.34.0 topGO_2.42.0 SparseM_1.81 ## [22] GO.db_3.12.1 graph_1.68.0 org.Hs.eg.db_3.12.0 ## [25] AnnotationDbi_1.52.0 IRanges_2.24.1 S4Vectors_0.28.1 ## [28] Biobase_2.50.0 BiocGenerics_0.36.1 clusterProfiler_3.18.1 ## [31] forcats_0.5.1 stringr_1.4.0 dplyr_1.0.5 ## [34] purrr_0.3.4 readr_1.4.0 tidyr_1.1.3 ## [37] tibble_3.1.1 ggplot2_3.3.3 tidyverse_1.3.1 ## [40] pbmc3k.SeuratData_3.1.4 SeuratData_0.2.1 SeuratObject_4.0.0 ## [43] Seurat_4.0.1 ## ## loaded via a namespace (and not attached): ## [1] rappdirs_0.3.3 rtracklayer_1.50.0 ## [3] scattermore_0.7 KEGG.db_3.2.4 ## [5] coda_0.19-4 bit64_4.0.5 ## [7] knitr_1.32 irlba_2.3.3 ## [9] DelayedArray_0.16.3 data.table_1.14.0 ## [11] rpart_4.1-15 GEOquery_2.58.0 ## [13] RCurl_1.98-1.3 generics_0.1.0 ## [15] cowplot_1.1.1 RSQLite_2.2.5 ## [17] shadowtext_0.0.7 RANN_2.6.1 ## [19] future_1.21.0 bit_4.0.4 ## [21] spatstat.data_2.1-0 xml2_1.3.2 ## [23] lubridate_1.7.10 httpuv_1.5.5 ## [25] SummarizedExperiment_1.20.0 assertthat_0.2.1 ## [27] viridis_0.6.0 xfun_0.22 ## [29] hms_1.0.0 jquerylib_0.1.3 ## [31] evaluate_0.14 promises_1.2.0.1 ## [33] fansi_0.4.2 dbplyr_2.1.1 ## [35] readxl_1.3.1 DBI_1.1.1 ## [37] htmlwidgets_1.5.3 spatstat.geom_2.1-0 ## [39] ellipsis_0.3.1 RSpectra_0.16-0 ## [41] ggnewscale_0.4.5 backports_1.2.1 ## [43] bookdown_0.21 gridBase_0.4-7 ## [45] deldir_0.2-10 MatrixGenerics_1.2.1 ## [47] vctrs_0.3.7 Cairo_1.5-12.2 ## [49] ROCR_1.0-11 abind_1.4-5 ## [51] cachem_1.0.4 withr_2.4.2 ## [53] ggforce_0.3.3 sctransform_0.3.2 ## [55] GenomicAlignments_1.26.0 sna_2.6 ## [57] goftest_1.2-2 svglite_2.0.0 ## [59] DOSE_3.16.0 lazyeval_0.2.2 ## [61] crayon_1.4.1 hdf5r_1.3.3 ## [63] pkgconfig_2.0.3 labeling_0.4.2 ## [65] tweenr_1.0.2 GenomeInfoDb_1.26.7 ## [67] nlme_3.1-152 rlang_0.4.10 ## [69] globals_0.14.0 lifecycle_1.0.0 ## [71] miniUI_0.1.1.1 downloader_0.4 ## [73] modelr_0.1.8 cellranger_1.1.0 ## [75] polyclip_1.10-0 matrixStats_0.58.0 ## [77] lmtest_0.9-38 zoo_1.8-9 ## [79] reprex_2.0.0 GlobalOptions_0.1.2 ## [81] ggridges_0.5.3 rjson_0.2.20 ## [83] png_0.1-7 viridisLite_0.4.0 ## [85] bitops_1.0-6 KernSmooth_2.23-18 ## [87] Biostrings_2.58.0 blob_1.2.1 ## [89] shape_1.4.5 qvalue_2.22.0 ## [91] parallelly_1.24.0 scales_1.1.1 ## [93] memoise_2.0.0 magrittr_2.0.1 ## [95] plyr_1.8.6 ica_1.0-2 ## [97] zlibbioc_1.36.0 compiler_4.0.4 ## [99] scatterpie_0.1.5 RColorBrewer_1.1-2 ## [101] clue_0.3-59 fitdistrplus_1.1-3 ## [103] Rsamtools_2.6.0 cli_2.4.0 ## [105] XVector_0.30.0 listenv_0.8.0 ## [107] patchwork_1.1.1 pbapply_1.4-3 ## [109] MASS_7.3-53.1 mgcv_1.8-35 ## [111] tidyselect_1.1.0 stringi_1.5.3 ## [113] gg.gap_1.3 highr_0.9 ## [115] yaml_2.2.1 GOSemSim_2.16.1 ## [117] ggrepel_0.9.1 sass_0.3.1 ## [119] fastmatch_1.1-0 tools_4.0.4 ## [121] future.apply_1.7.0 circlize_0.4.12 ## [123] rstudioapi_0.13 gridExtra_2.3 ## [125] farver_2.1.0 Rtsne_0.15 ## [127] ggraph_2.0.5 digest_0.6.27 ## [129] rvcheck_0.1.8 BiocManager_1.30.12 ## [131] FNN_1.1.3 shiny_1.6.0 ## [133] Rcpp_1.0.6 GenomicRanges_1.42.0 ## [135] broom_0.7.6 later_1.1.0.1 ## [137] RcppAnnoy_0.0.18 httr_1.4.2 ## [139] ComplexHeatmap_2.6.2 colorspace_2.0-0 ## [141] rvest_1.0.0 fs_1.5.0 ## [143] tensor_1.5 reticulate_1.18 ## [145] splines_4.0.4 uwot_0.1.10 ## [147] spatstat.utils_2.1-0 graphlayouts_0.7.1 ## [149] systemfonts_1.0.1 plotly_4.9.3 ## [151] xtable_1.8-4 jsonlite_1.7.2 ## [153] rle_0.9.2 tidygraph_1.2.0 ## [155] R6_2.5.0 pillar_1.6.0 ## [157] htmltools_0.5.1.1 mime_0.10 ## [159] glue_1.4.2 fastmap_1.1.0 ## [161] BiocParallel_1.24.1 codetools_0.2-18 ## [163] fgsea_1.16.0 utf8_1.2.1 ## [165] lattice_0.20-41 bslib_0.2.4 ## [167] spatstat.sparse_2.0-0 network_1.16.1 ## [169] curl_4.3 leiden_0.3.7 ## [171] survival_3.2-10 limma_3.46.0 ## [173] statnet.common_4.4.1 rmarkdown_2.7 ## [175] munsell_0.5.0 GetoptLong_1.0.5 ## [177] DO.db_2.9 GenomeInfoDbData_1.2.4 ## [179] haven_2.4.0 reshape2_1.4.4 ## [181] gtable_0.3.0 spatstat.core_2.1-2 "],["references.html", "Chapter 8 References 8.1 Python 8.2 Analysis of single cell RNA-seq data 分析流程 8.3 Assigning cell types with SingleR # 细胞类型注释 8.4 Museum of Spatial Transcriptomics # 空转简史 8.5 ATAC 分析 Archr 8.6 monocl and velocyto 8.7 integraton 8.8 Gene set enrichment 8.9 转录因子 8.10 Reproducible research 8.11 基因调控 8.12 cell annotation 8.13 空间分析", " Chapter 8 References 8.1 Python https://www.runoob.com/python/python-basic-syntax.html 8.2 Analysis of single cell RNA-seq data 分析流程 https://scrnaseq-course.cog.sanger.ac.uk/website/index.html Orchestrating Single-Cell Analysis with Bioconductor # 分析流程 http://bioconductor.org/books/release/OSCA/ https://github.com/singleron-RD/CeleScope https://scrnaseq-course.cog.sanger.ac.uk/website/index.html https://satijalab.org/seurat/ TO do https://github.com/bvieth/scRNA-seq-pipelines 8.3 Assigning cell types with SingleR # 细胞类型注释 http://bioconductor.org/books/release/SingleRBook/ 8.4 Museum of Spatial Transcriptomics # 空转简史 https://bookdown.org/lambdamoses/museumst/ 8.5 ATAC 分析 Archr https://www.archrproject.com/bookdown/index.html#section 8.6 monocl and velocyto http://cole-trapnell-lab.github.io/monocle-release/docs/ http://velocyto.org/velocyto.py/index.html https://www.jianshu.com/p/d2991fa79a3e https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/Rpackages/WGCNA/Tutorials/index.html 8.7 integraton https://satijalab.org/seurat/articles/integration_large_datasets.html 8.8 Gene set enrichment http://yulab-smu.top/clusterProfiler-book/ https://www.bioconductor.org/packages/release/bioc/html/GSVA.html http://bioconductor.org/packages/3.12/data/annotation/ 如何取子集 https://www.jianshu.com/p/50e2b6ff10d8 提取Seurat数据做GSEA https://www.jianshu.com/p/e9b59353cd3a http://www.bioconductor.org/packages/release/bioc/vignettes/fgsea/inst/doc/fgsea-tutorial.html 8.9 转录因子 http://bioinfo.life.hust.edu.cn/AnimalTFDB#!/download 8.10 Reproducible research Tambalo M, Mitter R, Wilkinson DG. A single cell transcriptome atlas of the developing zebrafish hindbrain. Development. 2020 Mar 16;147(6):dev184143. doi: 10.1242/dev.184143. PMID: 32094115; PMCID: PMC7097387. https://github.com/crickbabs/ZebrafishDevelopingHindbrainAtlas 8.11 基因调控 GENIE3 || 基因调控网络推断 https://www.jianshu.com/p/893654f39a78 RcisTarget || 从基因列表到调控网络 https://www.jianshu.com/p/6e1d71db4220 8.12 cell annotation http://biocc.hrbmu.edu.cn/CellMarker/ https://panglaodb.se/ https://www.jianshu.com/p/01a594013e8a #clusterProfiler也能做细胞类型鉴定 8.13 空间分析 https://www.jianshu.com/nb/48767585 http://www.cellchat.org/ https://github.com/sqjin/CellChat "]]
